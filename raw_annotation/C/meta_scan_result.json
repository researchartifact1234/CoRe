{
    "1": {
        "filepath": "code/codenet_p00127_s030774702_ope_line_5_39.c",
        "function_end_line": 39,
        "function_id": 1,
        "function_name": "ope_line",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(c == EOF)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(c == '\\n')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(c == '\\n' || c == EOF)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "(b_na)",
                "else_branch_end_line": 35,
                "else_branch_start_line": 31,
                "true_branch_end_line": 30,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(c == EOF)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "(c != '\\n' && c != EOF)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": []
    },
    "2": {
        "filepath": "code/codenet_p00127_s030774702_ope_line_5_39.c",
        "function_end_line": 49,
        "function_id": 2,
        "function_name": "main",
        "function_start_line": 40,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(!ope_line())",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "(true)",
                "loop_body_end_line": 46,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 43
            }
        ],
        "parameters": [
            [
                "argc",
                41,
                0
            ],
            [
                "argv",
                41,
                1
            ]
        ]
    },
    "3": {
        "filepath": "code/codenet_p00496_s700056700_main_12_40.c",
        "function_end_line": 11,
        "function_id": 3,
        "function_name": "getint",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "(*p >= '0')",
                "loop_body_end_line": 9,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 9,
                "loop_statement_start_line": 9
            }
        ],
        "parameters": []
    },
    "4": {
        "filepath": "code/codenet_p00496_s700056700_main_12_40.c",
        "function_end_line": 40,
        "function_id": 4,
        "function_name": "main",
        "function_start_line": 12,
        "if_statements": [
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(k >= 0 && (s <= k || j <= s))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "i = 1; i <= n; i++",
                "loop_body_end_line": 28,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "i = 1; i <= n; i++",
                "loop_body_end_line": 37,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "j = 1; j <= t; j++",
                "loop_body_end_line": 37,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": []
    },
    "5": {
        "filepath": "code/codenet_p00736_s631138606_F_3_85.c",
        "function_end_line": 85,
        "function_id": 5,
        "function_name": "F",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(ft[ic]=='P')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 10
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "(ft[ic]=='Q')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(ft[ic]=='R')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "(ft[ic]=='0')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(ft[ic]=='1')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(ft[ic]=='2')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(ft[ic]=='+')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(ft[ic]=='-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(ft[ic]=='*')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(fit[x]==3)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(fit[x-1]==0&&fit[x-2]==0)",
                "else_branch_end_line": 51,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(fit[x-1]==2||fit[x-2]==2)",
                "else_branch_end_line": 51,
                "else_branch_start_line": 49,
                "true_branch_end_line": 48,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "(fit[x]==4)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "(fit[x]==5)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 81,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "(fit[x-1]==0||fit[x-2]==0)",
                "else_branch_end_line": 75,
                "else_branch_start_line": 70,
                "true_branch_end_line": 69,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "(fit[x-1]==2&&fit[x-2]==2)",
                "else_branch_end_line": 75,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 70
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "t=0;t<100;t++",
                "loop_body_end_line": 8,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "t=x-1;t<=ic;t++",
                "loop_body_end_line": 55,
                "loop_body_start_line": 53,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "t=x;t<=ic;t++",
                "loop_body_end_line": 63,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 61
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "t=x-1;t<=ic;t++",
                "loop_body_end_line": 79,
                "loop_body_start_line": 77,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "(ic<fc)",
                "loop_body_end_line": 37,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "(x<ic)",
                "loop_body_end_line": 82,
                "loop_body_start_line": 42,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 41
            }
        ],
        "parameters": [
            [
                "fc",
                3,
                4
            ],
            [
                "r",
                3,
                2
            ],
            [
                "ft",
                3,
                3
            ],
            [
                "p",
                3,
                0
            ],
            [
                "q",
                3,
                1
            ]
        ]
    },
    "6": {
        "filepath": "code/codenet_p00736_s631138606_F_3_85.c",
        "function_end_line": 183,
        "function_id": 6,
        "function_name": "main",
        "function_start_line": 86,
        "if_statements": [
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "(txt[0]=='.')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 91
            },
            {
                "condition_end_line": 96,
                "condition_start_line": 96,
                "condition_str": "(txt[c]==0||txt[c]==1||txt[c]==2||txt[c]=='P'||txt[c]=='Q'||txt[c]=='R')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 106,
                "true_branch_start_line": 96
            },
            {
                "condition_end_line": 99,
                "condition_start_line": 99,
                "condition_str": "(nc!=0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 105,
                "true_branch_start_line": 99
            },
            {
                "condition_end_line": 107,
                "condition_start_line": 107,
                "condition_str": "(txt[c]=='+')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 121,
                "true_branch_start_line": 107
            },
            {
                "condition_end_line": 108,
                "condition_start_line": 108,
                "condition_str": "(oc==0||op[oc]=='(')",
                "else_branch_end_line": 120,
                "else_branch_start_line": 112,
                "true_branch_end_line": 111,
                "true_branch_start_line": 108
            },
            {
                "condition_end_line": 122,
                "condition_start_line": 122,
                "condition_str": "(txt[c]=='*')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 136,
                "true_branch_start_line": 122
            },
            {
                "condition_end_line": 123,
                "condition_start_line": 123,
                "condition_str": "(oc==0||op[oc]=='+'||op[oc]=='(')",
                "else_branch_end_line": 135,
                "else_branch_start_line": 127,
                "true_branch_end_line": 126,
                "true_branch_start_line": 123
            },
            {
                "condition_end_line": 137,
                "condition_start_line": 137,
                "condition_str": "(txt[c]=='(')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 140,
                "true_branch_start_line": 137
            },
            {
                "condition_end_line": 141,
                "condition_start_line": 141,
                "condition_str": "(txt[c]==')')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 149,
                "true_branch_start_line": 141
            },
            {
                "condition_end_line": 150,
                "condition_start_line": 150,
                "condition_str": "(txt[c]=='-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 153,
                "true_branch_start_line": 150
            },
            {
                "condition_end_line": 155,
                "condition_start_line": 155,
                "condition_str": "(oc!=0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 161,
                "true_branch_start_line": 155
            },
            {
                "condition_end_line": 174,
                "condition_start_line": 174,
                "condition_str": "(F(p,q,r,ft,fc)==2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 176,
                "true_branch_start_line": 174
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 95,
                "header_start_line": 95,
                "header_str": "c=0;c<strlen(txt);c++",
                "loop_body_end_line": 154,
                "loop_body_start_line": 95,
                "loop_statement_end_line": 154,
                "loop_statement_start_line": 95
            },
            {
                "header_end_line": 162,
                "header_start_line": 162,
                "header_str": "c=1;c<=fc;c++",
                "loop_body_end_line": 164,
                "loop_body_start_line": 162,
                "loop_statement_end_line": 164,
                "loop_statement_start_line": 162
            },
            {
                "header_end_line": 166,
                "header_start_line": 166,
                "header_str": "c=0;c<100;c++",
                "loop_body_end_line": 168,
                "loop_body_start_line": 166,
                "loop_statement_end_line": 168,
                "loop_statement_start_line": 166
            },
            {
                "header_end_line": 171,
                "header_start_line": 171,
                "header_str": "p=0;p<3;p++",
                "loop_body_end_line": 179,
                "loop_body_start_line": 171,
                "loop_statement_end_line": 179,
                "loop_statement_start_line": 171
            },
            {
                "header_end_line": 172,
                "header_start_line": 172,
                "header_str": "q=0;q<3;q++",
                "loop_body_end_line": 178,
                "loop_body_start_line": 172,
                "loop_statement_end_line": 178,
                "loop_statement_start_line": 172
            },
            {
                "header_end_line": 173,
                "header_start_line": 173,
                "header_str": "r=0;r<3;r++",
                "loop_body_end_line": 177,
                "loop_body_start_line": 173,
                "loop_statement_end_line": 177,
                "loop_statement_start_line": 173
            },
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "(1)",
                "loop_body_end_line": 180,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 181,
                "loop_statement_start_line": 89
            },
            {
                "header_end_line": 100,
                "header_start_line": 100,
                "header_str": "(nc!=0)",
                "loop_body_end_line": 103,
                "loop_body_start_line": 101,
                "loop_statement_end_line": 104,
                "loop_statement_start_line": 100
            },
            {
                "header_end_line": 113,
                "header_start_line": 113,
                "header_str": "(oc!=0)",
                "loop_body_end_line": 116,
                "loop_body_start_line": 114,
                "loop_statement_end_line": 117,
                "loop_statement_start_line": 113
            },
            {
                "header_end_line": 128,
                "header_start_line": 128,
                "header_str": "(oc!=0)",
                "loop_body_end_line": 131,
                "loop_body_start_line": 129,
                "loop_statement_end_line": 132,
                "loop_statement_start_line": 128
            },
            {
                "header_end_line": 142,
                "header_start_line": 142,
                "header_str": "(op[oc]!='(')",
                "loop_body_end_line": 145,
                "loop_body_start_line": 143,
                "loop_statement_end_line": 146,
                "loop_statement_start_line": 142
            },
            {
                "header_end_line": 156,
                "header_start_line": 156,
                "header_str": "(oc!=0)",
                "loop_body_end_line": 159,
                "loop_body_start_line": 157,
                "loop_statement_end_line": 160,
                "loop_statement_start_line": 156
            }
        ],
        "parameters": []
    },
    "7": {
        "filepath": "code/codenet_p00774_s985716563_main_10_99.c",
        "function_end_line": 9,
        "function_id": 7,
        "function_name": "min",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "(a > b)",
                "else_branch_end_line": 8,
                "else_branch_start_line": 6,
                "true_branch_end_line": 6,
                "true_branch_start_line": 4
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                3,
                0
            ],
            [
                "b",
                3,
                1
            ]
        ]
    },
    "8": {
        "filepath": "code/codenet_p00774_s985716563_main_10_99.c",
        "function_end_line": 99,
        "function_id": 8,
        "function_name": "main",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(a[0][i] == a[1][i] && a[1][i] == a[2][i] && a[0][i] != 0)",
                "else_branch_end_line": 72,
                "else_branch_start_line": 55,
                "true_branch_end_line": 55,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(a[2][i] == a[3][i])",
                "else_branch_end_line": 54,
                "else_branch_start_line": 49,
                "true_branch_end_line": 49,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(a[3][i] == a[4][i])",
                "else_branch_end_line": 48,
                "else_branch_start_line": 43,
                "true_branch_end_line": 43,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(a[1][i] == a[2][i] && a[2][i] == a[3][i] && a[1][i] != 0)",
                "else_branch_end_line": 72,
                "else_branch_start_line": 67,
                "true_branch_end_line": 67,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "(a[3][i] == a[4][i])",
                "else_branch_end_line": 66,
                "else_branch_start_line": 61,
                "true_branch_end_line": 61,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "(a[2][i] == a[3][i] && a[3][i] == a[4][i] && a[2][i] != 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 72,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "(b[j][i] == 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 85,
                "condition_start_line": 85,
                "condition_str": "(a[j][i] == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 89,
                "true_branch_start_line": 85
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "int i = 0; i < 20; i++",
                "loop_body_end_line": 22,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 21,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "int i = 0; i < n; i++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "int i = 0; i < n; i++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "int i = 0; i < n; i++",
                "loop_body_end_line": 73,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 73,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 42,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "int j = 0; j < 4; j++",
                "loop_body_end_line": 47,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 45
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "int j = 0; j < 3; j++",
                "loop_body_end_line": 53,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "int j = 1; j < 5; j++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "int j = 1; j < 4; j++",
                "loop_body_end_line": 65,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "int j = 2; j < 5; j++",
                "loop_body_end_line": 71,
                "loop_body_start_line": 69,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "int i = 0; i < n; i++",
                "loop_body_end_line": 81,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 81,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 80,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "int e = 0; e < n; e++",
                "loop_body_end_line": 92,
                "loop_body_start_line": 82,
                "loop_statement_end_line": 92,
                "loop_statement_start_line": 82
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "int i = 0; i < n; i++",
                "loop_body_end_line": 91,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 83
            },
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "int j = 0; j < 5; j++",
                "loop_body_end_line": 90,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 84
            },
            {
                "header_end_line": 86,
                "header_start_line": 86,
                "header_str": "int l = i; l < 10; l++",
                "loop_body_end_line": 88,
                "loop_body_start_line": 86,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 86
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "(n)",
                "loop_body_end_line": 96,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 97,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "(m > 0)",
                "loop_body_end_line": 93,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": []
    },
    "9": {
        "filepath": "code/codenet_p02376_s163639124_main_70_108.c",
        "function_end_line": 69,
        "function_id": 9,
        "function_name": "route",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(e[v[s].e[i]].n[0]==s)",
                "else_branch_end_line": 65,
                "else_branch_start_line": 49,
                "true_branch_end_line": 49,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "(et[e[v[s].e[i]].n[1]]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(e[v[s].e[i]].fmax-e[v[s].e[i]].flow>0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(e[v[s].e[i]].n[1]==ed)",
                "else_branch_end_line": 46,
                "else_branch_start_line": 35,
                "true_branch_end_line": 35,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(res>=c)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(r>0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "(res>=c)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(et[e[v[s].e[i]].n[0]]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(e[v[s].e[i]].flow>0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 63,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "(r>0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "(res>=c)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 57
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=0;i<v[s].num;i++",
                "loop_body_end_line": 66,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "s",
                17,
                0
            ],
            [
                "c",
                17,
                2
            ],
            [
                "ed",
                17,
                1
            ]
        ]
    },
    "10": {
        "filepath": "code/codenet_p02376_s163639124_main_70_108.c",
        "function_end_line": 108,
        "function_id": 10,
        "function_name": "main",
        "function_start_line": 70,
        "if_statements": [
            {
                "condition_end_line": 87,
                "condition_start_line": 87,
                "condition_str": "(b==V-1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 91,
                "true_branch_start_line": 87
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "(x<=0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 103,
                "true_branch_start_line": 100
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "i=0;i<V;i++",
                "loop_body_end_line": 76,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 78,
                "header_start_line": 78,
                "header_str": "i=0;i<E;i++",
                "loop_body_end_line": 92,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 92,
                "loop_statement_start_line": 78
            },
            {
                "header_end_line": 94,
                "header_start_line": 94,
                "header_str": "i=0;i<100;i++",
                "loop_body_end_line": 96,
                "loop_body_start_line": 94,
                "loop_statement_end_line": 96,
                "loop_statement_start_line": 94
            },
            {
                "header_end_line": 97,
                "header_start_line": 97,
                "header_str": "i=0;i<3;i++",
                "loop_body_end_line": 105,
                "loop_body_start_line": 97,
                "loop_statement_end_line": 105,
                "loop_statement_start_line": 97
            }
        ],
        "parameters": []
    },
    "11": {
        "filepath": "code/codenet_p02588_s744640915_main_13_99.c",
        "function_end_line": 12,
        "function_id": 11,
        "function_name": "gcd",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "(r > 0)",
                "loop_body_end_line": 9,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 5
            }
        ],
        "parameters": [
            [
                "b",
                2,
                1
            ],
            [
                "a",
                2,
                0
            ]
        ]
    },
    "12": {
        "filepath": "code/codenet_p02588_s744640915_main_13_99.c",
        "function_end_line": 99,
        "function_id": 12,
        "function_name": "main",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "(s[j] != '.')",
                "else_branch_end_line": 34,
                "else_branch_start_line": 33,
                "true_branch_end_line": 32,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(k > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(k == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "(a[i] % q > 0)",
                "else_branch_end_line": 47,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "(q % i == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(i * i == q)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "(q % i == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 69,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 79,
                "condition_start_line": 79,
                "condition_str": "(a[i] < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 80
            },
            {
                "condition_end_line": 87,
                "condition_start_line": 87,
                "condition_str": "(b[mid] < l)",
                "else_branch_end_line": 90,
                "else_branch_start_line": 89,
                "true_branch_end_line": 88,
                "true_branch_start_line": 88
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "(a[i] % b[k] == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 95,
                "true_branch_start_line": 95
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 40,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "j = 0; s[j] != '\\0'; j++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "; k < 10; k++",
                "loop_body_end_line": 39,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 48,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "i = 1; i * i <= q; i++",
                "loop_body_end_line": 59,
                "loop_body_start_line": 53,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "; i > 0; i--",
                "loop_body_end_line": 70,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 73,
                "header_start_line": 73,
                "header_str": "i = 0; i < j; i++",
                "loop_body_end_line": 74,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 73
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 96,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 96,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 93,
                "header_start_line": 93,
                "header_str": "k = 0; k < j; k++",
                "loop_body_end_line": 95,
                "loop_body_start_line": 94,
                "loop_statement_end_line": 95,
                "loop_statement_start_line": 93
            },
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "(max - min > 1)",
                "loop_body_end_line": 90,
                "loop_body_start_line": 86,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 84
            }
        ],
        "parameters": []
    },
    "13": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 8,
        "function_id": 13,
        "function_name": "gcd",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 8,
                "condition_start_line": 8,
                "condition_str": "(m>n)",
                "else_branch_end_line": 8,
                "else_branch_start_line": 8,
                "true_branch_end_line": 8,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "(m!=n)",
                "loop_body_end_line": 8,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 8
            }
        ],
        "parameters": [
            [
                "n",
                8,
                1
            ],
            [
                "m",
                8,
                0
            ]
        ]
    },
    "14": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 9,
        "function_id": 14,
        "function_name": "lcm",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "((0==m)||(0==n))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 9,
                "true_branch_start_line": 9
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                9,
                1
            ],
            [
                "m",
                9,
                0
            ]
        ]
    },
    "15": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 10,
        "function_id": 15,
        "function_name": "fact",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(x==1)",
                "else_branch_end_line": 10,
                "else_branch_start_line": 10,
                "true_branch_end_line": 10,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                10,
                0
            ]
        ]
    },
    "16": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 11,
        "function_id": 16,
        "function_name": "ruijou",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "(i!=0)",
                "loop_body_end_line": 11,
                "loop_body_start_line": 11,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 11
            }
        ],
        "parameters": [
            [
                "base",
                11,
                0
            ],
            [
                "exponent",
                11,
                1
            ]
        ]
    },
    "17": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 12,
        "function_id": 17,
        "function_name": "llgcd",
        "function_start_line": 12,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(m>n)",
                "else_branch_end_line": 12,
                "else_branch_start_line": 12,
                "true_branch_end_line": 12,
                "true_branch_start_line": 12
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "(m!=n)",
                "loop_body_end_line": 12,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 12
            }
        ],
        "parameters": [
            [
                "n",
                12,
                1
            ],
            [
                "m",
                12,
                0
            ]
        ]
    },
    "18": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 13,
        "function_id": 18,
        "function_name": "lllcm",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "((0==m)||(0==n))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                13,
                1
            ],
            [
                "m",
                13,
                0
            ]
        ]
    },
    "19": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 14,
        "function_id": 19,
        "function_name": "llfact",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(x==1)",
                "else_branch_end_line": 14,
                "else_branch_start_line": 14,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                14,
                0
            ]
        ]
    },
    "20": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 15,
        "function_id": 20,
        "function_name": "llruijou",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "(i!=0)",
                "loop_body_end_line": 15,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 15
            }
        ],
        "parameters": [
            [
                "exponent",
                15,
                1
            ],
            [
                "base",
                15,
                0
            ]
        ]
    },
    "21": {
        "filepath": "code/codenet_p02623_s418031951_main_16_64.c",
        "function_end_line": 64,
        "function_id": 21,
        "function_name": "main",
        "function_start_line": 16,
        "if_statements": [
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(a[i]<=b[j] && i<=n && j<=m)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 38,
                "true_branch_end_line": 37,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(a[i]>=b[j] && i<=n && j<=m)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 43,
                "true_branch_end_line": 42,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(i==n+1 && j<=m)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 48,
                "true_branch_end_line": 47,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(i<=n && j==m+1)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "(i==n+1 && j==m+1)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 53
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "i = 1; i <= n; i++",
                "loop_body_end_line": 24,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 22
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "j = 1; j <= m; j++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "(num<=k)",
                "loop_body_end_line": 60,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": []
    },
    "22": {
        "filepath": "code/codenet_p03053_s076362604_main_14_97.c",
        "function_end_line": 7,
        "function_id": 22,
        "function_name": "max",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 3,
                "condition_start_line": 3,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 5,
                "true_branch_start_line": 3
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                2,
                1
            ],
            [
                "a",
                2,
                0
            ]
        ]
    },
    "23": {
        "filepath": "code/codenet_p03053_s076362604_main_14_97.c",
        "function_end_line": 13,
        "function_id": 23,
        "function_name": "min",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 9
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                8,
                0
            ],
            [
                "b",
                8,
                1
            ]
        ]
    },
    "24": {
        "filepath": "code/codenet_p03053_s076362604_main_14_97.c",
        "function_end_line": 97,
        "function_id": 24,
        "function_name": "main",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(l[i][j]=='#')",
                "else_branch_end_line": 55,
                "else_branch_start_line": 53,
                "true_branch_end_line": 53,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(l[i][j]=='#')",
                "else_branch_end_line": 64,
                "else_branch_start_line": 62,
                "true_branch_end_line": 62,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(l[i][j]=='#')",
                "else_branch_end_line": 73,
                "else_branch_start_line": 71,
                "true_branch_end_line": 71,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "(l[i][j]=='#')",
                "else_branch_end_line": 82,
                "else_branch_start_line": 80,
                "true_branch_end_line": 80,
                "true_branch_start_line": 78
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "i=1;i<=H;i++",
                "loop_body_end_line": 30,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "j=1;j<=W;j++",
                "loop_body_end_line": 29,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "i=1;i<=H;i++",
                "loop_body_end_line": 42,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 37
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "j=1;j<=W;j++",
                "loop_body_end_line": 48,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 43
            },
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "i=1;i<=H;i++",
                "loop_body_end_line": 57,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 49
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "j=1;j<=W;j++",
                "loop_body_end_line": 56,
                "loop_body_start_line": 50,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "i=1;i<=H;i++",
                "loop_body_end_line": 66,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "j=W;j>=1;j--",
                "loop_body_end_line": 65,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 59
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "i=H;i>=1;i--",
                "loop_body_end_line": 75,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "j=1;j<=W;j++",
                "loop_body_end_line": 74,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 68
            },
            {
                "header_end_line": 76,
                "header_start_line": 76,
                "header_str": "i=H;i>=1;i--",
                "loop_body_end_line": 84,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 84,
                "loop_statement_start_line": 76
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "j=W;j>=1;j--",
                "loop_body_end_line": 83,
                "loop_body_start_line": 77,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 88,
                "header_start_line": 88,
                "header_str": "i=1;i<=H;i++",
                "loop_body_end_line": 95,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 95,
                "loop_statement_start_line": 88
            },
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "j=1;j<=W;j++",
                "loop_body_end_line": 94,
                "loop_body_start_line": 89,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 89
            }
        ],
        "parameters": []
    },
    "25": {
        "filepath": "code/codenet_p03089_s042415860_stack_2_44.c",
        "function_end_line": 44,
        "function_id": 25,
        "function_name": "stack",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(m==1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 11,
                "true_branch_end_line": 11,
                "true_branch_start_line": 5
            },
            {
                "condition_end_line": 6,
                "condition_start_line": 6,
                "condition_str": "(b[0] == 1)",
                "else_branch_end_line": 10,
                "else_branch_start_line": 8,
                "true_branch_end_line": 8,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "(b[i] > i+1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(i != m)",
                "else_branch_end_line": 42,
                "else_branch_start_line": 19,
                "true_branch_end_line": 19,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(b[i] == i+1)",
                "else_branch_end_line": 37,
                "else_branch_start_line": 35,
                "true_branch_end_line": 35,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "(a[m-2] == -1)",
                "else_branch_end_line": 34,
                "else_branch_start_line": 30,
                "true_branch_end_line": 30,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(flag == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 39
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "i=0;i<m;i++",
                "loop_body_end_line": 16,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=0;i<m;i++",
                "loop_body_end_line": 38,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "j=i+1;j<m;j++",
                "loop_body_end_line": 25,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 23
            }
        ],
        "parameters": [
            [
                "b",
                2,
                0
            ],
            [
                "m",
                2,
                2
            ],
            [
                "a",
                2,
                1
            ]
        ]
    },
    "26": {
        "filepath": "code/codenet_p03089_s042415860_stack_2_44.c",
        "function_end_line": 64,
        "function_id": 26,
        "function_name": "main",
        "function_start_line": 45,
        "if_statements": [
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "(a[n-1] == -1)",
                "else_branch_end_line": 62,
                "else_branch_start_line": 58,
                "true_branch_end_line": 58,
                "true_branch_start_line": 56
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 54,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 61,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 59
            }
        ],
        "parameters": []
    },
    "27": {
        "filepath": "code/codenet_p03229_s609093534_main_11_96.c",
        "function_end_line": 10,
        "function_id": 27,
        "function_name": "int_sort",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "( *(int*)a < *(int*)b )",
                "else_branch_end_line": 8,
                "else_branch_start_line": 6,
                "true_branch_end_line": 6,
                "true_branch_start_line": 4
            },
            {
                "condition_end_line": 6,
                "condition_start_line": 6,
                "condition_str": "( *(int*)a == *(int*)b )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 6
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                3,
                0
            ],
            [
                "b",
                3,
                1
            ]
        ]
    },
    "28": {
        "filepath": "code/codenet_p03229_s609093534_main_11_96.c",
        "function_end_line": 96,
        "function_id": 28,
        "function_name": "main",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(N == 2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(flag == 1)",
                "else_branch_end_line": 46,
                "else_branch_start_line": 40,
                "true_branch_end_line": 40,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "(flag == 1)",
                "else_branch_end_line": 68,
                "else_branch_start_line": 62,
                "true_branch_end_line": 62,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "(end < beg)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "(sumB < sumC)",
                "else_branch_end_line": 94,
                "else_branch_start_line": 93,
                "true_branch_end_line": 92,
                "true_branch_start_line": 92
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "int i = 0; i < N; i++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "int i = 1; i < N; i++",
                "loop_body_end_line": 74,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 76,
                "header_start_line": 76,
                "header_str": "int i = 1; i < N; i++",
                "loop_body_end_line": 78,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 76
            },
            {
                "header_end_line": 81,
                "header_start_line": 81,
                "header_str": "int i = 0; i < N; i++",
                "loop_body_end_line": 83,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 81
            },
            {
                "header_end_line": 86,
                "header_start_line": 86,
                "header_str": "int i = 0; i < N; i++",
                "loop_body_end_line": 88,
                "loop_body_start_line": 86,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 86
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "(1)",
                "loop_body_end_line": 47,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "(1)",
                "loop_body_end_line": 69,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 55
            }
        ],
        "parameters": []
    },
    "29": {
        "filepath": "code/codenet_p03245_s058380638_main_21_84.c",
        "function_end_line": 17,
        "function_id": 29,
        "function_name": "nextint",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(c=='-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "('0'<=c && c<='9')",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": []
    },
    "30": {
        "filepath": "code/codenet_p03245_s058380638_main_21_84.c",
        "function_end_line": 18,
        "function_id": 30,
        "function_name": "nextlong",
        "function_start_line": 18,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(c=='-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 18
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "('0'<=c && c<='9')",
                "loop_body_end_line": 18,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": []
    },
    "31": {
        "filepath": "code/codenet_p03245_s058380638_main_21_84.c",
        "function_end_line": 19,
        "function_id": 31,
        "function_name": "nextstr",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "(c!=' '&&c!='\\n')",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 19
            }
        ],
        "parameters": [
            [
                "s",
                19,
                0
            ]
        ]
    },
    "32": {
        "filepath": "code/codenet_p03245_s058380638_main_21_84.c",
        "function_end_line": 84,
        "function_id": 32,
        "function_name": "main",
        "function_start_line": 21,
        "if_statements": [
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "((p[i][0]^p[i][1]^P)&1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(P)",
                "else_branch_end_line": 83,
                "else_branch_start_line": 58,
                "true_branch_end_line": 58,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(u&(1<<j))",
                "else_branch_end_line": 54,
                "else_branch_start_line": 48,
                "true_branch_end_line": 48,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(v&(1<<j))",
                "else_branch_end_line": 47,
                "else_branch_start_line": 45,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(v&(1<<j))",
                "else_branch_end_line": 53,
                "else_branch_start_line": 51,
                "true_branch_end_line": 51,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "(u&(1<<j))",
                "else_branch_end_line": 79,
                "else_branch_start_line": 73,
                "true_branch_end_line": 73,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "(v&(1<<j))",
                "else_branch_end_line": 72,
                "else_branch_start_line": 70,
                "true_branch_end_line": 70,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "(v&(1<<j))",
                "else_branch_end_line": 78,
                "else_branch_start_line": 76,
                "true_branch_end_line": 76,
                "true_branch_start_line": 74
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "int i=0; i<n; i++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "int i=1; i<n; i++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "int i=0; i<n; i++",
                "loop_body_end_line": 57,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "int j=0; j<31; j++",
                "loop_body_end_line": 55,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "int i=0; i<n; i++",
                "loop_body_end_line": 82,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "int j=1; j<=31; j++",
                "loop_body_end_line": 80,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 66
            }
        ],
        "parameters": []
    },
    "33": {
        "filepath": "code/codenet_p03263_s512855067_main_32_81.c",
        "function_end_line": 15,
        "function_id": 33,
        "function_name": "gl",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 8,
                "condition_start_line": 8,
                "condition_str": "(c < 10)",
                "else_branch_end_line": 12,
                "else_branch_start_line": 10,
                "true_branch_end_line": 10,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": ";;",
                "loop_body_end_line": 13,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 6
            }
        ],
        "parameters": []
    },
    "34": {
        "filepath": "code/codenet_p03263_s512855067_main_32_81.c",
        "function_end_line": 31,
        "function_id": 34,
        "function_name": "pl",
        "function_start_line": 16,
        "if_statements": [
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "(s==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 19
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "; pos<9; pos++",
                "loop_body_end_line": 30,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 28
            }
        ],
        "parameters": [
            [
                "s",
                16,
                0
            ]
        ]
    },
    "35": {
        "filepath": "code/codenet_p03263_s512855067_main_32_81.c",
        "function_end_line": 81,
        "function_id": 35,
        "function_name": "main",
        "function_start_line": 32,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(i%2==1)",
                "else_branch_end_line": 71,
                "else_branch_start_line": 58,
                "true_branch_end_line": 58,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(haveCoin)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(haveCoin)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 60
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "int i=1; i<=h; i++",
                "loop_body_end_line": 72,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "int j=1; j<=w; j++",
                "loop_body_end_line": 44,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "int j=1; j<=w; j++",
                "loop_body_end_line": 57,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "int j=w; j>0; j--",
                "loop_body_end_line": 70,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 59
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "int i=0; i<pos; i++",
                "loop_body_end_line": 79,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 74
            }
        ],
        "parameters": []
    },
    "36": {
        "filepath": "code/codenet_p03291_s898195699_main_16_68.c",
        "function_end_line": 15,
        "function_id": 36,
        "function_name": "modpow",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(n < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 5,
                "true_branch_start_line": 5
            },
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "(n % 2 == 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 10,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 7,
                "header_start_line": 7,
                "header_str": "(n > 0)",
                "loop_body_end_line": 12,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 7
            }
        ],
        "parameters": [
            [
                "a",
                3,
                0
            ],
            [
                "n",
                3,
                1
            ],
            [
                "p",
                3,
                2
            ]
        ]
    },
    "37": {
        "filepath": "code/codenet_p03291_s898195699_main_16_68.c",
        "function_end_line": 68,
        "function_id": 37,
        "function_name": "main",
        "function_start_line": 16,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(s[i] == 'A')",
                "else_branch_end_line": 39,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(s[i] == '?')",
                "else_branch_end_line": 39,
                "else_branch_start_line": 35,
                "true_branch_end_line": 34,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(s[i] == 'C')",
                "else_branch_end_line": 59,
                "else_branch_start_line": 50,
                "true_branch_end_line": 49,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(s[i] == '?')",
                "else_branch_end_line": 59,
                "else_branch_start_line": 55,
                "true_branch_end_line": 54,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "(s[i] == 'B' || s[i] == '?')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 65
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 40,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "i = n - 1; i >= 0; i--",
                "loop_body_end_line": 60,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 43
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 65,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 63
            }
        ],
        "parameters": []
    },
    "38": {
        "filepath": "code/codenet_p03292_s330375226_Compare3Figures_12_47.c",
        "function_end_line": 11,
        "function_id": 38,
        "function_name": "MakeCostMinimum",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 6,
                "condition_start_line": 6,
                "condition_str": "(minimumcost < 0)",
                "else_branch_end_line": 9,
                "else_branch_start_line": 8,
                "true_branch_end_line": 7,
                "true_branch_start_line": 7
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "q",
                3,
                1
            ],
            [
                "p",
                3,
                0
            ],
            [
                "r",
                3,
                2
            ]
        ]
    },
    "39": {
        "filepath": "code/codenet_p03292_s330375226_Compare3Figures_12_47.c",
        "function_end_line": 47,
        "function_id": 39,
        "function_name": "Compare3Figures",
        "function_start_line": 12,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(b < a && a < c)",
                "else_branch_end_line": 45,
                "else_branch_start_line": 20,
                "true_branch_end_line": 19,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(b < a && c < b)",
                "else_branch_end_line": 45,
                "else_branch_start_line": 26,
                "true_branch_end_line": 25,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(a < b && c < b && a < c)",
                "else_branch_end_line": 45,
                "else_branch_start_line": 32,
                "true_branch_end_line": 31,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(a < b && c < a)",
                "else_branch_end_line": 45,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(b < a && b < c && c < a)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 40
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                12,
                1
            ],
            [
                "a",
                12,
                0
            ],
            [
                "c",
                12,
                2
            ]
        ]
    },
    "40": {
        "filepath": "code/codenet_p03292_s330375226_Compare3Figures_12_47.c",
        "function_end_line": 66,
        "function_id": 40,
        "function_name": "main",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "argv",
                48,
                1
            ],
            [
                "argc",
                48,
                0
            ]
        ]
    },
    "41": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 13,
        "function_id": 41,
        "function_name": "descending_compare",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 6,
                "condition_start_line": 6,
                "condition_str": "(*(int*)a > *(int*)b)",
                "else_branch_end_line": 12,
                "else_branch_start_line": 8,
                "true_branch_end_line": 8,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 8,
                "condition_start_line": 8,
                "condition_str": "(*(int*)a == *(int*)b)",
                "else_branch_end_line": 12,
                "else_branch_start_line": 10,
                "true_branch_end_line": 10,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                5,
                0
            ],
            [
                "b",
                5,
                1
            ]
        ]
    },
    "42": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 22,
        "function_id": 42,
        "function_name": "ascending_compare",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(*(int*)a < *(int*)b)",
                "else_branch_end_line": 21,
                "else_branch_start_line": 17,
                "true_branch_end_line": 17,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(*(int*)a == *(int*)b)",
                "else_branch_end_line": 21,
                "else_branch_start_line": 19,
                "true_branch_end_line": 19,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                14,
                0
            ],
            [
                "b",
                14,
                1
            ]
        ]
    },
    "43": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 39,
        "function_id": 43,
        "function_name": "lower_bound",
        "function_start_line": 23,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(key > a[mid])",
                "else_branch_end_line": 32,
                "else_branch_start_line": 30,
                "true_branch_end_line": 30,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(a[left] >= key)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(a[mid] >= key)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(a[right] >= key)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "((left+1 != mid || mid+1 != right) && mid != left)",
                "loop_body_end_line": 33,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 27
            }
        ],
        "parameters": [
            [
                "key",
                23,
                2
            ],
            [
                "a",
                23,
                0
            ],
            [
                "n",
                23,
                1
            ]
        ]
    },
    "44": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 48,
        "function_id": 44,
        "function_name": "gcd",
        "function_start_line": 40,
        "if_statements": [
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(y == 0)",
                "else_branch_end_line": 47,
                "else_branch_start_line": 43,
                "true_branch_end_line": 43,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(x > y)",
                "else_branch_end_line": 47,
                "else_branch_start_line": 45,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                40,
                0
            ],
            [
                "y",
                40,
                1
            ]
        ]
    },
    "45": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 56,
        "function_id": 45,
        "function_name": "factorial",
        "function_start_line": 49,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "i = x; i > 1; i--",
                "loop_body_end_line": 54,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 52
            }
        ],
        "parameters": [
            [
                "x",
                49,
                0
            ]
        ]
    },
    "46": {
        "filepath": "code/codenet_p03713_s867157812_main_57_127.c",
        "function_end_line": 127,
        "function_id": 46,
        "function_name": "main",
        "function_start_line": 57,
        "if_statements": [
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(min > square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 71,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 72,
                "condition_start_line": 72,
                "condition_str": "(max < square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 74,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "(ans > llabs(max-min))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 78,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "(min > square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 85,
                "true_branch_start_line": 83
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "(max < square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 88,
                "true_branch_start_line": 86
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "(ans > llabs(max-min))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 92,
                "true_branch_start_line": 90
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "(min > square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 102,
                "true_branch_start_line": 100
            },
            {
                "condition_end_line": 103,
                "condition_start_line": 103,
                "condition_str": "(max < square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 105,
                "true_branch_start_line": 103
            },
            {
                "condition_end_line": 107,
                "condition_start_line": 107,
                "condition_str": "(ans > llabs(max-min))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 109,
                "true_branch_start_line": 107
            },
            {
                "condition_end_line": 114,
                "condition_start_line": 114,
                "condition_str": "(min > square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 116,
                "true_branch_start_line": 114
            },
            {
                "condition_end_line": 117,
                "condition_start_line": 117,
                "condition_str": "(max < square[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 119,
                "true_branch_start_line": 117
            },
            {
                "condition_end_line": 121,
                "condition_start_line": 121,
                "condition_str": "(ans > llabs(max-min))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 123,
                "true_branch_start_line": 121
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "int i = 1; i < h; i++",
                "loop_body_end_line": 93,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "int j = 0; j < 3; j++",
                "loop_body_end_line": 75,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 68
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "int j = 0; j < 3; j++",
                "loop_body_end_line": 89,
                "loop_body_start_line": 82,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 82
            },
            {
                "header_end_line": 94,
                "header_start_line": 94,
                "header_str": "int i = 0; i < w; i++",
                "loop_body_end_line": 124,
                "loop_body_start_line": 94,
                "loop_statement_end_line": 124,
                "loop_statement_start_line": 94
            },
            {
                "header_end_line": 99,
                "header_start_line": 99,
                "header_str": "int j = 0; j < 3; j++",
                "loop_body_end_line": 106,
                "loop_body_start_line": 99,
                "loop_statement_end_line": 106,
                "loop_statement_start_line": 99
            },
            {
                "header_end_line": 113,
                "header_start_line": 113,
                "header_str": "int j = 0; j < 3; j++",
                "loop_body_end_line": 120,
                "loop_body_start_line": 113,
                "loop_statement_end_line": 120,
                "loop_statement_start_line": 113
            }
        ],
        "parameters": []
    },
    "47": {
        "filepath": "code/codenet_p03957_s394242276_main_9_31.c",
        "function_end_line": 8,
        "function_id": 47,
        "function_name": "judge",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 3,
                "condition_start_line": 3,
                "condition_str": "(x == 1)",
                "else_branch_end_line": 7,
                "else_branch_start_line": 5,
                "true_branch_end_line": 5,
                "true_branch_start_line": 3
            },
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(x == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 7,
                "true_branch_start_line": 5
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                2,
                0
            ]
        ]
    },
    "48": {
        "filepath": "code/codenet_p03957_s394242276_main_9_31.c",
        "function_end_line": 31,
        "function_id": 48,
        "function_name": "main",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(word[i]=='C')",
                "else_branch_end_line": 22,
                "else_branch_start_line": 20,
                "true_branch_end_line": 20,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(word[i]=='F')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(SuccessFlag>1 && flagC < flagF)",
                "else_branch_end_line": 29,
                "else_branch_start_line": 27,
                "true_branch_end_line": 27,
                "true_branch_start_line": 25
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "(word[i]!='\\0')",
                "loop_body_end_line": 23,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": []
    },
    "49": {
        "filepath": "code/codenet_p02670_s760310872_main_8_63.c",
        "function_end_line": 7,
        "function_id": 49,
        "function_name": "compare_int",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                4,
                1
            ],
            [
                "a",
                4,
                0
            ]
        ]
    },
    "50": {
        "filepath": "code/codenet_p02670_s760310872_main_8_63.c",
        "function_end_line": 63,
        "function_id": 50,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(1<=p&&n>=p)",
                "else_branch_end_line": 59,
                "else_branch_start_line": 25,
                "true_branch_end_line": 24,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "((n*n)>=p&&((n*n)-n+1)<=p)",
                "else_branch_end_line": 59,
                "else_branch_start_line": 27,
                "true_branch_end_line": 27,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "(p%n==0)",
                "else_branch_end_line": 59,
                "else_branch_start_line": 29,
                "true_branch_end_line": 29,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "(p%n==1)",
                "else_branch_end_line": 59,
                "else_branch_start_line": 31,
                "true_branch_end_line": 31,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(a[jj][j]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(a[jj][j]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(a[i][jj]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "(a[i][jj]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 52
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "int i=0;i<n;i++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "int j=0;j<n;j++",
                "loop_body_end_line": 18,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "int ii=0;ii<(n*n);ii++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "int jj=0;jj<i;jj++",
                "loop_body_end_line": 40,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "int jj=n-1;jj>i;jj--",
                "loop_body_end_line": 45,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "int jj=0;jj<j;jj++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "int jj=n-1;jj>j;jj--",
                "loop_body_end_line": 55,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 51
            }
        ],
        "parameters": []
    },
    "51": {
        "filepath": "code/codenet_p03040_s059915913_main_2_51.c",
        "function_end_line": 51,
        "function_id": 51,
        "function_name": "main",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(x == 1)",
                "else_branch_end_line": 48,
                "else_branch_start_line": 38,
                "true_branch_end_line": 37,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(n == 0)",
                "else_branch_end_line": 34,
                "else_branch_start_line": 20,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(a[j] > y)",
                "else_branch_end_line": 30,
                "else_branch_start_line": 26,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(j == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(m - a[j] < 0)",
                "else_branch_end_line": 46,
                "else_branch_start_line": 45,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "i = 0; i < q; i++",
                "loop_body_end_line": 49,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "j = n - 1; j >= 0; j--",
                "loop_body_end_line": 33,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 22
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "j = 0; j < n; j++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 42
            }
        ],
        "parameters": []
    },
    "52": {
        "filepath": "code/codenet_p03800_s636370048_main_17_110.c",
        "function_end_line": 16,
        "function_id": 52,
        "function_name": "compare_long",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                14,
                0
            ],
            [
                "b",
                14,
                1
            ]
        ]
    },
    "53": {
        "filepath": "code/codenet_p03800_s636370048_main_17_110.c",
        "function_end_line": 110,
        "function_id": 53,
        "function_name": "main",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(ans[i] == 'S')",
                "else_branch_end_line": 46,
                "else_branch_start_line": 39,
                "true_branch_end_line": 39,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(s[i] == 'o' && ans[pre] != ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(s[i] == 'x' && ans[pre] == ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "(s[i] == 'o' && ans[pre] == ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(s[i] == 'x' && ans[pre] != ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(ans[N-1] == 'S')",
                "else_branch_end_line": 66,
                "else_branch_start_line": 57,
                "true_branch_end_line": 57,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(s[N-1] == 'o' && ans[N-2] == ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "(s[N-1] == 'x' && ans[N-2] != ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "(s[N-1] == 'o' && ans[N-2] != ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "(s[N-1] == 'x' && ans[N-2] == ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(ans[i] == 'S')",
                "else_branch_end_line": 87,
                "else_branch_start_line": 80,
                "true_branch_end_line": 80,
                "true_branch_start_line": 73
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "(s[i] == 'o' && ans[pre] != ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "(s[i] == 'x' && ans[pre] == ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 77
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "(s[i] == 'o' && ans[pre] == ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 83,
                "true_branch_start_line": 81
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(s[i] == 'x' && ans[pre] != ans[next])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 86,
                "true_branch_start_line": 84
            },
            {
                "condition_end_line": 89,
                "condition_start_line": 89,
                "condition_str": "(ans[N-1] == 'S')",
                "else_branch_end_line": 107,
                "else_branch_start_line": 98,
                "true_branch_end_line": 98,
                "true_branch_start_line": 89
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "(s[N-1] == 'o' && ans[N-2] == ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 90
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "(s[N-1] == 'x' && ans[N-2] != ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 97,
                "true_branch_start_line": 94
            },
            {
                "condition_end_line": 99,
                "condition_start_line": 99,
                "condition_str": "(s[N-1] == 'o' && ans[N-2] != ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 102,
                "true_branch_start_line": 99
            },
            {
                "condition_end_line": 103,
                "condition_start_line": 103,
                "condition_str": "(s[N-1] == 'x' && ans[N-2] == ans[0])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 106,
                "true_branch_start_line": 103
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "i=0;i<N;i++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "i=0;i<N-1;i++",
                "loop_body_end_line": 47,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "i=0;i<N;i++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 70,
                "header_start_line": 70,
                "header_str": "i=0;i<N-1;i++",
                "loop_body_end_line": 88,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 70
            }
        ],
        "parameters": []
    },
    "54": {
        "filepath": "code/codenet_p02604_s177592713_main_8_51.c",
        "function_end_line": 7,
        "function_id": 54,
        "function_name": "popcount",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(!n)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 5,
                "true_branch_start_line": 5
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                4,
                0
            ]
        ]
    },
    "55": {
        "filepath": "code/codenet_p02604_s177592713_main_8_51.c",
        "function_end_line": 51,
        "function_id": 55,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "((i>>k)&1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(a[i]==1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(a[i]==2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "int i=0; i<N; i++",
                "loop_body_end_line": 15,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "int i=0; i<(1<<N); i++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "int j=0; j<N; j++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "int k=0; k<N; k++",
                "loop_body_end_line": 25,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "int i=0; i<N; i++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "int i=0; i<N; i++",
                "loop_body_end_line": 40,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "int i=0; i<=N; i++",
                "loop_body_end_line": 49,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "(!a[N])",
                "loop_body_end_line": 45,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "(a[i]==2)",
                "loop_body_end_line": 43,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 42
            }
        ],
        "parameters": []
    },
    "56": {
        "filepath": "code/codenet_p03167_s591149775_main_42_127.c",
        "function_end_line": 23,
        "function_id": 56,
        "function_name": "debug_c",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "(i < h)",
                "loop_body_end_line": 20,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "(j < w)",
                "loop_body_end_line": 17,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 14
            }
        ],
        "parameters": [
            [
                "w",
                6,
                2
            ],
            [
                "h",
                6,
                1
            ],
            [
                "dp",
                6,
                0
            ]
        ]
    },
    "57": {
        "filepath": "code/codenet_p03167_s591149775_main_42_127.c",
        "function_end_line": 41,
        "function_id": 57,
        "function_name": "debug",
        "function_start_line": 24,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "(i < h)",
                "loop_body_end_line": 38,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "(j < w)",
                "loop_body_end_line": 35,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": [
            [
                "w",
                24,
                2
            ],
            [
                "h",
                24,
                1
            ],
            [
                "dp",
                24,
                0
            ]
        ]
    },
    "58": {
        "filepath": "code/codenet_p03167_s591149775_main_42_127.c",
        "function_end_line": 127,
        "function_id": 58,
        "function_name": "main",
        "function_start_line": 42,
        "if_statements": [
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "(a[i][j] == '#')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 74,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(dp[0][i] == -1)",
                "else_branch_end_line": 91,
                "else_branch_start_line": 88,
                "true_branch_end_line": 87,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 96,
                "condition_start_line": 96,
                "condition_str": "(dp[j][0] == -1)",
                "else_branch_end_line": 103,
                "else_branch_start_line": 100,
                "true_branch_end_line": 99,
                "true_branch_start_line": 97
            },
            {
                "condition_end_line": 113,
                "condition_start_line": 113,
                "condition_str": "(dp[j][i] == -1)",
                "else_branch_end_line": 120,
                "else_branch_start_line": 117,
                "true_branch_end_line": 116,
                "true_branch_start_line": 114
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "(i < w)",
                "loop_body_end_line": 55,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "(j < h)",
                "loop_body_end_line": 60,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 64,
                "header_start_line": 64,
                "header_str": "(i < h)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 64
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "(j < w)",
                "loop_body_end_line": 75,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 68
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "(i < h)",
                "loop_body_end_line": 92,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 82
            },
            {
                "header_end_line": 94,
                "header_start_line": 94,
                "header_str": "(j < w)",
                "loop_body_end_line": 104,
                "loop_body_start_line": 96,
                "loop_statement_end_line": 105,
                "loop_statement_start_line": 94
            },
            {
                "header_end_line": 108,
                "header_start_line": 108,
                "header_str": "(i< h)",
                "loop_body_end_line": 123,
                "loop_body_start_line": 110,
                "loop_statement_end_line": 124,
                "loop_statement_start_line": 108
            },
            {
                "header_end_line": 111,
                "header_start_line": 111,
                "header_str": "(j < w)",
                "loop_body_end_line": 121,
                "loop_body_start_line": 113,
                "loop_statement_end_line": 122,
                "loop_statement_start_line": 111
            }
        ],
        "parameters": []
    },
    "59": {
        "filepath": "code/codenet_p03152_s574692978_main_10_94.c",
        "function_end_line": 9,
        "function_id": 59,
        "function_name": "min",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(a < b)",
                "else_branch_end_line": 8,
                "else_branch_start_line": 7,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                3,
                0
            ],
            [
                "b",
                3,
                1
            ]
        ]
    },
    "60": {
        "filepath": "code/codenet_p03152_s574692978_main_10_94.c",
        "function_end_line": 94,
        "function_id": 60,
        "function_name": "main",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(a[i] <= a[i + 1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(a[i] == a[i + 1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(i > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(b[i] <= b[i + 1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(b[i] == b[i + 1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(i > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "(a[j] == i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 68,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 75,
                "condition_start_line": 75,
                "condition_str": "(b[j] == i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "(q==0)",
                "else_branch_end_line": 83,
                "else_branch_start_line": 82,
                "true_branch_end_line": 81,
                "true_branch_start_line": 81
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "i = 0; i < n; i++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "i = 0; i < m; i++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=0;i<n-1;i++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "i=0;i<m-1;i++",
                "loop_body_end_line": 48,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "i = n * m; i >= min(a[n - 1], b[m - 1]); i--",
                "loop_body_end_line": 86,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 55
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "j = 0; j < i; j++",
                "loop_body_end_line": 91,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 87
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "(a[j] > i)",
                "loop_body_end_line": 62,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 59
            },
            {
                "header_end_line": 70,
                "header_start_line": 70,
                "header_str": "(b[j] > i)",
                "loop_body_end_line": 73,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 70
            }
        ],
        "parameters": []
    },
    "61": {
        "filepath": "code/codenet_p03162_s400296360_main_10_92.c",
        "function_end_line": 9,
        "function_id": 61,
        "function_name": "max1",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(a > b)",
                "else_branch_end_line": 8,
                "else_branch_start_line": 7,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                4,
                1
            ],
            [
                "a",
                4,
                0
            ]
        ]
    },
    "62": {
        "filepath": "code/codenet_p03162_s400296360_main_10_92.c",
        "function_end_line": 92,
        "function_id": 62,
        "function_name": "main",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(scanf(\"%d\", &N) <= 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "( N <= 0 || N_limit < N)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(scanf(\"%d%d%d\", &A[i], &B[i], &C[i]) < 3)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(A[i] <= 0 || pow(10, 4) < A[i])",
                "else_branch_end_line": 36,
                "else_branch_start_line": 33,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(B[i] <= 0 || pow(10, 4) < B[i])",
                "else_branch_end_line": 36,
                "else_branch_start_line": 35,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(C[i] <= 0 || pow(10, 4) < C[i])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(i - 1 <= 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "(sumA >= sumB)",
                "else_branch_end_line": 90,
                "else_branch_start_line": 69,
                "true_branch_end_line": 68,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(sumA >= sumC)",
                "else_branch_end_line": 67,
                "else_branch_start_line": 64,
                "true_branch_end_line": 63,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(sumB >= sumA)",
                "else_branch_end_line": 90,
                "else_branch_start_line": 80,
                "true_branch_end_line": 79,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "(sumB >= sumC)",
                "else_branch_end_line": 78,
                "else_branch_start_line": 75,
                "true_branch_end_line": 74,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "(sumC >= sumB)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 90,
                "true_branch_start_line": 81
            },
            {
                "condition_end_line": 82,
                "condition_start_line": 82,
                "condition_str": "(sumC >= sumA)",
                "else_branch_end_line": 89,
                "else_branch_start_line": 86,
                "true_branch_end_line": 85,
                "true_branch_start_line": 83
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "int i = 0; i < N; i++",
                "loop_body_end_line": 37,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "int i = 0; i < N; i++",
                "loop_body_end_line": 57,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 39
            }
        ],
        "parameters": []
    },
    "63": {
        "filepath": "code/codenet_p03545_s721199886_main_4_68.c",
        "function_end_line": 68,
        "function_id": 63,
        "function_name": "main",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "((cnt<3)||(cnt==4))",
                "else_branch_end_line": 59,
                "else_branch_start_line": 38,
                "true_branch_end_line": 38,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(cnt<2)",
                "else_branch_end_line": 37,
                "else_branch_start_line": 28,
                "true_branch_end_line": 28,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(cnt==0)",
                "else_branch_end_line": 27,
                "else_branch_start_line": 24,
                "true_branch_end_line": 24,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(cnt==2)",
                "else_branch_end_line": 36,
                "else_branch_start_line": 33,
                "true_branch_end_line": 33,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "((cnt==3)||(cnt==6))",
                "else_branch_end_line": 58,
                "else_branch_start_line": 49,
                "true_branch_end_line": 49,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(cnt==3)",
                "else_branch_end_line": 48,
                "else_branch_start_line": 45,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "(cnt==5)",
                "else_branch_end_line": 57,
                "else_branch_start_line": 54,
                "true_branch_end_line": 54,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(x==7)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 63,
                "true_branch_start_line": 61
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": ";;",
                "loop_body_end_line": 65,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "i=0;i<3;i++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": []
    },
    "64": {
        "filepath": "code/codenet_p03545_s721199886_main_4_68.c",
        "function_end_line": 71,
        "function_id": 64,
        "function_name": "sum",
        "function_start_line": 69,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                69,
                1
            ],
            [
                "a",
                69,
                0
            ]
        ]
    },
    "65": {
        "filepath": "code/codenet_p03545_s721199886_main_4_68.c",
        "function_end_line": 74,
        "function_id": 65,
        "function_name": "sub",
        "function_start_line": 72,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                72,
                1
            ],
            [
                "a",
                72,
                0
            ]
        ]
    },
    "66": {
        "filepath": "code/codenet_p03739_s332617622_main_10_74.c",
        "function_end_line": 9,
        "function_id": 66,
        "function_name": "abs",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(x < 0)",
                "else_branch_end_line": 8,
                "else_branch_start_line": 7,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                3,
                0
            ]
        ]
    },
    "67": {
        "filepath": "code/codenet_p03739_s332617622_main_10_74.c",
        "function_end_line": 74,
        "function_id": 67,
        "function_name": "main",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(a[i] > 0)",
                "else_branch_end_line": 31,
                "else_branch_start_line": 26,
                "true_branch_end_line": 25,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(a[i] < 0)",
                "else_branch_end_line": 31,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(sum == 0)",
                "else_branch_end_line": 70,
                "else_branch_start_line": 55,
                "true_branch_end_line": 54,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(sum == a[j])",
                "else_branch_end_line": 50,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(sign == 'p')",
                "else_branch_end_line": 50,
                "else_branch_start_line": 45,
                "true_branch_end_line": 44,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(sign == 'm')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(sum > 0 && sign == 'p')",
                "else_branch_end_line": 70,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "(sum < 0 && sign == 'm')",
                "else_branch_end_line": 70,
                "else_branch_start_line": 59,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(sign == 'p')",
                "else_branch_end_line": 69,
                "else_branch_start_line": 65,
                "true_branch_end_line": 64,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "(sign == 'm')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 69,
                "true_branch_start_line": 65
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "i=0; i<n; i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=0; i<n; i++",
                "loop_body_end_line": 32,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "; i<n; i++",
                "loop_body_end_line": 71,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "j=i+1; j<n; j++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": []
    },
    "68": {
        "filepath": "code/codenet_p02846_s436851790_merge_int_27_50.c",
        "function_end_line": 26,
        "function_id": 68,
        "function_name": "sort_int",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(a[i] > a[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 18
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "i = 0; i < N-1; i++",
                "loop_body_end_line": 24,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "j = i + 1; j < N; j++",
                "loop_body_end_line": 23,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": [
            [
                "N",
                13,
                1
            ],
            [
                "a",
                13,
                0
            ]
        ]
    },
    "69": {
        "filepath": "code/codenet_p02846_s436851790_merge_int_27_50.c",
        "function_end_line": 50,
        "function_id": 69,
        "function_name": "merge_int",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(a[i_lower] < a[i_upper])",
                "else_branch_end_line": 36,
                "else_branch_start_line": 34,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(i_lower >= sep)",
                "else_branch_end_line": 46,
                "else_branch_start_line": 42,
                "true_branch_end_line": 42,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "i_lower = 0; i_lower < i_b; i_lower++",
                "loop_body_end_line": 49,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "((i_lower < sep) && (i_upper < upper))",
                "loop_body_end_line": 36,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "(i_upper < upper)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 41,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "(i_lower < sep)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 43
            }
        ],
        "parameters": [
            [
                "sep",
                27,
                3
            ],
            [
                "upper",
                27,
                4
            ],
            [
                "b",
                27,
                1
            ],
            [
                "lower",
                27,
                2
            ],
            [
                "a",
                27,
                0
            ]
        ]
    },
    "70": {
        "filepath": "code/codenet_p02846_s436851790_merge_int_27_50.c",
        "function_end_line": 60,
        "function_id": 70,
        "function_name": "merge_sort_int",
        "function_start_line": 51,
        "if_statements": [
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "((lower == upper) || (lower + 1 == upper))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 53
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                51,
                0
            ],
            [
                "b",
                51,
                1
            ],
            [
                "upper",
                51,
                3
            ],
            [
                "lower",
                51,
                2
            ]
        ]
    },
    "71": {
        "filepath": "code/codenet_p02846_s436851790_merge_int_27_50.c",
        "function_end_line": 118,
        "function_id": 71,
        "function_name": "main",
        "function_start_line": 62,
        "if_statements": [
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "((diff1 > 0) && (diff2 > 0))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 73
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "((diff1 < 0) && (diff2 < 0))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 77
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "((diff1 > 0) && (diff2 < 0))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 98,
                "true_branch_start_line": 81
            },
            {
                "condition_end_line": 82,
                "condition_start_line": 82,
                "condition_str": "(diff3 > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 85,
                "true_branch_start_line": 82
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "(diff3 == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 89,
                "true_branch_start_line": 86
            },
            {
                "condition_end_line": 92,
                "condition_start_line": 92,
                "condition_str": "((diff1 * n) == llabs(diff3))",
                "else_branch_end_line": 96,
                "else_branch_start_line": 94,
                "true_branch_end_line": 94,
                "true_branch_start_line": 92
            },
            {
                "condition_end_line": 99,
                "condition_start_line": 99,
                "condition_str": "((diff1 < 0) && (diff2 > 0))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 116,
                "true_branch_start_line": 99
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "(diff3 < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 103,
                "true_branch_start_line": 100
            },
            {
                "condition_end_line": 104,
                "condition_start_line": 104,
                "condition_str": "(diff3 == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 107,
                "true_branch_start_line": 104
            },
            {
                "condition_end_line": 110,
                "condition_start_line": 110,
                "condition_str": "((llabs(diff1) * n) == diff3)",
                "else_branch_end_line": 114,
                "else_branch_start_line": 112,
                "true_branch_end_line": 112,
                "true_branch_start_line": 110
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "argc",
                62,
                0
            ],
            [
                "argv",
                62,
                1
            ]
        ]
    },
    "72": {
        "filepath": "code/codenet_p02814_s676771916_GCD_2_25.c",
        "function_end_line": 25,
        "function_id": 72,
        "function_name": "GCD",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "(a >= b)",
                "else_branch_end_line": 10,
                "else_branch_start_line": 7,
                "true_branch_end_line": 7,
                "true_branch_start_line": 4
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "(divisor == 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(remainder == 0)",
                "else_branch_end_line": 22,
                "else_branch_start_line": 19,
                "true_branch_end_line": 19,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "(1)",
                "loop_body_end_line": 22,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 12
            }
        ],
        "parameters": [
            [
                "b",
                2,
                1
            ],
            [
                "a",
                2,
                0
            ]
        ]
    },
    "73": {
        "filepath": "code/codenet_p02814_s676771916_GCD_2_25.c",
        "function_end_line": 54,
        "function_id": 73,
        "function_name": "main",
        "function_start_line": 26,
        "if_statements": [
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(lcm_all > 3000000000)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(half%a[i] != a[i]/2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(mod >= half)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 51,
                "true_branch_start_line": 49
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "long i = 0; i < n; i++",
                "loop_body_end_line": 32,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "long i = 1; i < n; i++",
                "loop_body_end_line": 39,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 34
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "long i = 0; i < n; i++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 41
            }
        ],
        "parameters": []
    },
    "74": {
        "filepath": "code/codenet_p03440_s670257424_main_7_89.c",
        "function_end_line": 6,
        "function_id": 74,
        "function_name": "compare",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                4,
                1
            ],
            [
                "a",
                4,
                0
            ]
        ]
    },
    "75": {
        "filepath": "code/codenet_p03440_s670257424_main_7_89.c",
        "function_end_line": 89,
        "function_id": 75,
        "function_name": "main",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(uni[x] != x)",
                "else_branch_end_line": 44,
                "else_branch_start_line": 31,
                "true_branch_end_line": 31,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(j == y)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(uni[j] == t)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(j == x)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(uni[j] == t)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(uni[i] == i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(num == 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(num * 2 - 2 > n)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(num * 2 - 2 == n)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "(min[uni[i]] > a[i])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 73,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "(min[i] != y)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 81,
                "true_branch_start_line": 78
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 12,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 14,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "i = 0; i < m; ++i",
                "loop_body_end_line": 45,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "j = y; uni[j] != j; ",
                "loop_body_end_line": 23,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "j = 0; j < n; ++j",
                "loop_body_end_line": 30,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "j = x; uni[j] != j; ",
                "loop_body_end_line": 36,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 34
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "j = 0; j < n; ++j",
                "loop_body_end_line": 43,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 50,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 62,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 61
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 68,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 73,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 73,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 76,
                "header_start_line": 76,
                "header_str": "i = 0; i < n; ++i",
                "loop_body_end_line": 82,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 76
            },
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "i = 0; i < tnum; ++i",
                "loop_body_end_line": 86,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 84
            }
        ],
        "parameters": []
    },
    "76": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 10,
        "function_id": 76,
        "function_name": "max",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 10,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                10,
                1
            ],
            [
                "a",
                10,
                0
            ]
        ]
    },
    "77": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 11,
        "function_id": 77,
        "function_name": "min",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                11,
                0
            ],
            [
                "b",
                11,
                1
            ]
        ]
    },
    "78": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 12,
        "function_id": 78,
        "function_name": "zt",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                12,
                1
            ],
            [
                "a",
                12,
                0
            ]
        ]
    },
    "79": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 13,
        "function_id": 79,
        "function_name": "round",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                13,
                1
            ],
            [
                "a",
                13,
                0
            ]
        ]
    },
    "80": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 14,
        "function_id": 80,
        "function_name": "ceil",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                14,
                0
            ],
            [
                "b",
                14,
                1
            ]
        ]
    },
    "81": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 15,
        "function_id": 81,
        "function_name": "gcd",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "(b!=0)",
                "loop_body_end_line": 15,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 15
            }
        ],
        "parameters": [
            [
                "b",
                15,
                1
            ],
            [
                "a",
                15,
                0
            ]
        ]
    },
    "82": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 16,
        "function_id": 82,
        "function_name": "lcm",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                16,
                0
            ],
            [
                "b",
                16,
                1
            ]
        ]
    },
    "83": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 17,
        "function_id": 83,
        "function_name": "nCr",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": [
            [
                "b",
                17,
                1
            ],
            [
                "a",
                17,
                0
            ]
        ]
    },
    "84": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 18,
        "function_id": 84,
        "function_name": "nHr",
        "function_start_line": 18,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                18,
                1
            ],
            [
                "a",
                18,
                0
            ]
        ]
    },
    "85": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 19,
        "function_id": 85,
        "function_name": "fact",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 19
            }
        ],
        "parameters": [
            [
                "a",
                19,
                0
            ]
        ]
    },
    "86": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 20,
        "function_id": 86,
        "function_name": "pow",
        "function_start_line": 20,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 20
            }
        ],
        "parameters": [
            [
                "b",
                20,
                1
            ],
            [
                "a",
                20,
                0
            ]
        ]
    },
    "87": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 21,
        "function_id": 87,
        "function_name": "dsum",
        "function_start_line": 21,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "(x)",
                "loop_body_end_line": 21,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "x",
                21,
                0
            ]
        ]
    },
    "88": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 22,
        "function_id": 88,
        "function_name": "dsumb",
        "function_start_line": 22,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "(x)",
                "loop_body_end_line": 22,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 22
            }
        ],
        "parameters": [
            [
                "x",
                22,
                0
            ],
            [
                "b",
                22,
                1
            ]
        ]
    },
    "89": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 23,
        "function_id": 89,
        "function_name": "sankaku",
        "function_start_line": 23,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                23,
                0
            ]
        ]
    },
    "90": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 24,
        "function_id": 90,
        "function_name": "llmax",
        "function_start_line": 24,
        "if_statements": [
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 24
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                24,
                1
            ],
            [
                "a",
                24,
                0
            ]
        ]
    },
    "91": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 25,
        "function_id": 91,
        "function_name": "llmin",
        "function_start_line": 25,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                25,
                0
            ],
            [
                "b",
                25,
                1
            ]
        ]
    },
    "92": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 26,
        "function_id": 92,
        "function_name": "llzt",
        "function_start_line": 26,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                26,
                1
            ],
            [
                "a",
                26,
                0
            ]
        ]
    },
    "93": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 27,
        "function_id": 93,
        "function_name": "llround",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                27,
                1
            ],
            [
                "a",
                27,
                0
            ]
        ]
    },
    "94": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 28,
        "function_id": 94,
        "function_name": "llceil",
        "function_start_line": 28,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                28,
                0
            ],
            [
                "b",
                28,
                1
            ]
        ]
    },
    "95": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 29,
        "function_id": 95,
        "function_name": "llgcd",
        "function_start_line": 29,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "(b!=0)",
                "loop_body_end_line": 29,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": [
            [
                "b",
                29,
                1
            ],
            [
                "a",
                29,
                0
            ]
        ]
    },
    "96": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 30,
        "function_id": 96,
        "function_name": "lllcm",
        "function_start_line": 30,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                30,
                0
            ],
            [
                "b",
                30,
                1
            ]
        ]
    },
    "97": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 31,
        "function_id": 97,
        "function_name": "llnCr",
        "function_start_line": 31,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 31,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": [
            [
                "b",
                31,
                1
            ],
            [
                "a",
                31,
                0
            ]
        ]
    },
    "98": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 32,
        "function_id": 98,
        "function_name": "llnHr",
        "function_start_line": 32,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                32,
                1
            ],
            [
                "a",
                32,
                0
            ]
        ]
    },
    "99": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 33,
        "function_id": 99,
        "function_name": "llfact",
        "function_start_line": 33,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 33
            }
        ],
        "parameters": [
            [
                "a",
                33,
                0
            ]
        ]
    },
    "100": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 34,
        "function_id": 100,
        "function_name": "llpow",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 34
            }
        ],
        "parameters": [
            [
                "b",
                34,
                1
            ],
            [
                "a",
                34,
                0
            ]
        ]
    },
    "101": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 35,
        "function_id": 101,
        "function_name": "lldsum",
        "function_start_line": 35,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "(x)",
                "loop_body_end_line": 35,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 35
            }
        ],
        "parameters": [
            [
                "x",
                35,
                0
            ]
        ]
    },
    "102": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 36,
        "function_id": 102,
        "function_name": "lldsumb",
        "function_start_line": 36,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "(x)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": [
            [
                "x",
                36,
                0
            ],
            [
                "b",
                36,
                1
            ]
        ]
    },
    "103": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 37,
        "function_id": 103,
        "function_name": "llsankaku",
        "function_start_line": 37,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                37,
                0
            ]
        ]
    },
    "104": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 38,
        "function_id": 104,
        "function_name": "dbmax",
        "function_start_line": 38,
        "if_statements": [
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                38,
                0
            ],
            [
                "b",
                38,
                1
            ]
        ]
    },
    "105": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 39,
        "function_id": 105,
        "function_name": "dbmin",
        "function_start_line": 39,
        "if_statements": [
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 39
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                39,
                0
            ],
            [
                "b",
                39,
                1
            ]
        ]
    },
    "106": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 40,
        "function_id": 106,
        "function_name": "dbzt",
        "function_start_line": 40,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                40,
                1
            ],
            [
                "a",
                40,
                0
            ]
        ]
    },
    "107": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 41,
        "function_id": 107,
        "function_name": "sortfncsj",
        "function_start_line": 41,
        "if_statements": [
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 41
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                41,
                0
            ],
            [
                "b",
                41,
                1
            ]
        ]
    },
    "108": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 42,
        "function_id": 108,
        "function_name": "sortfnckj",
        "function_start_line": 42,
        "if_statements": [
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                42,
                1
            ],
            [
                "a",
                42,
                0
            ]
        ]
    },
    "109": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 43,
        "function_id": 109,
        "function_name": "llsortfncsj",
        "function_start_line": 43,
        "if_statements": [
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 43
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                43,
                0
            ],
            [
                "b",
                43,
                1
            ]
        ]
    },
    "110": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 44,
        "function_id": 110,
        "function_name": "llsortfnckj",
        "function_start_line": 44,
        "if_statements": [
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                44,
                0
            ],
            [
                "b",
                44,
                1
            ]
        ]
    },
    "111": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 45,
        "function_id": 111,
        "function_name": "dbsortfncsj",
        "function_start_line": 45,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                45,
                1
            ],
            [
                "a",
                45,
                0
            ]
        ]
    },
    "112": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 46,
        "function_id": 112,
        "function_name": "dbsortfnckj",
        "function_start_line": 46,
        "if_statements": [
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                46,
                0
            ],
            [
                "b",
                46,
                1
            ]
        ]
    },
    "113": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 47,
        "function_id": 113,
        "function_name": "strsortfncsj",
        "function_start_line": 47,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                47,
                1
            ],
            [
                "a",
                47,
                0
            ]
        ]
    },
    "114": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 48,
        "function_id": 114,
        "function_name": "strsortfnckj",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                48,
                1
            ],
            [
                "a",
                48,
                0
            ]
        ]
    },
    "115": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 49,
        "function_id": 115,
        "function_name": "chsortfncsj",
        "function_start_line": 49,
        "if_statements": [
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                49,
                0
            ],
            [
                "b",
                49,
                1
            ]
        ]
    },
    "116": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 50,
        "function_id": 116,
        "function_name": "chsortfnckj",
        "function_start_line": 50,
        "if_statements": [
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                50,
                1
            ],
            [
                "a",
                50,
                0
            ]
        ]
    },
    "117": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 64,
        "function_id": 117,
        "function_name": "shuffledget",
        "function_start_line": 51,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 56,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "i=n;i>=1;i--",
                "loop_body_end_line": 60,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 63,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 61
            }
        ],
        "parameters": [
            [
                "x",
                51,
                0
            ],
            [
                "n",
                51,
                1
            ]
        ]
    },
    "118": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 76,
        "function_id": 118,
        "function_name": "search",
        "function_start_line": 69,
        "if_statements": [
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(a[te]<x)",
                "else_branch_end_line": 73,
                "else_branch_start_line": 73,
                "true_branch_end_line": 73,
                "true_branch_start_line": 73
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 71,
                "header_start_line": 71,
                "header_str": "(st<=fi)",
                "loop_body_end_line": 73,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 71
            }
        ],
        "parameters": [
            [
                "a",
                69,
                1
            ],
            [
                "n",
                69,
                2
            ],
            [
                "x",
                69,
                0
            ]
        ]
    },
    "119": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 85,
        "function_id": 119,
        "function_name": "prarr",
        "function_start_line": 77,
        "if_statements": [
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "(i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 80
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 82,
                "loop_body_start_line": 79,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 79
            }
        ],
        "parameters": [
            [
                "arr",
                77,
                0
            ],
            [
                "n",
                77,
                1
            ]
        ]
    },
    "120": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 94,
        "function_id": 120,
        "function_name": "sdsortfnc",
        "function_start_line": 90,
        "if_statements": [
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "(((sd*)a)->val < ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 91,
                "true_branch_start_line": 91
            },
            {
                "condition_end_line": 92,
                "condition_start_line": 92,
                "condition_str": "(((sd*)a)->val > ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 92,
                "true_branch_start_line": 92
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                90,
                0
            ],
            [
                "b",
                90,
                1
            ]
        ]
    },
    "121": {
        "filepath": "code/codenet_p03663_s665423943_main_95_166.c",
        "function_end_line": 166,
        "function_id": 121,
        "function_name": "main",
        "function_start_line": 95,
        "if_statements": [
            {
                "condition_end_line": 104,
                "condition_start_line": 104,
                "condition_str": "(s[0]=='Y')",
                "else_branch_end_line": 107,
                "else_branch_start_line": 106,
                "true_branch_end_line": 105,
                "true_branch_start_line": 105
            },
            {
                "condition_end_line": 112,
                "condition_start_line": 112,
                "condition_str": "(t[0]=='Y')",
                "else_branch_end_line": 115,
                "else_branch_start_line": 114,
                "true_branch_end_line": 113,
                "true_branch_start_line": 113
            },
            {
                "condition_end_line": 117,
                "condition_start_line": 117,
                "condition_str": "(fl==1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 129,
                "true_branch_start_line": 117
            },
            {
                "condition_end_line": 119,
                "condition_start_line": 119,
                "condition_str": "(mem[i][1]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 122,
                "true_branch_start_line": 119
            },
            {
                "condition_end_line": 123,
                "condition_start_line": 123,
                "condition_str": "(i==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 127,
                "true_branch_start_line": 123
            },
            {
                "condition_end_line": 130,
                "condition_start_line": 130,
                "condition_str": "(fl==2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 137,
                "true_branch_start_line": 130
            },
            {
                "condition_end_line": 132,
                "condition_start_line": 132,
                "condition_str": "(mem[i][0]==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 135,
                "true_branch_start_line": 132
            },
            {
                "condition_end_line": 138,
                "condition_start_line": 138,
                "condition_str": "(fl==3)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 145,
                "true_branch_start_line": 138
            },
            {
                "condition_end_line": 140,
                "condition_start_line": 140,
                "condition_str": "((mem[i][0]&mem[i][1])==1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 143,
                "true_branch_start_line": 140
            },
            {
                "condition_end_line": 158,
                "condition_start_line": 158,
                "condition_str": "(s[0]=='N')",
                "else_branch_end_line": 161,
                "else_branch_start_line": 161,
                "true_branch_end_line": 160,
                "true_branch_start_line": 158
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 99,
                "header_start_line": 99,
                "header_str": "i=9;i>=0;i--",
                "loop_body_end_line": 116,
                "loop_body_start_line": 99,
                "loop_statement_end_line": 116,
                "loop_statement_start_line": 99
            },
            {
                "header_end_line": 118,
                "header_start_line": 118,
                "header_str": "i=9;i>=0;i--",
                "loop_body_end_line": 128,
                "loop_body_start_line": 118,
                "loop_statement_end_line": 128,
                "loop_statement_start_line": 118
            },
            {
                "header_end_line": 131,
                "header_start_line": 131,
                "header_str": "i=0;i<=9;i++",
                "loop_body_end_line": 136,
                "loop_body_start_line": 131,
                "loop_statement_end_line": 136,
                "loop_statement_start_line": 131
            },
            {
                "header_end_line": 139,
                "header_start_line": 139,
                "header_str": "i=0;i<=9;i++",
                "loop_body_end_line": 144,
                "loop_body_start_line": 139,
                "loop_statement_end_line": 144,
                "loop_statement_start_line": 139
            },
            {
                "header_end_line": 148,
                "header_start_line": 148,
                "header_str": "i = 1; i <= dg; i++",
                "loop_body_end_line": 149,
                "loop_body_start_line": 149,
                "loop_statement_end_line": 149,
                "loop_statement_start_line": 148
            },
            {
                "header_end_line": 150,
                "header_start_line": 150,
                "header_str": "i = 1; i <= dg + 1; i++",
                "loop_body_end_line": 151,
                "loop_body_start_line": 151,
                "loop_statement_end_line": 151,
                "loop_statement_start_line": 150
            },
            {
                "header_end_line": 153,
                "header_start_line": 153,
                "header_str": "(st<=fi)",
                "loop_body_end_line": 161,
                "loop_body_start_line": 154,
                "loop_statement_end_line": 162,
                "loop_statement_start_line": 153
            }
        ],
        "parameters": []
    },
    "122": {
        "filepath": "code/codenet_p03574_s863879429_calc_2_81.c",
        "function_end_line": 81,
        "function_id": 122,
        "function_name": "calc",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "(row[j] == '#')",
                "else_branch_end_line": 18,
                "else_branch_start_line": 15,
                "true_branch_end_line": 14,
                "true_branch_start_line": 12
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(panel[i][j] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(0 <= (i - 1) && 0 <= (j - 1) && panel[i - 1][j - 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(0 <= (i - 1) && panel[i - 1][j] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(0 <= (i - 1) && (j + 1) < w && panel[i - 1][j + 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(0 <= (j - 1) && panel[i][j - 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "((j + 1) < w && panel[i][j + 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "((i + 1) < h && 0 <= (j - 1) && panel[i + 1][j - 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "((i + 1) < h && panel[i + 1][j] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "((i + 1) < h && (j + 1) < w && panel[i + 1][j + 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(panel[i][j] == -1)",
                "else_branch_end_line": 76,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 70
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "int i = 0; i < h; i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "int j = 0; j < w; j++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "int i = 0; i < h; i++",
                "loop_body_end_line": 64,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "int j = 0; j < w; j++",
                "loop_body_end_line": 63,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "int i = 0; i < h; i++",
                "loop_body_end_line": 79,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "int j = 0; j < w; j++",
                "loop_body_end_line": 77,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 67
            }
        ],
        "parameters": []
    },
    "123": {
        "filepath": "code/codenet_p03574_s863879429_calc_2_81.c",
        "function_end_line": 88,
        "function_id": 123,
        "function_name": "main",
        "function_start_line": 82,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "124": {
        "filepath": "code/gcj_104e05_10de1d_CodeJam_8_68.c",
        "function_end_line": 68,
        "function_id": 124,
        "function_name": "CodeJam",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(strcmp(word[j], word[j + 1]) > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(rw[i][j] == rw[i + 1][j])",
                "else_branch_end_line": 58,
                "else_branch_start_line": 55,
                "true_branch_end_line": 54,
                "true_branch_start_line": 52
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "i = 0; i != n; i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i = 0; i != 1000; i++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "j = 0; j != 50; j++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "i = 0; i != n; i++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "j = 0; j != strlen(word[i]); j++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "i = 0; i != n - 1; i++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "j = 0; j != n - 1 - i; j++",
                "loop_body_end_line": 45,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 37
            },
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "i = 0; i != n - 1; i++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 48,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "j = 0; j != strlen(rw[i]) > strlen(rw[i + 1]) ? strlen(rw[i + 1]) : strlen(rw[i]); j++",
                "loop_body_end_line": 59,
                "loop_body_start_line": 50,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 49
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "i = 2; i != 1000; i++",
                "loop_body_end_line": 66,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 63
            }
        ],
        "parameters": [
            [
                "n",
                8,
                0
            ]
        ]
    },
    "125": {
        "filepath": "code/gcj_104e05_10de1d_CodeJam_8_68.c",
        "function_end_line": 82,
        "function_id": 125,
        "function_name": "main",
        "function_start_line": 69,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "i = 1; i <= t; ++i",
                "loop_body_end_line": 80,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 74
            }
        ],
        "parameters": []
    },
    "126": {
        "filepath": "code/gcj_104f1a_1119c4_solve_13_42.c",
        "function_end_line": 12,
        "function_id": 126,
        "function_name": "main",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "argc",
                9,
                0
            ],
            [
                "argv",
                9,
                1
            ]
        ]
    },
    "127": {
        "filepath": "code/gcj_104f1a_1119c4_solve_13_42.c",
        "function_end_line": 42,
        "function_id": 127,
        "function_name": "solve",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "(numBlades > 18)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "((sum % numBlades) == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(correct == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "int c = 1; c <= numCases; c++",
                "loop_body_end_line": 41,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 41,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "int night = 1; night <= maxNights; night++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "int hole = 0; hole < 18; hole++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "int hole = 0; hole < 18; hole++",
                "loop_body_end_line": 31,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": []
    },
    "128": {
        "filepath": "code/gcj_104f1a_1119c4_solve_13_42.c",
        "function_end_line": 47,
        "function_id": 128,
        "function_name": "getInt",
        "function_start_line": 43,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "129": {
        "filepath": "code/gcj_104f1a_1119c4_solve_13_42.c",
        "function_end_line": 52,
        "function_id": 129,
        "function_name": "getFloat",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "130": {
        "filepath": "code/gcj_104f1a_1119c4_solve_13_42.c",
        "function_end_line": 70,
        "function_id": 130,
        "function_name": "getWord",
        "function_start_line": 53,
        "if_statements": [
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(i + 1 >= size)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 61
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "(isspace(c = getchar()))",
                "loop_body_end_line": 58,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "(!isspace(c = getchar()))",
                "loop_body_end_line": 66,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 60
            }
        ],
        "parameters": []
    },
    "131": {
        "filepath": "code/gcj_122838_1307fa_main_15_103.c",
        "function_end_line": 8,
        "function_id": 131,
        "function_name": "min",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 6,
                "true_branch_start_line": 4
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                3,
                0
            ],
            [
                "b",
                3,
                1
            ]
        ]
    },
    "132": {
        "filepath": "code/gcj_122838_1307fa_main_15_103.c",
        "function_end_line": 14,
        "function_id": 132,
        "function_name": "max",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                9,
                1
            ],
            [
                "a",
                9,
                0
            ]
        ]
    },
    "133": {
        "filepath": "code/gcj_122838_1307fa_main_15_103.c",
        "function_end_line": 103,
        "function_id": 133,
        "function_name": "main",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(a[l_temp]<=a[i])",
                "else_branch_end_line": 44,
                "else_branch_start_line": 42,
                "true_branch_end_line": 41,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(b[l_temp]<=b[i])",
                "else_branch_end_line": 54,
                "else_branch_start_line": 52,
                "true_branch_end_line": 51,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(a[l_temp]<=a[i])",
                "else_branch_end_line": 64,
                "else_branch_start_line": 62,
                "true_branch_end_line": 61,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(b[l_temp]<=b[i])",
                "else_branch_end_line": 74,
                "else_branch_start_line": 72,
                "true_branch_end_line": 71,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "(l_b[j] < i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 87,
                "true_branch_start_line": 83
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(a[i]-b[j] <= k && a[i]-b[j] >= -k)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 86,
                "true_branch_start_line": 84
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "(l_a[j] < i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 98,
                "true_branch_start_line": 94
            },
            {
                "condition_end_line": 95,
                "condition_start_line": 95,
                "condition_str": "(a[j]-b[i] <= k && a[j]-b[i] >= -k)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 97,
                "true_branch_start_line": 95
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "int m = 1; m <= t; ++m",
                "loop_body_end_line": 102,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 102,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 26,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 30,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 34,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 77,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 89,
                "loop_body_start_line": 80,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 79
            },
            {
                "header_end_line": 81,
                "header_start_line": 81,
                "header_str": "int j = i; j < r_a[i]; ++j",
                "loop_body_end_line": 88,
                "loop_body_start_line": 82,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 81
            },
            {
                "header_end_line": 90,
                "header_start_line": 90,
                "header_str": "int i = 0; i < n; ++i",
                "loop_body_end_line": 100,
                "loop_body_start_line": 91,
                "loop_statement_end_line": 100,
                "loop_statement_start_line": 90
            },
            {
                "header_end_line": 92,
                "header_start_line": 92,
                "header_str": "int j = i+1; j < r_b[i]; ++j",
                "loop_body_end_line": 99,
                "loop_body_start_line": 93,
                "loop_statement_end_line": 99,
                "loop_statement_start_line": 92
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "(l_temp>-1)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "(l_temp>-1)",
                "loop_body_end_line": 54,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 48
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "(l_temp<n)",
                "loop_body_end_line": 64,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "(l_temp<n)",
                "loop_body_end_line": 74,
                "loop_body_start_line": 69,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 68
            }
        ],
        "parameters": []
    },
    "134": {
        "filepath": "code/gcj_146183_146d34_main_27_75.c",
        "function_end_line": 18,
        "function_id": 134,
        "function_name": "comp",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(c1 == c2)",
                "else_branch_end_line": 17,
                "else_branch_start_line": 16,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(c1 > c2)",
                "else_branch_end_line": 17,
                "else_branch_start_line": 17,
                "true_branch_end_line": 16,
                "true_branch_start_line": 16
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                9,
                1
            ],
            [
                "a",
                9,
                0
            ]
        ]
    },
    "135": {
        "filepath": "code/gcj_146183_146d34_main_27_75.c",
        "function_end_line": 26,
        "function_id": 135,
        "function_name": "abs",
        "function_start_line": 19,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "(n < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 22
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                19,
                0
            ]
        ]
    },
    "136": {
        "filepath": "code/gcj_146183_146d34_main_27_75.c",
        "function_end_line": 75,
        "function_id": 136,
        "function_name": "main",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(tmp < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 51,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "(pair == 0)",
                "else_branch_end_line": 72,
                "else_branch_start_line": 58,
                "true_branch_end_line": 57,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "(c1 != c2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 69,
                "true_branch_start_line": 67
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "int cas = 1; cas <= cases; cas++",
                "loop_body_end_line": 73,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 73,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "int i = 1; i <= N; i++",
                "loop_body_end_line": 38,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "int i = 1; i <= N; i++",
                "loop_body_end_line": 53,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "int j = i + 1; j <= N; j++",
                "loop_body_end_line": 52,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "int i = 1; i < pair; i++",
                "loop_body_end_line": 70,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 62
            }
        ],
        "parameters": []
    },
    "137": {
        "filepath": "code/gcj_146184_14a46a_main_21_91.c",
        "function_end_line": 14,
        "function_id": 137,
        "function_name": "Abs",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(a < 0)",
                "else_branch_end_line": 13,
                "else_branch_start_line": 12,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                9,
                0
            ]
        ]
    },
    "138": {
        "filepath": "code/gcj_146184_14a46a_main_21_91.c",
        "function_end_line": 20,
        "function_id": 138,
        "function_name": "gcd",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(b == 0)",
                "else_branch_end_line": 19,
                "else_branch_start_line": 18,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                15,
                1
            ],
            [
                "a",
                15,
                0
            ]
        ]
    },
    "139": {
        "filepath": "code/gcj_146184_14a46a_main_21_91.c",
        "function_end_line": 91,
        "function_id": 139,
        "function_name": "main",
        "function_start_line": 21,
        "if_statements": [
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "((arr[i].c <= arr[j].c && arr[i].j <= arr[j].j))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(arr[i].c >= arr[j].c && arr[i].j >= arr[j].j)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(flag_big == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(a > 0)",
                "else_branch_end_line": 52,
                "else_branch_start_line": 51,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "(flag_big == 1)",
                "else_branch_end_line": 71,
                "else_branch_start_line": 63,
                "true_branch_end_line": 62,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(a < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(max < b / a)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "(a > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "(max < b / a)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 70,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(flag)",
                "else_branch_end_line": 89,
                "else_branch_start_line": 75,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "(flag_big == -1)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 80,
                "true_branch_end_line": 79,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "(flag_big == 1)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 84,
                "true_branch_end_line": 83,
                "true_branch_start_line": 80
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "t = 1; t <= T; t++",
                "loop_body_end_line": 90,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "i = 1; i <= N; i++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 34
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "i = 1; i < N; i++",
                "loop_body_end_line": 72,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 38
            }
        ],
        "parameters": []
    },
    "140": {
        "filepath": "code/gcj_20993c_23e217_Ans_3_84.c",
        "function_end_line": 84,
        "function_id": 140,
        "function_name": "Ans",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(i==j)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(Mat[i][j] == Mat[i][k])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(count[i]==0)",
                "else_branch_end_line": 35,
                "else_branch_start_line": 34,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(count[j]>=count[j+1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "(Mat[i][j] == Mat[k][j] )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "(ccount[j]==0)",
                "else_branch_end_line": 65,
                "else_branch_start_line": 64,
                "true_branch_end_line": 63,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "(ccount[j]>=ccount[j+1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 77
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 12,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 11,
                "loop_body_start_line": 11,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 10
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 22,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 21,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 40,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "j=0; j<n; j++",
                "loop_body_end_line": 39,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "k=j+1; k<n; k++",
                "loop_body_end_line": 38,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 70,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 56,
                "header_start_line": 56,
                "header_str": "i=0; i<n; i++",
                "loop_body_end_line": 69,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 56
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "k=i+1; k<n; k++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 81,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 81,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 80,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 74
            }
        ],
        "parameters": [
            [
                "x",
                3,
                0
            ]
        ]
    },
    "141": {
        "filepath": "code/gcj_20993c_23e217_Ans_3_84.c",
        "function_end_line": 92,
        "function_id": 141,
        "function_name": "main",
        "function_start_line": 85,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "i=0;i<T;i++",
                "loop_body_end_line": 90,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 89
            }
        ],
        "parameters": []
    },
    "142": {
        "filepath": "code/gcj_3179a1_31d168_solve_3_36.c",
        "function_end_line": 36,
        "function_id": 142,
        "function_name": "solve",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "(lr==lm)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(MC[R[0]-'A'] > M[0]-'0')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "(O[i])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "i=0; i<26; i++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "(i<10000)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 13
            }
        ],
        "parameters": [
            [
                "T",
                3,
                0
            ]
        ]
    },
    "143": {
        "filepath": "code/gcj_3179a1_31d168_solve_3_36.c",
        "function_end_line": 47,
        "function_id": 143,
        "function_name": "main",
        "function_start_line": 37,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "(T--)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 42
            }
        ],
        "parameters": []
    },
    "144": {
        "filepath": "code/gcj_3675b_3a5f3_main_5_66.c",
        "function_end_line": 66,
        "function_id": 144,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "(M[i] ==M[i-1])",
                "else_branch_end_line": 39,
                "else_branch_start_line": 32,
                "true_branch_end_line": 31,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "(N[i] ==N[i-1])",
                "else_branch_end_line": 50,
                "else_branch_start_line": 43,
                "true_branch_end_line": 42,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(getmax(longm[i], longn[i]) > max)",
                "else_branch_end_line": 61,
                "else_branch_start_line": 59,
                "true_branch_end_line": 58,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(getmax(longm[i], longn[i]) == max)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 59
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "test=1; test<=ntests; test++",
                "loop_body_end_line": 64,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=0; i<s; i++",
                "loop_body_end_line": 25,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "i=1; i<s; i++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "i=1; i<s; i++",
                "loop_body_end_line": 62,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "(j>=0 && (M[j]==M[i] || N[j]==N[i-1]))",
                "loop_body_end_line": 37,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "(j>=0 && (N[j]==N[i] || M[j]==M[i-1]))",
                "loop_body_end_line": 48,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 46
            }
        ],
        "parameters": [
            [
                "argv",
                5,
                1
            ],
            [
                "argc",
                5,
                0
            ]
        ]
    },
    "145": {
        "filepath": "code/gcj_3675b_3a5f3_main_5_66.c",
        "function_end_line": 72,
        "function_id": 145,
        "function_name": "getmax",
        "function_start_line": 67,
        "if_statements": [
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 70,
                "true_branch_start_line": 68
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                67,
                1
            ],
            [
                "a",
                67,
                0
            ]
        ]
    },
    "146": {
        "filepath": "code/gcj_3675c_3b9f6_calc_7_70.c",
        "function_end_line": 70,
        "function_id": 146,
        "function_name": "calc",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(f[j] > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(n > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(f[j] > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "(s > S)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 53
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "int i = 0; i < M; i++",
                "loop_body_end_line": 18,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "int i = 0; i < M; i++",
                "loop_body_end_line": 26,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "int j = 0; j < M; j++",
                "loop_body_end_line": 37,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "int j = 0; j < M; j++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 42,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "(s <= S)",
                "loop_body_end_line": 63,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": []
    },
    "147": {
        "filepath": "code/gcj_3675c_3b9f6_calc_7_70.c",
        "function_end_line": 81,
        "function_id": 147,
        "function_name": "main",
        "function_start_line": 71,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "int t = 1; t <= T; t++",
                "loop_body_end_line": 79,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 75
            }
        ],
        "parameters": []
    },
    "148": {
        "filepath": "code/gcj_652_7592_fill_bathroom_7_80.c",
        "function_end_line": 80,
        "function_id": 148,
        "function_name": "fill_bathroom",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(stalls_occupancy[j] == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(crit1 >= max_crit1 && crit2 > max_crit2)",
                "else_branch_end_line": 41,
                "else_branch_start_line": 36,
                "true_branch_end_line": 35,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(crit1 > max_crit1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(stalls_occupancy[i] == 0)",
                "else_branch_end_line": 58,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "(stalls_occupancy[i] == 0)",
                "else_branch_end_line": 73,
                "else_branch_start_line": 68,
                "true_branch_end_line": 67,
                "true_branch_start_line": 64
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "int i = 0; i < stalls; i++",
                "loop_body_end_line": 18,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "int i = 0; i < users; i++",
                "loop_body_end_line": 75,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "int j = 0; j < stalls; j++",
                "loop_body_end_line": 43,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "int i = pos + 1; i < stalls; i++",
                "loop_body_end_line": 59,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "int i = pos - 1; i >= 0; i--",
                "loop_body_end_line": 74,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 61
            }
        ],
        "parameters": [
            [
                "stalls",
                7,
                1
            ],
            [
                "n_case",
                7,
                0
            ],
            [
                "users",
                7,
                2
            ]
        ]
    },
    "149": {
        "filepath": "code/gcj_652_7592_fill_bathroom_7_80.c",
        "function_end_line": 91,
        "function_id": 149,
        "function_name": "main",
        "function_start_line": 81,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "int i = 0; i < T; i++",
                "loop_body_end_line": 89,
                "loop_body_start_line": 85,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 84
            }
        ],
        "parameters": []
    },
    "150": {
        "filepath": "code/gcj_2fff7_330ba_main_22_75.c",
        "function_end_line": 21,
        "function_id": 150,
        "function_name": "dpr",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "fmt",
                11,
                0
            ]
        ]
    },
    "151": {
        "filepath": "code/gcj_2fff7_330ba_main_22_75.c",
        "function_end_line": 75,
        "function_id": 151,
        "function_name": "main",
        "function_start_line": 22,
        "if_statements": [
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(best_min[k] + min_add[j] < P && best_max[k] > max1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 59,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "(best_min[j] <= P && best_max[j] > best_valid)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "(best_valid > P)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 67
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "int i = 0; i < T; i++",
                "loop_body_end_line": 73,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 73,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "int j = 0; j < N; j++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "int j = 0; j < N; j++",
                "loop_body_end_line": 65,
                "loop_body_start_line": 50,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 49
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "int k = 0; k < j; k++",
                "loop_body_end_line": 59,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 54
            }
        ],
        "parameters": []
    },
    "152": {
        "filepath": "code/gcj_459f2_49d75_main_7_98.c",
        "function_end_line": 6,
        "function_id": 152,
        "function_name": "max",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                6,
                0
            ],
            [
                "b",
                6,
                1
            ]
        ]
    },
    "153": {
        "filepath": "code/gcj_459f2_49d75_main_7_98.c",
        "function_end_line": 98,
        "function_id": 153,
        "function_name": "main",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "(A[1] == 0 || A[C] == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(cur >= 1)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 47,
                "true_branch_end_line": 47,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(A[j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(cur >= 1)",
                "else_branch_end_line": 59,
                "else_branch_start_line": 53,
                "true_branch_end_line": 53,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(res[i][j] == '.')",
                "else_branch_end_line": 74,
                "else_branch_start_line": 71,
                "true_branch_end_line": 70,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "(res[i][j] == '\\\\')",
                "else_branch_end_line": 74,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(res[i][j] == '/')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 79,
                "condition_start_line": 79,
                "condition_str": "(res[R+1][i] != ori[i])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 81,
                "true_branch_start_line": 79
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "(!valid)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 86,
                "true_branch_start_line": 83
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "int tc=0; tc<T; tc++",
                "loop_body_end_line": 96,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 96,
                "loop_statement_start_line": 10
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 16,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 28,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "int j=1; j<=C; j++",
                "loop_body_end_line": 28,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 61,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "int j=1; j<C; j++",
                "loop_body_end_line": 38,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 34
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "int j=i; j>fi; j--",
                "loop_body_end_line": 42,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "int j=1; j<=-cur+1; j++",
                "loop_body_end_line": 56,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 55
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "int i=1; i<=R+1; i++",
                "loop_body_end_line": 64,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "int j=1; j<=C; j++",
                "loop_body_end_line": 64,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 66,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "int i=1; i<=R; i++",
                "loop_body_end_line": 76,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "int j=1; j<=C; j++",
                "loop_body_end_line": 75,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 68
            },
            {
                "header_end_line": 78,
                "header_start_line": 78,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 82,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 78
            },
            {
                "header_end_line": 88,
                "header_start_line": 88,
                "header_str": "int i=1; i<=R; i++",
                "loop_body_end_line": 92,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 92,
                "loop_statement_start_line": 88
            },
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "int j=1; j<=C; j++",
                "loop_body_end_line": 90,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 89
            },
            {
                "header_end_line": 93,
                "header_start_line": 93,
                "header_str": "int i=1; i<=C; i++",
                "loop_body_end_line": 94,
                "loop_body_start_line": 94,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 93
            }
        ],
        "parameters": []
    },
    "154": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 60,
        "function_id": 154,
        "function_name": "solveRound",
        "function_start_line": 30,
        "if_statements": [
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "((r+b) < k)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "((r >= i) && (b >= (k -i)))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "((2 * i) == k)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "((r >= i) && (b >= (k -i)))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 52
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "int i = k / 2; i >= 0; i--",
                "loop_body_end_line": 57,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "(1)",
                "loop_body_end_line": 58,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": [
            [
                "round",
                30,
                0
            ]
        ]
    },
    "155": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 65,
        "function_id": 155,
        "function_name": "printRound",
        "function_start_line": 61,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "round",
                61,
                0
            ]
        ]
    },
    "156": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 70,
        "function_id": 156,
        "function_name": "playRound",
        "function_start_line": 66,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "round",
                66,
                0
            ]
        ]
    },
    "157": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 76,
        "function_id": 157,
        "function_name": "resetRound",
        "function_start_line": 71,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "round",
                71,
                0
            ]
        ]
    },
    "158": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 83,
        "function_id": 158,
        "function_name": "allocRound",
        "function_start_line": 77,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "159": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 89,
        "function_id": 159,
        "function_name": "fetchNextRound",
        "function_start_line": 84,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "round",
                84,
                0
            ],
            [
                "id",
                84,
                1
            ]
        ]
    },
    "160": {
        "filepath": "code/gcj_459f3_49ba9_solveRound_30_60.c",
        "function_end_line": 99,
        "function_id": 160,
        "function_name": "main",
        "function_start_line": 90,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 95,
                "header_start_line": 95,
                "header_str": "int i = 1; i <= T; i++",
                "loop_body_end_line": 98,
                "loop_body_start_line": 95,
                "loop_statement_end_line": 98,
                "loop_statement_start_line": 95
            }
        ],
        "parameters": []
    },
    "161": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 10,
        "function_id": 161,
        "function_name": "max",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 10,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                10,
                1
            ],
            [
                "a",
                10,
                0
            ]
        ]
    },
    "162": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 11,
        "function_id": 162,
        "function_name": "min",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                11,
                0
            ],
            [
                "b",
                11,
                1
            ]
        ]
    },
    "163": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 12,
        "function_id": 163,
        "function_name": "zt",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                12,
                1
            ],
            [
                "a",
                12,
                0
            ]
        ]
    },
    "164": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 13,
        "function_id": 164,
        "function_name": "round",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                13,
                1
            ],
            [
                "a",
                13,
                0
            ]
        ]
    },
    "165": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 14,
        "function_id": 165,
        "function_name": "ceil",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                14,
                0
            ],
            [
                "b",
                14,
                1
            ]
        ]
    },
    "166": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 15,
        "function_id": 166,
        "function_name": "gcd",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "(b!=0)",
                "loop_body_end_line": 15,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 15
            }
        ],
        "parameters": [
            [
                "b",
                15,
                1
            ],
            [
                "a",
                15,
                0
            ]
        ]
    },
    "167": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 16,
        "function_id": 167,
        "function_name": "lcm",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                16,
                0
            ],
            [
                "b",
                16,
                1
            ]
        ]
    },
    "168": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 17,
        "function_id": 168,
        "function_name": "nCr",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": [
            [
                "b",
                17,
                1
            ],
            [
                "a",
                17,
                0
            ]
        ]
    },
    "169": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 18,
        "function_id": 169,
        "function_name": "nHr",
        "function_start_line": 18,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                18,
                1
            ],
            [
                "a",
                18,
                0
            ]
        ]
    },
    "170": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 19,
        "function_id": 170,
        "function_name": "fact",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 19
            }
        ],
        "parameters": [
            [
                "a",
                19,
                0
            ]
        ]
    },
    "171": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 20,
        "function_id": 171,
        "function_name": "pow",
        "function_start_line": 20,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 20
            }
        ],
        "parameters": [
            [
                "b",
                20,
                1
            ],
            [
                "a",
                20,
                0
            ]
        ]
    },
    "172": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 21,
        "function_id": 172,
        "function_name": "dsum",
        "function_start_line": 21,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "(x)",
                "loop_body_end_line": 21,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "x",
                21,
                0
            ]
        ]
    },
    "173": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 22,
        "function_id": 173,
        "function_name": "dsumb",
        "function_start_line": 22,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "(x)",
                "loop_body_end_line": 22,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 22
            }
        ],
        "parameters": [
            [
                "x",
                22,
                0
            ],
            [
                "b",
                22,
                1
            ]
        ]
    },
    "174": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 23,
        "function_id": 174,
        "function_name": "sankaku",
        "function_start_line": 23,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                23,
                0
            ]
        ]
    },
    "175": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 24,
        "function_id": 175,
        "function_name": "llmax",
        "function_start_line": 24,
        "if_statements": [
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 24
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                24,
                1
            ],
            [
                "a",
                24,
                0
            ]
        ]
    },
    "176": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 25,
        "function_id": 176,
        "function_name": "llmin",
        "function_start_line": 25,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                25,
                0
            ],
            [
                "b",
                25,
                1
            ]
        ]
    },
    "177": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 26,
        "function_id": 177,
        "function_name": "llzt",
        "function_start_line": 26,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                26,
                1
            ],
            [
                "a",
                26,
                0
            ]
        ]
    },
    "178": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 27,
        "function_id": 178,
        "function_name": "llround",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                27,
                1
            ],
            [
                "a",
                27,
                0
            ]
        ]
    },
    "179": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 28,
        "function_id": 179,
        "function_name": "llceil",
        "function_start_line": 28,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                28,
                0
            ],
            [
                "b",
                28,
                1
            ]
        ]
    },
    "180": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 29,
        "function_id": 180,
        "function_name": "llgcd",
        "function_start_line": 29,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "(b!=0)",
                "loop_body_end_line": 29,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": [
            [
                "b",
                29,
                1
            ],
            [
                "a",
                29,
                0
            ]
        ]
    },
    "181": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 30,
        "function_id": 181,
        "function_name": "lllcm",
        "function_start_line": 30,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                30,
                0
            ],
            [
                "b",
                30,
                1
            ]
        ]
    },
    "182": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 31,
        "function_id": 182,
        "function_name": "llnCr",
        "function_start_line": 31,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 31,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": [
            [
                "b",
                31,
                1
            ],
            [
                "a",
                31,
                0
            ]
        ]
    },
    "183": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 32,
        "function_id": 183,
        "function_name": "llnHr",
        "function_start_line": 32,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                32,
                1
            ],
            [
                "a",
                32,
                0
            ]
        ]
    },
    "184": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 33,
        "function_id": 184,
        "function_name": "llfact",
        "function_start_line": 33,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 33
            }
        ],
        "parameters": [
            [
                "a",
                33,
                0
            ]
        ]
    },
    "185": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 34,
        "function_id": 185,
        "function_name": "llpow",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 34
            }
        ],
        "parameters": [
            [
                "b",
                34,
                1
            ],
            [
                "a",
                34,
                0
            ]
        ]
    },
    "186": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 35,
        "function_id": 186,
        "function_name": "lldsum",
        "function_start_line": 35,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "(x)",
                "loop_body_end_line": 35,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 35
            }
        ],
        "parameters": [
            [
                "x",
                35,
                0
            ]
        ]
    },
    "187": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 36,
        "function_id": 187,
        "function_name": "lldsumb",
        "function_start_line": 36,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "(x)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": [
            [
                "x",
                36,
                0
            ],
            [
                "b",
                36,
                1
            ]
        ]
    },
    "188": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 37,
        "function_id": 188,
        "function_name": "llsankaku",
        "function_start_line": 37,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                37,
                0
            ]
        ]
    },
    "189": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 38,
        "function_id": 189,
        "function_name": "dbmax",
        "function_start_line": 38,
        "if_statements": [
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                38,
                0
            ],
            [
                "b",
                38,
                1
            ]
        ]
    },
    "190": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 39,
        "function_id": 190,
        "function_name": "dbmin",
        "function_start_line": 39,
        "if_statements": [
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 39
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                39,
                0
            ],
            [
                "b",
                39,
                1
            ]
        ]
    },
    "191": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 40,
        "function_id": 191,
        "function_name": "dbzt",
        "function_start_line": 40,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                40,
                1
            ],
            [
                "a",
                40,
                0
            ]
        ]
    },
    "192": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 41,
        "function_id": 192,
        "function_name": "sortfncsj",
        "function_start_line": 41,
        "if_statements": [
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 41
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                41,
                0
            ],
            [
                "b",
                41,
                1
            ]
        ]
    },
    "193": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 42,
        "function_id": 193,
        "function_name": "sortfnckj",
        "function_start_line": 42,
        "if_statements": [
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                42,
                1
            ],
            [
                "a",
                42,
                0
            ]
        ]
    },
    "194": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 43,
        "function_id": 194,
        "function_name": "llsortfncsj",
        "function_start_line": 43,
        "if_statements": [
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 43
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                43,
                0
            ],
            [
                "b",
                43,
                1
            ]
        ]
    },
    "195": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 44,
        "function_id": 195,
        "function_name": "llsortfnckj",
        "function_start_line": 44,
        "if_statements": [
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                44,
                0
            ],
            [
                "b",
                44,
                1
            ]
        ]
    },
    "196": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 45,
        "function_id": 196,
        "function_name": "dbsortfncsj",
        "function_start_line": 45,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                45,
                1
            ],
            [
                "a",
                45,
                0
            ]
        ]
    },
    "197": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 46,
        "function_id": 197,
        "function_name": "dbsortfnckj",
        "function_start_line": 46,
        "if_statements": [
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                46,
                0
            ],
            [
                "b",
                46,
                1
            ]
        ]
    },
    "198": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 47,
        "function_id": 198,
        "function_name": "strsortfncsj",
        "function_start_line": 47,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                47,
                1
            ],
            [
                "a",
                47,
                0
            ]
        ]
    },
    "199": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 48,
        "function_id": 199,
        "function_name": "strsortfnckj",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                48,
                1
            ],
            [
                "a",
                48,
                0
            ]
        ]
    },
    "200": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 49,
        "function_id": 200,
        "function_name": "chsortfncsj",
        "function_start_line": 49,
        "if_statements": [
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                49,
                0
            ],
            [
                "b",
                49,
                1
            ]
        ]
    },
    "201": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 50,
        "function_id": 201,
        "function_name": "chsortfnckj",
        "function_start_line": 50,
        "if_statements": [
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                50,
                1
            ],
            [
                "a",
                50,
                0
            ]
        ]
    },
    "202": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 64,
        "function_id": 202,
        "function_name": "shuffledget",
        "function_start_line": 51,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 56,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "i=n;i>=1;i--",
                "loop_body_end_line": 60,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 63,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 61
            }
        ],
        "parameters": [
            [
                "x",
                51,
                0
            ],
            [
                "n",
                51,
                1
            ]
        ]
    },
    "203": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 76,
        "function_id": 203,
        "function_name": "search",
        "function_start_line": 69,
        "if_statements": [
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(a[te]<x)",
                "else_branch_end_line": 73,
                "else_branch_start_line": 73,
                "true_branch_end_line": 73,
                "true_branch_start_line": 73
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 71,
                "header_start_line": 71,
                "header_str": "(st<=fi)",
                "loop_body_end_line": 73,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 71
            }
        ],
        "parameters": [
            [
                "a",
                69,
                1
            ],
            [
                "n",
                69,
                2
            ],
            [
                "x",
                69,
                0
            ]
        ]
    },
    "204": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 85,
        "function_id": 204,
        "function_name": "prarr",
        "function_start_line": 77,
        "if_statements": [
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "(i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 80
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 82,
                "loop_body_start_line": 79,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 79
            }
        ],
        "parameters": [
            [
                "arr",
                77,
                0
            ],
            [
                "n",
                77,
                1
            ]
        ]
    },
    "205": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 94,
        "function_id": 205,
        "function_name": "sdsortfnc",
        "function_start_line": 90,
        "if_statements": [
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "(((sd*)a)->val < ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 91,
                "true_branch_start_line": 91
            },
            {
                "condition_end_line": 92,
                "condition_start_line": 92,
                "condition_str": "(((sd*)a)->val > ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 92,
                "true_branch_start_line": 92
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                90,
                0
            ],
            [
                "b",
                90,
                1
            ]
        ]
    },
    "206": {
        "filepath": "code/gcj_1461c8_14bd4f_main_95_141.c",
        "function_end_line": 141,
        "function_id": 206,
        "function_name": "main",
        "function_start_line": 95,
        "if_statements": [
            {
                "condition_end_line": 104,
                "condition_start_line": 104,
                "condition_str": "(j<=56)",
                "else_branch_end_line": 137,
                "else_branch_start_line": 108,
                "true_branch_end_line": 107,
                "true_branch_start_line": 104
            },
            {
                "condition_end_line": 108,
                "condition_start_line": 108,
                "condition_str": "(j<=62)",
                "else_branch_end_line": 137,
                "else_branch_start_line": 115,
                "true_branch_end_line": 114,
                "true_branch_start_line": 108
            },
            {
                "condition_end_line": 115,
                "condition_start_line": 115,
                "condition_str": "(j<=75)",
                "else_branch_end_line": 137,
                "else_branch_start_line": 126,
                "true_branch_end_line": 125,
                "true_branch_start_line": 115
            },
            {
                "condition_end_line": 121,
                "condition_start_line": 121,
                "condition_str": "(c<=t)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 124,
                "true_branch_start_line": 121
            },
            {
                "condition_end_line": 126,
                "condition_start_line": 126,
                "condition_str": "(j<=99)",
                "else_branch_end_line": 137,
                "else_branch_start_line": 134,
                "true_branch_end_line": 133,
                "true_branch_start_line": 126
            },
            {
                "condition_end_line": 127,
                "condition_start_line": 127,
                "condition_str": "(j%2==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 128,
                "true_branch_start_line": 128
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 98,
                "header_start_line": 98,
                "header_str": "i=0;i<t;i++",
                "loop_body_end_line": 139,
                "loop_body_start_line": 98,
                "loop_statement_end_line": 139,
                "loop_statement_start_line": 98
            },
            {
                "header_end_line": 102,
                "header_start_line": 102,
                "header_str": "j=1;j<=100;j++",
                "loop_body_end_line": 138,
                "loop_body_start_line": 102,
                "loop_statement_end_line": 138,
                "loop_statement_start_line": 102
            },
            {
                "header_end_line": 112,
                "header_start_line": 112,
                "header_str": "k=0;k<c;k++",
                "loop_body_end_line": 113,
                "loop_body_start_line": 113,
                "loop_statement_end_line": 113,
                "loop_statement_start_line": 112
            },
            {
                "header_end_line": 119,
                "header_start_line": 119,
                "header_str": "k=0;k<c;k++",
                "loop_body_end_line": 120,
                "loop_body_start_line": 120,
                "loop_statement_end_line": 120,
                "loop_statement_start_line": 119
            },
            {
                "header_end_line": 129,
                "header_start_line": 129,
                "header_str": "(p==h)",
                "loop_body_end_line": 130,
                "loop_body_start_line": 130,
                "loop_statement_end_line": 130,
                "loop_statement_start_line": 129
            }
        ],
        "parameters": []
    },
    "207": {
        "filepath": "code/gcj_459f4_4a043_main_13_72.c",
        "function_end_line": 12,
        "function_id": 207,
        "function_name": "compt",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "(temp[y][x])",
                "else_branch_end_line": 11,
                "else_branch_start_line": 11,
                "true_branch_end_line": 10,
                "true_branch_start_line": 6
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "y",
                3,
                0
            ],
            [
                "x",
                3,
                1
            ]
        ]
    },
    "208": {
        "filepath": "code/gcj_459f4_4a043_main_13_72.c",
        "function_end_line": 72,
        "function_id": 208,
        "function_name": "main",
        "function_start_line": 13,
        "if_statements": [
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "(quads[q])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 68,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "(s > best)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 66
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "case_no = 0; case_no != no_cases; case_no++",
                "loop_body_end_line": 70,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "y = 0; y != r; y++",
                "loop_body_end_line": 37,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "x = 0; x != c; x++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "x = 0; x != c; x++",
                "loop_body_end_line": 39,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "y = 1; y != r; y++",
                "loop_body_end_line": 44,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "x = 1; x != r; x++",
                "loop_body_end_line": 44,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 43
            },
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "y = 1; y != r; y++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 45
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "x = 0; x != r; x++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "int q = 0; q != 16; q++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "int ydiv = 0; ydiv <= r; ydiv++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "int xdiv = 0; xdiv <= c; xdiv++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 56,
                "header_start_line": 56,
                "header_str": "y = 0; y != r; y++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 56
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "x = 0; x != c; x++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "y = 0; y != r; y++",
                "loop_body_end_line": 67,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 61
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "x = 0; x != c; x++",
                "loop_body_end_line": 67,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "(getchar() != '\\n')",
                "loop_body_end_line": 28,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 27
            }
        ],
        "parameters": [
            [
                "argc",
                13,
                0
            ],
            [
                "argv",
                13,
                1
            ]
        ]
    },
    "209": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 11,
        "function_id": 209,
        "function_name": "max",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                11,
                0
            ],
            [
                "b",
                11,
                1
            ]
        ]
    },
    "210": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 12,
        "function_id": 210,
        "function_name": "min",
        "function_start_line": 12,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 12
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                12,
                1
            ],
            [
                "a",
                12,
                0
            ]
        ]
    },
    "211": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 13,
        "function_id": 211,
        "function_name": "zt",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                13,
                1
            ],
            [
                "a",
                13,
                0
            ]
        ]
    },
    "212": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 14,
        "function_id": 212,
        "function_name": "round",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                14,
                0
            ],
            [
                "b",
                14,
                1
            ]
        ]
    },
    "213": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 15,
        "function_id": 213,
        "function_name": "ceil",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                15,
                1
            ],
            [
                "a",
                15,
                0
            ]
        ]
    },
    "214": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 16,
        "function_id": 214,
        "function_name": "gcd",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "(b!=0)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": [
            [
                "a",
                16,
                0
            ],
            [
                "b",
                16,
                1
            ]
        ]
    },
    "215": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 17,
        "function_id": 215,
        "function_name": "lcm",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                17,
                1
            ],
            [
                "a",
                17,
                0
            ]
        ]
    },
    "216": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 18,
        "function_id": 216,
        "function_name": "nCr",
        "function_start_line": 18,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 18,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": [
            [
                "b",
                18,
                1
            ],
            [
                "a",
                18,
                0
            ]
        ]
    },
    "217": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 19,
        "function_id": 217,
        "function_name": "nHr",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                19,
                0
            ],
            [
                "b",
                19,
                1
            ]
        ]
    },
    "218": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 20,
        "function_id": 218,
        "function_name": "fact",
        "function_start_line": 20,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 20
            }
        ],
        "parameters": [
            [
                "a",
                20,
                0
            ]
        ]
    },
    "219": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 21,
        "function_id": 219,
        "function_name": "pow",
        "function_start_line": 21,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 21,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "b",
                21,
                1
            ],
            [
                "a",
                21,
                0
            ]
        ]
    },
    "220": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 22,
        "function_id": 220,
        "function_name": "dsum",
        "function_start_line": 22,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "(x)",
                "loop_body_end_line": 22,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 22
            }
        ],
        "parameters": [
            [
                "x",
                22,
                0
            ]
        ]
    },
    "221": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 23,
        "function_id": 221,
        "function_name": "dsumb",
        "function_start_line": 23,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "(x)",
                "loop_body_end_line": 23,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 23
            }
        ],
        "parameters": [
            [
                "x",
                23,
                0
            ],
            [
                "b",
                23,
                1
            ]
        ]
    },
    "222": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 24,
        "function_id": 222,
        "function_name": "sankaku",
        "function_start_line": 24,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                24,
                0
            ]
        ]
    },
    "223": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 25,
        "function_id": 223,
        "function_name": "swap",
        "function_start_line": 25,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                25,
                0
            ],
            [
                "b",
                25,
                1
            ]
        ]
    },
    "224": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 26,
        "function_id": 224,
        "function_name": "llmax",
        "function_start_line": 26,
        "if_statements": [
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 26
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                26,
                1
            ],
            [
                "a",
                26,
                0
            ]
        ]
    },
    "225": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 27,
        "function_id": 225,
        "function_name": "llmin",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                27,
                1
            ],
            [
                "a",
                27,
                0
            ]
        ]
    },
    "226": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 28,
        "function_id": 226,
        "function_name": "llzt",
        "function_start_line": 28,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                28,
                0
            ],
            [
                "b",
                28,
                1
            ]
        ]
    },
    "227": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 29,
        "function_id": 227,
        "function_name": "llround",
        "function_start_line": 29,
        "if_statements": [
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "((a%b)*2 >= b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                29,
                1
            ],
            [
                "a",
                29,
                0
            ]
        ]
    },
    "228": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 30,
        "function_id": 228,
        "function_name": "llceil",
        "function_start_line": 30,
        "if_statements": [
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(a%b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 30
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                30,
                0
            ],
            [
                "b",
                30,
                1
            ]
        ]
    },
    "229": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 31,
        "function_id": 229,
        "function_name": "llgcd",
        "function_start_line": 31,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "(b!=0)",
                "loop_body_end_line": 31,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": [
            [
                "b",
                31,
                1
            ],
            [
                "a",
                31,
                0
            ]
        ]
    },
    "230": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 32,
        "function_id": 230,
        "function_name": "lllcm",
        "function_start_line": 32,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                32,
                1
            ],
            [
                "a",
                32,
                0
            ]
        ]
    },
    "231": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 33,
        "function_id": 231,
        "function_name": "llnCr",
        "function_start_line": 33,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 33
            }
        ],
        "parameters": [
            [
                "a",
                33,
                0
            ],
            [
                "b",
                33,
                1
            ]
        ]
    },
    "232": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 34,
        "function_id": 232,
        "function_name": "llnHr",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                34,
                1
            ],
            [
                "a",
                34,
                0
            ]
        ]
    },
    "233": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 35,
        "function_id": 233,
        "function_name": "llfact",
        "function_start_line": 35,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "i=1;i<=a;i++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 35
            }
        ],
        "parameters": [
            [
                "a",
                35,
                0
            ]
        ]
    },
    "234": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 36,
        "function_id": 234,
        "function_name": "llpow",
        "function_start_line": 36,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "i=1;i<=b;i++",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": [
            [
                "a",
                36,
                0
            ],
            [
                "b",
                36,
                1
            ]
        ]
    },
    "235": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 37,
        "function_id": 235,
        "function_name": "lldsum",
        "function_start_line": 37,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "(x)",
                "loop_body_end_line": 37,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 37
            }
        ],
        "parameters": [
            [
                "x",
                37,
                0
            ]
        ]
    },
    "236": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 38,
        "function_id": 236,
        "function_name": "lldsumb",
        "function_start_line": 38,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "(x)",
                "loop_body_end_line": 38,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 38
            }
        ],
        "parameters": [
            [
                "x",
                38,
                0
            ],
            [
                "b",
                38,
                1
            ]
        ]
    },
    "237": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 39,
        "function_id": 237,
        "function_name": "llsankaku",
        "function_start_line": 39,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                39,
                0
            ]
        ]
    },
    "238": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 40,
        "function_id": 238,
        "function_name": "llswap",
        "function_start_line": 40,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                40,
                1
            ],
            [
                "a",
                40,
                0
            ]
        ]
    },
    "239": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 41,
        "function_id": 239,
        "function_name": "dbmax",
        "function_start_line": 41,
        "if_statements": [
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(a>b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 41
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                41,
                0
            ],
            [
                "b",
                41,
                1
            ]
        ]
    },
    "240": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 42,
        "function_id": 240,
        "function_name": "dbmin",
        "function_start_line": 42,
        "if_statements": [
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(a<b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                42,
                1
            ],
            [
                "a",
                42,
                0
            ]
        ]
    },
    "241": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 43,
        "function_id": 241,
        "function_name": "dbzt",
        "function_start_line": 43,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                43,
                0
            ],
            [
                "b",
                43,
                1
            ]
        ]
    },
    "242": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 44,
        "function_id": 242,
        "function_name": "dbswap",
        "function_start_line": 44,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                44,
                0
            ],
            [
                "b",
                44,
                1
            ]
        ]
    },
    "243": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 45,
        "function_id": 243,
        "function_name": "chswap",
        "function_start_line": 45,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                45,
                1
            ],
            [
                "a",
                45,
                0
            ]
        ]
    },
    "244": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 46,
        "function_id": 244,
        "function_name": "sortfncsj",
        "function_start_line": 46,
        "if_statements": [
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                46,
                0
            ],
            [
                "b",
                46,
                1
            ]
        ]
    },
    "245": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 47,
        "function_id": 245,
        "function_name": "sortfnckj",
        "function_start_line": 47,
        "if_statements": [
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(*(int *)a==*(int *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 47
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                47,
                1
            ],
            [
                "a",
                47,
                0
            ]
        ]
    },
    "246": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 48,
        "function_id": 246,
        "function_name": "llsortfncsj",
        "function_start_line": 48,
        "if_statements": [
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 48
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                48,
                1
            ],
            [
                "a",
                48,
                0
            ]
        ]
    },
    "247": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 49,
        "function_id": 247,
        "function_name": "llsortfnckj",
        "function_start_line": 49,
        "if_statements": [
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(*(long long *)a==*(long long *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                49,
                0
            ],
            [
                "b",
                49,
                1
            ]
        ]
    },
    "248": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 50,
        "function_id": 248,
        "function_name": "dbsortfncsj",
        "function_start_line": 50,
        "if_statements": [
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                50,
                1
            ],
            [
                "a",
                50,
                0
            ]
        ]
    },
    "249": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 51,
        "function_id": 249,
        "function_name": "dbsortfnckj",
        "function_start_line": 51,
        "if_statements": [
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(*(double *)a==*(double *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 51,
                "true_branch_start_line": 51
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                51,
                0
            ],
            [
                "b",
                51,
                1
            ]
        ]
    },
    "250": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 52,
        "function_id": 250,
        "function_name": "strsortfncsj",
        "function_start_line": 52,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                52,
                0
            ],
            [
                "b",
                52,
                1
            ]
        ]
    },
    "251": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 53,
        "function_id": 251,
        "function_name": "strsortfnckj",
        "function_start_line": 53,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                53,
                1
            ],
            [
                "a",
                53,
                0
            ]
        ]
    },
    "252": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 54,
        "function_id": 252,
        "function_name": "chsortfncsj",
        "function_start_line": 54,
        "if_statements": [
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                54,
                0
            ],
            [
                "b",
                54,
                1
            ]
        ]
    },
    "253": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 55,
        "function_id": 253,
        "function_name": "chsortfnckj",
        "function_start_line": 55,
        "if_statements": [
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(*(char *)a==*(char *)b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 55
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                55,
                1
            ],
            [
                "a",
                55,
                0
            ]
        ]
    },
    "254": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 68,
        "function_id": 254,
        "function_name": "shuffledget",
        "function_start_line": 56,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 60,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "i=n;i>=1;i--",
                "loop_body_end_line": 64,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 61
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 67,
                "loop_body_start_line": 65,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 65
            }
        ],
        "parameters": [
            [
                "x",
                56,
                0
            ],
            [
                "n",
                56,
                1
            ]
        ]
    },
    "255": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 80,
        "function_id": 255,
        "function_name": "search",
        "function_start_line": 73,
        "if_statements": [
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "(a[te]<x)",
                "else_branch_end_line": 77,
                "else_branch_start_line": 77,
                "true_branch_end_line": 77,
                "true_branch_start_line": 77
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "(st<=fi)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 75
            }
        ],
        "parameters": [
            [
                "n",
                73,
                2
            ],
            [
                "a",
                73,
                1
            ],
            [
                "x",
                73,
                0
            ]
        ]
    },
    "256": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 89,
        "function_id": 256,
        "function_name": "prarr",
        "function_start_line": 81,
        "if_statements": [
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(i)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 84,
                "true_branch_start_line": 84
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 86,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 83
            }
        ],
        "parameters": [
            [
                "arr",
                81,
                0
            ],
            [
                "n",
                81,
                1
            ]
        ]
    },
    "257": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 99,
        "function_id": 257,
        "function_name": "getperm",
        "function_start_line": 90,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 92,
                "header_start_line": 92,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 94,
                "loop_body_start_line": 92,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 92
            },
            {
                "header_end_line": 95,
                "header_start_line": 95,
                "header_str": "i=n-1;i>=1;i--",
                "loop_body_end_line": 98,
                "loop_body_start_line": 95,
                "loop_statement_end_line": 98,
                "loop_statement_start_line": 95
            }
        ],
        "parameters": [
            [
                "a",
                90,
                0
            ],
            [
                "n",
                90,
                1
            ]
        ]
    },
    "258": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 108,
        "function_id": 258,
        "function_name": "sdsortfnc",
        "function_start_line": 104,
        "if_statements": [
            {
                "condition_end_line": 105,
                "condition_start_line": 105,
                "condition_str": "(((sd*)a)->val < ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 105,
                "true_branch_start_line": 105
            },
            {
                "condition_end_line": 106,
                "condition_start_line": 106,
                "condition_str": "(((sd*)a)->val > ((sd*)b)->val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 106,
                "true_branch_start_line": 106
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                104,
                1
            ],
            [
                "a",
                104,
                0
            ]
        ]
    },
    "259": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 122,
        "function_id": 259,
        "function_name": "coordinate_comp",
        "function_start_line": 109,
        "if_statements": [
            {
                "condition_end_line": 119,
                "condition_start_line": 119,
                "condition_str": "(dat[i-1].val!=dat[i].val)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 119,
                "true_branch_start_line": 119
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 112,
                "header_start_line": 112,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 115,
                "loop_body_start_line": 112,
                "loop_statement_end_line": 115,
                "loop_statement_start_line": 112
            },
            {
                "header_end_line": 118,
                "header_start_line": 118,
                "header_str": "i=1;i<n;i++",
                "loop_body_end_line": 121,
                "loop_body_start_line": 118,
                "loop_statement_end_line": 121,
                "loop_statement_start_line": 118
            }
        ],
        "parameters": [
            [
                "a",
                109,
                0
            ],
            [
                "n",
                109,
                1
            ]
        ]
    },
    "260": {
        "filepath": "code/gcj_2b1353_2b843e_main_123_186.c",
        "function_end_line": 186,
        "function_id": 260,
        "function_name": "main",
        "function_start_line": 123,
        "if_statements": [
            {
                "condition_end_line": 136,
                "condition_start_line": 136,
                "condition_str": "(w>=n)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 139,
                "true_branch_start_line": 136
            },
            {
                "condition_end_line": 142,
                "condition_start_line": 142,
                "condition_str": "(n>=(1<<(i-1))+(i-1))",
                "else_branch_end_line": 149,
                "else_branch_start_line": 146,
                "true_branch_end_line": 145,
                "true_branch_start_line": 142
            },
            {
                "condition_end_line": 154,
                "condition_start_line": 154,
                "condition_str": "(fl[i]==1)",
                "else_branch_end_line": 174,
                "else_branch_start_line": 168,
                "true_branch_end_line": 167,
                "true_branch_start_line": 154
            },
            {
                "condition_end_line": 156,
                "condition_start_line": 156,
                "condition_str": "(a==0)",
                "else_branch_end_line": 165,
                "else_branch_start_line": 161,
                "true_branch_end_line": 160,
                "true_branch_start_line": 156
            },
            {
                "condition_end_line": 170,
                "condition_start_line": 170,
                "condition_str": "(a==0)",
                "else_branch_end_line": 173,
                "else_branch_start_line": 172,
                "true_branch_end_line": 171,
                "true_branch_start_line": 171
            },
            {
                "condition_end_line": 178,
                "condition_start_line": 178,
                "condition_str": "(a==0)",
                "else_branch_end_line": 181,
                "else_branch_start_line": 180,
                "true_branch_end_line": 179,
                "true_branch_start_line": 179
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 129,
                "header_start_line": 129,
                "header_str": "cs=1;cs<=t;cs++",
                "loop_body_end_line": 184,
                "loop_body_start_line": 129,
                "loop_statement_end_line": 184,
                "loop_statement_start_line": 129
            },
            {
                "header_end_line": 134,
                "header_start_line": 134,
                "header_str": "i=1;i<50;i++",
                "loop_body_end_line": 140,
                "loop_body_start_line": 134,
                "loop_statement_end_line": 140,
                "loop_statement_start_line": 134
            },
            {
                "header_end_line": 141,
                "header_start_line": 141,
                "header_str": "i=l;i>=1;i--",
                "loop_body_end_line": 150,
                "loop_body_start_line": 141,
                "loop_statement_end_line": 150,
                "loop_statement_start_line": 141
            },
            {
                "header_end_line": 153,
                "header_start_line": 153,
                "header_str": "i=1;i<=l;i++",
                "loop_body_end_line": 175,
                "loop_body_start_line": 153,
                "loop_statement_end_line": 175,
                "loop_statement_start_line": 153
            },
            {
                "header_end_line": 157,
                "header_start_line": 157,
                "header_str": "j=1;j<=i;j++",
                "loop_body_end_line": 159,
                "loop_body_start_line": 157,
                "loop_statement_end_line": 159,
                "loop_statement_start_line": 157
            },
            {
                "header_end_line": 162,
                "header_start_line": 162,
                "header_str": "j=i;j>=1;j--",
                "loop_body_end_line": 164,
                "loop_body_start_line": 162,
                "loop_statement_end_line": 164,
                "loop_statement_start_line": 162
            },
            {
                "header_end_line": 176,
                "header_start_line": 176,
                "header_str": "(w!=sn)",
                "loop_body_end_line": 182,
                "loop_body_start_line": 177,
                "loop_statement_end_line": 183,
                "loop_statement_start_line": 176
            }
        ],
        "parameters": []
    },
    "261": {
        "filepath": "code/gcj_2fff6_345c5_main_39_95.c",
        "function_end_line": 23,
        "function_id": 261,
        "function_name": "fr",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "( (rRemaining + 1)*share != (B[r][j] - B[i][j]) )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 12
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "(rRemaining == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(B[k][j] - B[i][j] == share)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "(k < r)",
                "loop_body_end_line": 20,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": [
            [
                "rRemaining",
                9,
                0
            ],
            [
                "i",
                9,
                1
            ],
            [
                "j",
                9,
                2
            ]
        ]
    },
    "262": {
        "filepath": "code/gcj_2fff6_345c5_main_39_95.c",
        "function_end_line": 38,
        "function_id": 262,
        "function_name": "fc",
        "function_start_line": 24,
        "if_statements": [
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "( (cRemaining + 1)*share != (B[i][c] - B[i][j]) )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(cRemaining == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "(B[i][k] - B[i][j] == share)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "(k < c)",
                "loop_body_end_line": 35,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": [
            [
                "i",
                24,
                1
            ],
            [
                "j",
                24,
                2
            ],
            [
                "cRemaining",
                24,
                0
            ]
        ]
    },
    "263": {
        "filepath": "code/gcj_2fff6_345c5_main_39_95.c",
        "function_end_line": 95,
        "function_id": 263,
        "function_name": "main",
        "function_start_line": 39,
        "if_statements": [
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "(i != 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(i == 0 || j == 0)",
                "else_branch_end_line": 61,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(A[i][j])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "(chips % guests != 0)",
                "else_branch_end_line": 91,
                "else_branch_start_line": 66,
                "true_branch_end_line": 66,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "(B[i][j] == share)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 87,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "(!fr(h - 1, i, j))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 78
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "(!fc(v - 1, i, j))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 83,
                "true_branch_start_line": 81
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(possible)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 86,
                "true_branch_start_line": 84
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "(!possible)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 90,
                "true_branch_start_line": 90
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "i = 0; i <= r; ++i",
                "loop_body_end_line": 63,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "j = 0; j <= c; ++j",
                "loop_body_end_line": 62,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "i = 1; i <= r; ++i",
                "loop_body_end_line": 71,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "j = 1; j <= c; ++j",
                "loop_body_end_line": 70,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 68
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "i = 1; i < r && !possible; ++i",
                "loop_body_end_line": 89,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "j = 1; j < c && !possible; ++j",
                "loop_body_end_line": 88,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "(tc <= t)",
                "loop_body_end_line": 92,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 45
            }
        ],
        "parameters": []
    },
    "264": {
        "filepath": "code/gcj_7966_1642c_minswaps_22_102.c",
        "function_end_line": 21,
        "function_id": 264,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(r==-1)",
                "else_branch_end_line": 19,
                "else_branch_start_line": 18,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 20,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 9
            }
        ],
        "parameters": []
    },
    "265": {
        "filepath": "code/gcj_7966_1642c_minswaps_22_102.c",
        "function_end_line": 102,
        "function_id": 265,
        "function_name": "minswaps",
        "function_start_line": 22,
        "if_statements": [
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(len==2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "(p[0]=='S' && p[1]=='C')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(p[0]=='S'&&p[1]=='S')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(d<2)",
                "else_branch_end_line": 33,
                "else_branch_start_line": 32,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(p[0]=='C' && p[1]=='S')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(d<2)",
                "else_branch_end_line": 40,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "(p[i]=='S')",
                "else_branch_end_line": 57,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(damage<=d)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "(p[i-1]=='S')",
                "else_branch_end_line": 90,
                "else_branch_start_line": 72,
                "true_branch_end_line": 71,
                "true_branch_start_line": 71
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "(i-1==0)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 83,
                "true_branch_end_line": 82,
                "true_branch_start_line": 79
            },
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "(i==1 && p[i-1]=='S')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 94,
                "true_branch_start_line": 92
            },
            {
                "condition_end_line": 98,
                "condition_start_line": 98,
                "condition_str": "(damage-d<=0)",
                "else_branch_end_line": 101,
                "else_branch_start_line": 100,
                "true_branch_end_line": 99,
                "true_branch_start_line": 99
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "i=0;i<len;i++",
                "loop_body_end_line": 58,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "(!flag)",
                "loop_body_end_line": 95,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 96,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "(damage-d>0 && i>0)",
                "loop_body_end_line": 94,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 95,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 68,
                "header_start_line": 68,
                "header_str": "(p[i]!='S')",
                "loop_body_end_line": 69,
                "loop_body_start_line": 69,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 68
            }
        ],
        "parameters": [
            [
                "p",
                22,
                0
            ],
            [
                "len",
                22,
                2
            ],
            [
                "d",
                22,
                1
            ]
        ]
    },
    "266": {
        "filepath": "code/gcj_3005a_322b5_main_33_117.c",
        "function_end_line": 30,
        "function_id": 266,
        "function_name": "readline",
        "function_start_line": 6,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(!line)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 12
            },
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(dataLen < bufLen - 1 || data[dataLen - 1] == '\\n')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(!data)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(data[dataLen - 1] == '\\n')",
                "else_branch_end_line": 27,
                "else_branch_start_line": 23,
                "true_branch_end_line": 22,
                "true_branch_start_line": 20
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "(1)",
                "loop_body_end_line": 18,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 9
            }
        ],
        "parameters": []
    },
    "267": {
        "filepath": "code/gcj_3005a_322b5_main_33_117.c",
        "function_end_line": 117,
        "function_id": 267,
        "function_name": "main",
        "function_start_line": 33,
        "if_statements": [
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(Waffle[i][j] == '@')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "(topCount != bottomCount)",
                "else_branch_end_line": 112,
                "else_branch_start_line": 79,
                "true_branch_end_line": 78,
                "true_branch_start_line": 78
            },
            {
                "condition_end_line": 88,
                "condition_start_line": 88,
                "condition_str": "(Waffle[l][m] == '@')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 89,
                "true_branch_start_line": 89
            },
            {
                "condition_end_line": 93,
                "condition_start_line": 93,
                "condition_str": "(topleftCount == toprightCount)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 110,
                "true_branch_start_line": 94
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "(Waffle[l][m] == '@')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 101,
                "true_branch_start_line": 101
            },
            {
                "condition_end_line": 105,
                "condition_start_line": 105,
                "condition_str": "(bottomleftCount == bottomrightCount)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 109,
                "true_branch_start_line": 106
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "i = 0; i < 10; i++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 50,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 49
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "i = 0; i < R; i++",
                "loop_body_end_line": 64,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "j = 0; j < C; j++",
                "loop_body_end_line": 63,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "i = 1; (i < R && (strcmp(retStr, \"IMPOSSIBLE\") == 0)); i++",
                "loop_body_end_line": 113,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 113,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 73,
                "header_start_line": 73,
                "header_str": "j = 0; j < i; j++",
                "loop_body_end_line": 74,
                "loop_body_start_line": 74,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 73
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "j = i; j < R; j++",
                "loop_body_end_line": 76,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 81,
                "header_start_line": 81,
                "header_str": "k = 1; k < C; k++",
                "loop_body_end_line": 111,
                "loop_body_start_line": 82,
                "loop_statement_end_line": 111,
                "loop_statement_start_line": 81
            },
            {
                "header_end_line": 85,
                "header_start_line": 85,
                "header_str": "l = 0; l < i; l++",
                "loop_body_end_line": 91,
                "loop_body_start_line": 86,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 85
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "m = 0; m < k; m++",
                "loop_body_end_line": 89,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 87
            },
            {
                "header_end_line": 97,
                "header_start_line": 97,
                "header_str": "l = i; l < R; l++",
                "loop_body_end_line": 103,
                "loop_body_start_line": 98,
                "loop_statement_end_line": 103,
                "loop_statement_start_line": 97
            },
            {
                "header_end_line": 99,
                "header_start_line": 99,
                "header_str": "m = 0; m < k; m++",
                "loop_body_end_line": 101,
                "loop_body_start_line": 100,
                "loop_statement_end_line": 101,
                "loop_statement_start_line": 99
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "(T-- != 0)",
                "loop_body_end_line": 115,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 116,
                "loop_statement_start_line": 43
            }
        ],
        "parameters": [
            [
                "argc",
                33,
                0
            ],
            [
                "argv",
                33,
                1
            ]
        ]
    },
    "268": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 28,
        "function_id": 268,
        "function_name": "generateQueries",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(beginning < end)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "(beginning <= end)",
                "loop_body_end_line": 21,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "(i < 150)",
                "loop_body_end_line": 26,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 23
            }
        ],
        "parameters": [
            [
                "n",
                8,
                0
            ]
        ]
    },
    "269": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 41,
        "function_id": 269,
        "function_name": "findFlipBit",
        "function_start_line": 29,
        "if_statements": [
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(sol[i] == sol[n-i+1])",
                "else_branch_end_line": 38,
                "else_branch_start_line": 38,
                "true_branch_end_line": 37,
                "true_branch_start_line": 35
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "(i <= n && sol[i] != 2)",
                "loop_body_end_line": 38,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": [
            [
                "n",
                29,
                0
            ]
        ]
    },
    "270": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 54,
        "function_id": 270,
        "function_name": "findSwapBit",
        "function_start_line": 42,
        "if_statements": [
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(sol[i] != sol[n-i+1])",
                "else_branch_end_line": 51,
                "else_branch_start_line": 51,
                "true_branch_end_line": 50,
                "true_branch_start_line": 48
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "(i <= n && sol[i] != 2 && sol[n-i+1] != 2)",
                "loop_body_end_line": 51,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 45
            }
        ],
        "parameters": [
            [
                "n",
                42,
                0
            ]
        ]
    },
    "271": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 69,
        "function_id": 271,
        "function_name": "query",
        "function_start_line": 55,
        "if_statements": [
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(ret == 'N')",
                "else_branch_end_line": 68,
                "else_branch_start_line": 65,
                "true_branch_end_line": 64,
                "true_branch_start_line": 62
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "i",
                55,
                0
            ]
        ]
    },
    "272": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 77,
        "function_id": 272,
        "function_name": "flipSol",
        "function_start_line": 70,
        "if_statements": [
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "(sol[i] == 1)",
                "else_branch_end_line": 75,
                "else_branch_start_line": 75,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 75,
                "condition_start_line": 75,
                "condition_str": "(sol[i] == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 75,
                "true_branch_start_line": 75
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "int i = 1; i <= n; i++",
                "loop_body_end_line": 76,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 72
            }
        ],
        "parameters": [
            [
                "n",
                70,
                0
            ]
        ]
    },
    "273": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 89,
        "function_id": 273,
        "function_name": "swapSol",
        "function_start_line": 78,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 81,
                "header_start_line": 81,
                "header_str": "(beginning < end)",
                "loop_body_end_line": 87,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 81
            }
        ],
        "parameters": [
            [
                "n",
                78,
                0
            ]
        ]
    },
    "274": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 165,
        "function_id": 274,
        "function_name": "resolve",
        "function_start_line": 90,
        "if_statements": [
            {
                "condition_end_line": 104,
                "condition_start_line": 104,
                "condition_str": "(queries % 10 == 0 && queries != 0)",
                "else_branch_end_line": 163,
                "else_branch_start_line": 136,
                "true_branch_end_line": 135,
                "true_branch_start_line": 105
            },
            {
                "condition_end_line": 106,
                "condition_start_line": 106,
                "condition_str": "(flipBit == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 106,
                "true_branch_start_line": 106
            },
            {
                "condition_end_line": 107,
                "condition_start_line": 107,
                "condition_str": "(flipBit != -1)",
                "else_branch_end_line": 118,
                "else_branch_start_line": 114,
                "true_branch_end_line": 113,
                "true_branch_start_line": 108
            },
            {
                "condition_end_line": 110,
                "condition_start_line": 110,
                "condition_str": "(flipRes != sol[flipBit])",
                "else_branch_end_line": 111,
                "else_branch_start_line": 111,
                "true_branch_end_line": 110,
                "true_branch_start_line": 110
            },
            {
                "condition_end_line": 119,
                "condition_start_line": 119,
                "condition_str": "(swapBit == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 122,
                "true_branch_start_line": 120
            },
            {
                "condition_end_line": 123,
                "condition_start_line": 123,
                "condition_str": "(swapBit != -1)",
                "else_branch_end_line": 134,
                "else_branch_start_line": 130,
                "true_branch_end_line": 129,
                "true_branch_start_line": 124
            },
            {
                "condition_end_line": 126,
                "condition_start_line": 126,
                "condition_str": "(swapRes != sol[swapBit])",
                "else_branch_end_line": 127,
                "else_branch_start_line": 127,
                "true_branch_end_line": 126,
                "true_branch_start_line": 126
            },
            {
                "condition_end_line": 141,
                "condition_start_line": 141,
                "condition_str": "(queryList[known] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 162,
                "true_branch_start_line": 142
            },
            {
                "condition_end_line": 154,
                "condition_start_line": 154,
                "condition_str": "(answer == 'Y')",
                "else_branch_end_line": 161,
                "else_branch_start_line": 158,
                "true_branch_end_line": 157,
                "true_branch_start_line": 155
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 92,
                "header_start_line": 92,
                "header_str": "int i = 1; i <= n; i++",
                "loop_body_end_line": 95,
                "loop_body_start_line": 93,
                "loop_statement_end_line": 95,
                "loop_statement_start_line": 92
            },
            {
                "header_end_line": 143,
                "header_start_line": 143,
                "header_str": "int i = 1; i < n; i++",
                "loop_body_end_line": 146,
                "loop_body_start_line": 144,
                "loop_statement_end_line": 146,
                "loop_statement_start_line": 143
            },
            {
                "header_end_line": 102,
                "header_start_line": 102,
                "header_str": "(true)",
                "loop_body_end_line": 163,
                "loop_body_start_line": 104,
                "loop_statement_end_line": 164,
                "loop_statement_start_line": 102
            },
            {
                "header_end_line": 150,
                "header_start_line": 150,
                "header_str": "(answer == 10)",
                "loop_body_end_line": 152,
                "loop_body_start_line": 152,
                "loop_statement_end_line": 153,
                "loop_statement_start_line": 150
            }
        ],
        "parameters": [
            [
                "n",
                90,
                0
            ]
        ]
    },
    "275": {
        "filepath": "code/gcj_209a9e_27e59f_generateQueries_8_28.c",
        "function_end_line": 175,
        "function_id": 275,
        "function_name": "main",
        "function_start_line": 166,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 170,
                "header_start_line": 170,
                "header_str": "int test = 0; test < t; test++",
                "loop_body_end_line": 173,
                "loop_body_start_line": 171,
                "loop_statement_end_line": 173,
                "loop_statement_start_line": 170
            }
        ],
        "parameters": []
    },
    "276": {
        "filepath": "code/gcj_3e0a8_4246f_get_double_121_170.c",
        "function_end_line": 104,
        "function_id": 276,
        "function_name": "main",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(c[j - 1][j - 1] == -1)",
                "else_branch_end_line": 49,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "(c[j - 1][j - 1] > w[j]*6)",
                "else_branch_end_line": 48,
                "else_branch_start_line": 45,
                "true_branch_end_line": 44,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(c[j - 1][k - 1] == -1 && c[j][k - 1] == -1)",
                "else_branch_end_line": 92,
                "else_branch_start_line": 59,
                "true_branch_end_line": 58,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "(c[j - 1][k - 1] == -1)",
                "else_branch_end_line": 92,
                "else_branch_start_line": 70,
                "true_branch_end_line": 69,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(c[j][k - 1] > w[k]*6)",
                "else_branch_end_line": 68,
                "else_branch_start_line": 65,
                "true_branch_end_line": 64,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "(c[j][k - 1] == -1)",
                "else_branch_end_line": 92,
                "else_branch_start_line": 81,
                "true_branch_end_line": 80,
                "true_branch_start_line": 71
            },
            {
                "condition_end_line": 72,
                "condition_start_line": 72,
                "condition_str": "(c[j - 1][k - 1] > w[k]*6)",
                "else_branch_end_line": 79,
                "else_branch_start_line": 76,
                "true_branch_end_line": 75,
                "true_branch_start_line": 73
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "(tmp > w[k]*6)",
                "else_branch_end_line": 91,
                "else_branch_start_line": 88,
                "true_branch_end_line": 87,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 97,
                "condition_start_line": 97,
                "condition_str": "(c[j][n - 1] == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 100,
                "true_branch_start_line": 98
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "i = 0; i < t; i++",
                "loop_body_end_line": 103,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 103,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "j = 0; j < n; j++",
                "loop_body_end_line": 27,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "j = 1; j < n; j++",
                "loop_body_end_line": 32,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "j = 1; j < n; j++",
                "loop_body_end_line": 50,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "j = 1; j < n; j++",
                "loop_body_end_line": 94,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "k = j + 1; k < n; k++",
                "loop_body_end_line": 93,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 95,
                "header_start_line": 95,
                "header_str": "j = 0; j < n; j++",
                "loop_body_end_line": 101,
                "loop_body_start_line": 96,
                "loop_statement_end_line": 101,
                "loop_statement_start_line": 95
            }
        ],
        "parameters": []
    },
    "277": {
        "filepath": "code/gcj_3e0a8_4246f_get_double_121_170.c",
        "function_end_line": 112,
        "function_id": 277,
        "function_name": "max",
        "function_start_line": 105,
        "if_statements": [
            {
                "condition_end_line": 107,
                "condition_start_line": 107,
                "condition_str": "(a > b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 110,
                "true_branch_start_line": 108
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                105,
                1
            ],
            [
                "a",
                105,
                0
            ]
        ]
    },
    "278": {
        "filepath": "code/gcj_3e0a8_4246f_get_double_121_170.c",
        "function_end_line": 120,
        "function_id": 278,
        "function_name": "min",
        "function_start_line": 113,
        "if_statements": [
            {
                "condition_end_line": 115,
                "condition_start_line": 115,
                "condition_str": "(a < b)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 118,
                "true_branch_start_line": 116
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "b",
                113,
                1
            ],
            [
                "a",
                113,
                0
            ]
        ]
    },
    "279": {
        "filepath": "code/gcj_3e0a8_4246f_get_double_121_170.c",
        "function_end_line": 170,
        "function_id": 279,
        "function_name": "get_double",
        "function_start_line": 121,
        "if_statements": [
            {
                "condition_end_line": 128,
                "condition_start_line": 128,
                "condition_str": "(c == EOF)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 131,
                "true_branch_start_line": 129
            },
            {
                "condition_end_line": 132,
                "condition_start_line": 132,
                "condition_str": "(c >= '0' && c <= '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 136,
                "true_branch_start_line": 133
            },
            {
                "condition_end_line": 137,
                "condition_start_line": 137,
                "condition_str": "(c == '-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 146,
                "true_branch_start_line": 138
            },
            {
                "condition_end_line": 140,
                "condition_start_line": 140,
                "condition_str": "(c < '0' || c > '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 143,
                "true_branch_start_line": 141
            },
            {
                "condition_end_line": 153,
                "condition_start_line": 153,
                "condition_str": "(c == '.')",
                "else_branch_end_line": 168,
                "else_branch_start_line": 165,
                "true_branch_end_line": 164,
                "true_branch_start_line": 154
            },
            {
                "condition_end_line": 165,
                "condition_start_line": 165,
                "condition_str": "(c < '0' || c > '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 168,
                "true_branch_start_line": 166
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 126,
                "header_start_line": 126,
                "header_str": "(1)",
                "loop_body_end_line": 147,
                "loop_body_start_line": 128,
                "loop_statement_end_line": 148,
                "loop_statement_start_line": 126
            },
            {
                "header_end_line": 149,
                "header_start_line": 149,
                "header_str": "(1)",
                "loop_body_end_line": 168,
                "loop_body_start_line": 151,
                "loop_statement_end_line": 169,
                "loop_statement_start_line": 149
            },
            {
                "header_end_line": 157,
                "header_start_line": 157,
                "header_str": "(c >= '0' && c <= '9')",
                "loop_body_end_line": 161,
                "loop_body_start_line": 159,
                "loop_statement_end_line": 162,
                "loop_statement_start_line": 157
            }
        ],
        "parameters": []
    },
    "280": {
        "filepath": "code/gcj_3e0a8_4246f_get_double_121_170.c",
        "function_end_line": 208,
        "function_id": 280,
        "function_name": "get_int",
        "function_start_line": 171,
        "if_statements": [
            {
                "condition_end_line": 178,
                "condition_start_line": 178,
                "condition_str": "(c == EOF)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 181,
                "true_branch_start_line": 179
            },
            {
                "condition_end_line": 182,
                "condition_start_line": 182,
                "condition_str": "(c >= '0' && c <= '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 186,
                "true_branch_start_line": 183
            },
            {
                "condition_end_line": 187,
                "condition_start_line": 187,
                "condition_str": "(c == '-')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 196,
                "true_branch_start_line": 188
            },
            {
                "condition_end_line": 190,
                "condition_start_line": 190,
                "condition_str": "(c < '0' || c > '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 193,
                "true_branch_start_line": 191
            },
            {
                "condition_end_line": 203,
                "condition_start_line": 203,
                "condition_str": "(c < '0' || c > '9')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 206,
                "true_branch_start_line": 204
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 176,
                "header_start_line": 176,
                "header_str": "(1)",
                "loop_body_end_line": 197,
                "loop_body_start_line": 178,
                "loop_statement_end_line": 198,
                "loop_statement_start_line": 176
            },
            {
                "header_end_line": 199,
                "header_start_line": 199,
                "header_str": "(1)",
                "loop_body_end_line": 206,
                "loop_body_start_line": 201,
                "loop_statement_end_line": 207,
                "loop_statement_start_line": 199
            }
        ],
        "parameters": []
    },
    "281": {
        "filepath": "code/gcj_134e91_13e125_solveQ_15_68.c",
        "function_end_line": 14,
        "function_id": 281,
        "function_name": "main",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "int i=0; i<T; i++",
                "loop_body_end_line": 12,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 10
            }
        ],
        "parameters": [
            [
                "argc",
                6,
                0
            ],
            [
                "argv",
                6,
                1
            ]
        ]
    },
    "282": {
        "filepath": "code/gcj_134e91_13e125_solveQ_15_68.c",
        "function_end_line": 68,
        "function_id": 282,
        "function_name": "solveQ",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(hasLet > 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "( C[j] < 24 )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(hasLet > 1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 32,
                "true_branch_end_line": 32,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "(d == 5)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "(hasLet > 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "( C[j] < 24 )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "(l == 'Y')",
                "else_branch_end_line": 67,
                "else_branch_start_line": 65,
                "true_branch_end_line": 65,
                "true_branch_start_line": 63
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "int d = 1; d<=5; d++",
                "loop_body_end_line": 58,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "int i=0; i<119; i++",
                "loop_body_end_line": 57,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "int j=0; j<5; j++",
                "loop_body_end_line": 29,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "int k = d-1; d>=0; d--",
                "loop_body_end_line": 41,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 41,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "int j=0; j<5; j++",
                "loop_body_end_line": 56,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 49
            }
        ],
        "parameters": [
            [
                "F",
                15,
                0
            ]
        ]
    },
    "283": {
        "filepath": "code/gcj_88231_b626e_main_30_90.c",
        "function_end_line": 16,
        "function_id": 283,
        "function_name": "fun",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "(four==4)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 10
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "(n!=0)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 6
            }
        ],
        "parameters": [
            [
                "n",
                3,
                0
            ]
        ]
    },
    "284": {
        "filepath": "code/gcj_88231_b626e_main_30_90.c",
        "function_end_line": 29,
        "function_id": 284,
        "function_name": "find",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(four==4)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "(n!=0)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "n",
                17,
                0
            ]
        ]
    },
    "285": {
        "filepath": "code/gcj_88231_b626e_main_30_90.c",
        "function_end_line": 90,
        "function_id": 285,
        "function_name": "main",
        "function_start_line": 30,
        "if_statements": [
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(four==4)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 51,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "(flag)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 86,
                "true_branch_end_line": 85,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "(a[k]==4)",
                "else_branch_end_line": 77,
                "else_branch_start_line": 76,
                "true_branch_end_line": 75,
                "true_branch_start_line": 75
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "j=1;j<=N;j++",
                "loop_body_end_line": 88,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "k=0;k<count;k++",
                "loop_body_end_line": 78,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "i=count-1;i>=0;--i",
                "loop_body_end_line": 83,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 80
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "(temp!=0)",
                "loop_body_end_line": 52,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 44
            }
        ],
        "parameters": []
    },
    "286": {
        "filepath": "code/gcj_134c90_13ab8f_findSol_20_84.c",
        "function_end_line": 19,
        "function_id": 286,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "int i=0; i<T; i++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "int j=0; j<A; j++",
                "loop_body_end_line": 15,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 12
            }
        ],
        "parameters": [
            [
                "argv",
                5,
                1
            ],
            [
                "argc",
                5,
                0
            ]
        ]
    },
    "287": {
        "filepath": "code/gcj_134c90_13ab8f_findSol_20_84.c",
        "function_end_line": 84,
        "function_id": 287,
        "function_name": "findSol",
        "function_start_line": 20,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "( count[i] == -1 )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "( C[i][count[i]] == '\\0' )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "( C[i][count[i]] == 'R' )",
                "else_branch_end_line": 41,
                "else_branch_start_line": 37,
                "true_branch_end_line": 37,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "( C[i][count[i]] == 'P' )",
                "else_branch_end_line": 41,
                "else_branch_start_line": 39,
                "true_branch_end_line": 39,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "( X[0] == 1 && X[1] == 1 && X[2] == 1 )",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(noSol || n > 500)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(haveWon)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "(X[0])",
                "else_branch_end_line": 72,
                "else_branch_start_line": 64,
                "true_branch_end_line": 64,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "(X[2])",
                "else_branch_end_line": 63,
                "else_branch_start_line": 60,
                "true_branch_end_line": 60,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "(X[1])",
                "else_branch_end_line": 71,
                "else_branch_start_line": 68,
                "true_branch_end_line": 68,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "( count[j] == -1 || C[j][count[j]] == L)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 77,
                "true_branch_start_line": 74
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "int i=0; i<A; i++",
                "loop_body_end_line": 46,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 73,
                "header_start_line": 73,
                "header_str": "int j=0; j<A; j++",
                "loop_body_end_line": 79,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 73
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "(1)",
                "loop_body_end_line": 82,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 26
            }
        ],
        "parameters": [
            [
                "C",
                20,
                0
            ],
            [
                "T",
                20,
                2
            ],
            [
                "A",
                20,
                1
            ]
        ]
    },
    "288": {
        "filepath": "code/gcj_881da_c9112_job_15_83.c",
        "function_end_line": 14,
        "function_id": 288,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "int i=1; i<=t; i++",
                "loop_body_end_line": 12,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 8
            }
        ],
        "parameters": []
    },
    "289": {
        "filepath": "code/gcj_881da_c9112_job_15_83.c",
        "function_end_line": 83,
        "function_id": 289,
        "function_name": "job",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(in_str[i] != cur)",
                "else_branch_end_line": 34,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "( ((moves[0]) && (i%2)) || (!(moves[0]) && !(i%2)))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(moves[0] != 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "(parity % 2 == 0)",
                "else_branch_end_line": 82,
                "else_branch_start_line": 56,
                "true_branch_end_line": 55,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(moves[0] == 0)",
                "else_branch_end_line": 54,
                "else_branch_start_line": 49,
                "true_branch_end_line": 48,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "(moves[0] == 0)",
                "else_branch_end_line": 81,
                "else_branch_start_line": 74,
                "true_branch_end_line": 73,
                "true_branch_start_line": 66
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "int i=0; i<n; i++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "int i=0; i<=movesp; i+=2",
                "loop_body_end_line": 42,
                "loop_body_start_line": 42,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "int i=0; i<En; i++",
                "loop_body_end_line": 45,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "int i=0; i<n-En; i++",
                "loop_body_end_line": 47,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "int i=0; i<n-En; i++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "int i=0; i<En; i++",
                "loop_body_end_line": 53,
                "loop_body_start_line": 53,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "int i=0; i<goodp; i+=2",
                "loop_body_end_line": 59,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "int i=1; i<goodp; i+=2",
                "loop_body_end_line": 61,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 60
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "int i= 2*((goodp+1)/2); i<=movesp; i+=2",
                "loop_body_end_line": 63,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 64,
                "header_start_line": 64,
                "header_str": "int i=2*(goodp/2)+1; i<=movesp; i+=2",
                "loop_body_end_line": 65,
                "loop_body_start_line": 65,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 64
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "int i=-1; i<e1; i++",
                "loop_body_end_line": 68,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "int i=0; i<s1+s2; i++",
                "loop_body_end_line": 70,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 71,
                "header_start_line": 71,
                "header_str": "int i=1; i<e2; i++",
                "loop_body_end_line": 72,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 71
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "int i=-1; i<s1; i++",
                "loop_body_end_line": 76,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "int i=0; i<e1+e2; i++",
                "loop_body_end_line": 78,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "int i=1; i<s2; i++",
                "loop_body_end_line": 80,
                "loop_body_start_line": 80,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 79
            }
        ],
        "parameters": []
    },
    "290": {
        "filepath": "code/gcj_3e068_4181f_solve_18_53.c",
        "function_end_line": 17,
        "function_id": 290,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "int asdf = 0; asdf < ndata; asdf++",
                "loop_body_end_line": 15,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 12
            }
        ],
        "parameters": [
            [
                "argc",
                8,
                0
            ],
            [
                "argv",
                8,
                1
            ]
        ]
    },
    "291": {
        "filepath": "code/gcj_3e068_4181f_solve_18_53.c",
        "function_end_line": 53,
        "function_id": 291,
        "function_name": "solve",
        "function_start_line": 18,
        "if_statements": [
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "(count < 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 39,
                "condition_str": "(!sold[preference] &&\n\t\t\t\t((leastPopular < 0) || (preferred[preference] < preferred[leastPopular])))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(leastPopular >= 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 48
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "int i = 0; i < nflavors; i++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "int j = 0; j < count; j++",
                "loop_body_end_line": 44,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 34
            }
        ],
        "parameters": [
            [
                "caseNum",
                18,
                0
            ]
        ]
    },
    "292": {
        "filepath": "code/gcj_524_7220_run_horses_5_33.c",
        "function_end_line": 33,
        "function_id": 292,
        "function_name": "run_horses",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(finished[i] != 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(i - 1 >= 0 && position[i] > position[i - 1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "(position[i] >= destination)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 24
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "int i = 0; i < total_horses; i++",
                "loop_body_end_line": 29,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "(horses_running > 0)",
                "loop_body_end_line": 29,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 10
            }
        ],
        "parameters": [
            [
                "destination",
                5,
                0
            ],
            [
                "position",
                5,
                2
            ],
            [
                "total_horses",
                5,
                1
            ],
            [
                "speed",
                5,
                3
            ]
        ]
    },
    "293": {
        "filepath": "code/gcj_524_7220_run_horses_5_33.c",
        "function_end_line": 56,
        "function_id": 293,
        "function_name": "main",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "int i = 0; i < T; i++",
                "loop_body_end_line": 54,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 37
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "int j = 0; j < total_horses; j++",
                "loop_body_end_line": 49,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 46
            }
        ],
        "parameters": []
    },
    "294": {
        "filepath": "code/gcj_104e03_10a698_alienpylon_15_54.c",
        "function_end_line": 14,
        "function_id": 294,
        "function_name": "main",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "i=0;i<n;i++",
                "loop_body_end_line": 12,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 8
            }
        ],
        "parameters": []
    },
    "295": {
        "filepath": "code/gcj_104e03_10a698_alienpylon_15_54.c",
        "function_end_line": 54,
        "function_id": 295,
        "function_name": "alienpylon",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(b>=a)",
                "else_branch_end_line": 53,
                "else_branch_start_line": 36,
                "true_branch_end_line": 36,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(b-a==1||a+1==b||a-1==b||b+1==a||b-1==a||a==b)",
                "else_branch_end_line": 35,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "(a-b==1||a+1==b||a-1==b||b+1==a||b-1==a||a==b)",
                "else_branch_end_line": 52,
                "else_branch_start_line": 41,
                "true_branch_end_line": 40,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "k=1;k<=a*b;k++",
                "loop_body_end_line": 34,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "k=1;k<=a*b;k++",
                "loop_body_end_line": 51,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 44
            }
        ],
        "parameters": [
            [
                "i",
                15,
                2
            ],
            [
                "b",
                15,
                1
            ],
            [
                "a",
                15,
                0
            ]
        ]
    },
    "296": {
        "filepath": "code/gcj_2b3034_2c407b_main_8_63.c",
        "function_end_line": 7,
        "function_id": 296,
        "function_name": "len",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "i=0;s[i]!='\\0';i++",
                "loop_body_end_line": 5,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 5,
                "loop_statement_start_line": 5
            }
        ],
        "parameters": [
            [
                "s",
                2,
                0
            ]
        ]
    },
    "297": {
        "filepath": "code/gcj_2b3034_2c407b_main_8_63.c",
        "function_end_line": 63,
        "function_id": 297,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "(str[0]=='*')",
                "else_branch_end_line": 34,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "(str[len(str)-1]=='*')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(f==1&&a[k][j]!=s[x-1]&&a[k][j]!='*'&&a[k][j]!='#')",
                "else_branch_end_line": 51,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(a[k][j]!='*'&&a[k][j]!='#')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 51,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(f==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "(flag==1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "(flag==1)",
                "else_branch_end_line": 60,
                "else_branch_start_line": 59,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "i=1;i<=t;i++",
                "loop_body_end_line": 61,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "k=0;k<10001;k++",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "j=0;j<n;j++",
                "loop_body_end_line": 35,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "k=len(str);k>=0;k--",
                "loop_body_end_line": 28,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "k=0;str[k]!='\\0';k++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "j=0;j<10000;j++",
                "loop_body_end_line": 55,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 37
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "k=0;k<n;k++",
                "loop_body_end_line": 52,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 40
            }
        ],
        "parameters": []
    },
    "298": {
        "filepath": "code/gcj_209a9f_26395a_check_3_37.c",
        "function_end_line": 37,
        "function_id": 298,
        "function_name": "check",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "(S[i]=='1')",
                "else_branch_end_line": 22,
                "else_branch_start_line": 18,
                "true_branch_end_line": 17,
                "true_branch_start_line": 10
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(str[i]==')'&& str[i+1]=='(')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 7,
                "header_start_line": 7,
                "header_str": "i=0;S[i]!='\\0';i++",
                "loop_body_end_line": 23,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 7
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "i=0;str[i]!='\\0';i++",
                "loop_body_end_line": 36,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "j=i;str[j]!='\\0';j++",
                "loop_body_end_line": 33,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 30
            }
        ],
        "parameters": [
            [
                "S",
                3,
                0
            ]
        ]
    },
    "299": {
        "filepath": "code/gcj_209a9f_26395a_check_3_37.c",
        "function_end_line": 51,
        "function_id": 299,
        "function_name": "main",
        "function_start_line": 38,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "(T!=0)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 42
            }
        ],
        "parameters": []
    }
}