{
    "1": {
        "filepath": "code/codenet_p00122_s821876806_isSafe_9_32.py",
        "function_end_line": 8,
        "function_id": 1,
        "function_name": "makeList",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 8,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 4
            }
        ],
        "parameters": [
            [
                "n",
                3,
                1
            ],
            [
                "splist",
                3,
                0
            ]
        ]
    },
    "2": {
        "filepath": "code/codenet_p00122_s821876806_isSafe_9_32.py",
        "function_end_line": 32,
        "function_id": 2,
        "function_name": "isSafe",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "dx>=0 and dx<10 and dy>=0 and dy<10",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "dx>=0 and dx<10 and dy>=0 and dy<10",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "safe[spn][i] in flogArea",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "spn==9",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "spn<9",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "for i in range(-1,2)",
                "loop_body_end_line": 19,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for j in [-2,2]",
                "loop_body_end_line": 19,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "for j in range(-1,2)",
                "loop_body_end_line": 25,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "for i in [-2,2]",
                "loop_body_end_line": 25,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "for i in range(len(safe[spn]))",
                "loop_body_end_line": 31,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "while not wfs.empty()",
                "loop_body_end_line": 31,
                "loop_body_start_line": 11,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 10
            }
        ],
        "parameters": [
            [
                "wfs",
                9,
                0
            ],
            [
                "safe",
                9,
                1
            ]
        ]
    },
    "3": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 8,
        "function_id": 3,
        "function_name": "LI",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "4": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 9,
        "function_id": 4,
        "function_name": "LI_",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "5": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 10,
        "function_id": 5,
        "function_name": "LF",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "6": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 11,
        "function_id": 6,
        "function_name": "LS",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "7": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 12,
        "function_id": 7,
        "function_name": "I",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "8": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 13,
        "function_id": 8,
        "function_name": "F",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "9": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 14,
        "function_id": 9,
        "function_name": "S",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "10": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 15,
        "function_id": 10,
        "function_name": "pf",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                15,
                0
            ]
        ]
    },
    "11": {
        "filepath": "code/codenet_p00829_s829617336_main_16_38.py",
        "function_end_line": 38,
        "function_id": 11,
        "function_name": "main",
        "function_start_line": 16,
        "if_statements": [
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(c & ii) != b",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "for i in range(32)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "for d in a",
                "loop_body_end_line": 34,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "while ni < n",
                "loop_body_end_line": 37,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "while len(a) < 9",
                "loop_body_end_line": 24,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 23
            }
        ],
        "parameters": []
    },
    "12": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 8,
        "function_id": 12,
        "function_name": "inp",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "13": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 9,
        "function_id": 13,
        "function_name": "inpm",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "14": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 10,
        "function_id": 14,
        "function_name": "inpl",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "15": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 11,
        "function_id": 15,
        "function_name": "inpls",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "16": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 12,
        "function_id": 16,
        "function_name": "inplm",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                12,
                0
            ]
        ]
    },
    "17": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 13,
        "function_id": 17,
        "function_name": "inplL",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                13,
                0
            ]
        ]
    },
    "18": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 14,
        "function_id": 18,
        "function_name": "inplT",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                14,
                0
            ]
        ]
    },
    "19": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 15,
        "function_id": 19,
        "function_name": "inpll",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "20": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 16,
        "function_id": 20,
        "function_name": "inplls",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                16,
                0
            ]
        ]
    },
    "21": {
        "filepath": "code/codenet_p02679_s709213230_main_17_80.py",
        "function_end_line": 80,
        "function_id": 21,
        "function_name": "main",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "a != 0 and b == 0",
                "else_branch_end_line": 31,
                "else_branch_start_line": 27,
                "true_branch_end_line": 24,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "a == 0 and b != 0",
                "else_branch_end_line": 31,
                "else_branch_start_line": 27,
                "true_branch_end_line": 26,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "not (a==0 and b==0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "a < 0 and b < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "a < 0 and b > 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "a == 0 or b == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "a > 0 and b > 0",
                "else_branch_end_line": 51,
                "else_branch_start_line": 50,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "dic1[rev] > 0 and dic2[rev] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "flag",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "n1 == 0",
                "else_branch_end_line": 65,
                "else_branch_start_line": 64,
                "true_branch_end_line": 61,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "n2 == 0",
                "else_branch_end_line": 65,
                "else_branch_start_line": 64,
                "true_branch_end_line": 63,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "dic['1 0'] and dic['0 1']",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 70,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "dic['1 0']",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 73,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "dic['0 1']",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 75
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "num != 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 78
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "for _ in range(n)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "for e in dic",
                "loop_body_end_line": 66,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 43
            }
        ],
        "parameters": []
    },
    "22": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 8,
        "function_id": 22,
        "function_name": "inp",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "23": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 9,
        "function_id": 23,
        "function_name": "inpm",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "24": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 10,
        "function_id": 24,
        "function_name": "inpl",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "25": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 11,
        "function_id": 25,
        "function_name": "inpls",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "26": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 12,
        "function_id": 26,
        "function_name": "inplm",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                12,
                0
            ]
        ]
    },
    "27": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 13,
        "function_id": 27,
        "function_name": "inplL",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                13,
                0
            ]
        ]
    },
    "28": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 14,
        "function_id": 28,
        "function_name": "inplT",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                14,
                0
            ]
        ]
    },
    "29": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 15,
        "function_id": 29,
        "function_name": "inpll",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "30": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 16,
        "function_id": 30,
        "function_name": "inplls",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                16,
                0
            ]
        ]
    },
    "31": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 37,
        "function_id": 31,
        "function_name": "bfs",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "went[g[go][i]]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "dis[g[go][i]]%2 == 0",
                "else_branch_end_line": 35,
                "else_branch_start_line": 34,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "for i in range(len(g[go]))",
                "loop_body_end_line": 36,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "while que",
                "loop_body_end_line": 36,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 25
            }
        ],
        "parameters": [
            [
                "n",
                17,
                0
            ],
            [
                "g",
                17,
                1
            ]
        ]
    },
    "32": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 121,
        "function_id": 32,
        "function_name": "length3",
        "function_start_line": 38,
        "if_statements": [
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "went[g[go][i]]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "dis[g[go][i]] < 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "dis[g[go][i]] == 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "ans[e] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "ans[e]%3 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "ans[e]%3 == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "check1>0 and check2>0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "check1>0",
                "else_branch_end_line": 120,
                "else_branch_start_line": 94,
                "true_branch_end_line": 80,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "check2>0",
                "else_branch_end_line": 120,
                "else_branch_start_line": 94,
                "true_branch_end_line": 93,
                "true_branch_start_line": 82
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "que_2",
                "else_branch_end_line": 73,
                "else_branch_start_line": 71,
                "true_branch_end_line": 70,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 75,
                "condition_start_line": 75,
                "condition_str": "ans[e] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "que_1",
                "else_branch_end_line": 80,
                "else_branch_start_line": 78,
                "true_branch_end_line": 77,
                "true_branch_start_line": 77
            },
            {
                "condition_end_line": 82,
                "condition_start_line": 82,
                "condition_str": "que_1",
                "else_branch_end_line": 86,
                "else_branch_start_line": 84,
                "true_branch_end_line": 83,
                "true_branch_start_line": 83
            },
            {
                "condition_end_line": 88,
                "condition_start_line": 88,
                "condition_str": "ans[e] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 89
            },
            {
                "condition_end_line": 89,
                "condition_start_line": 89,
                "condition_str": "que_2",
                "else_branch_end_line": 93,
                "else_branch_start_line": 91,
                "true_branch_end_line": 90,
                "true_branch_start_line": 90
            },
            {
                "condition_end_line": 95,
                "condition_start_line": 95,
                "condition_str": "len(que_1) > len(que_2)",
                "else_branch_end_line": 120,
                "else_branch_start_line": 108,
                "true_branch_end_line": 107,
                "true_branch_start_line": 96
            },
            {
                "condition_end_line": 96,
                "condition_start_line": 96,
                "condition_str": "que_2",
                "else_branch_end_line": 100,
                "else_branch_start_line": 98,
                "true_branch_end_line": 97,
                "true_branch_start_line": 97
            },
            {
                "condition_end_line": 102,
                "condition_start_line": 102,
                "condition_str": "ans[e] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 107,
                "true_branch_start_line": 103
            },
            {
                "condition_end_line": 103,
                "condition_start_line": 103,
                "condition_str": "que_1",
                "else_branch_end_line": 107,
                "else_branch_start_line": 105,
                "true_branch_end_line": 104,
                "true_branch_start_line": 104
            },
            {
                "condition_end_line": 109,
                "condition_start_line": 109,
                "condition_str": "que_1",
                "else_branch_end_line": 113,
                "else_branch_start_line": 111,
                "true_branch_end_line": 110,
                "true_branch_start_line": 110
            },
            {
                "condition_end_line": 115,
                "condition_start_line": 115,
                "condition_str": "ans[e] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 120,
                "true_branch_start_line": 116
            },
            {
                "condition_end_line": 116,
                "condition_start_line": 116,
                "condition_str": "que_2",
                "else_branch_end_line": 120,
                "else_branch_start_line": 118,
                "true_branch_end_line": 117,
                "true_branch_start_line": 117
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "for i in range(len(g[go]))",
                "loop_body_end_line": 55,
                "loop_body_start_line": 48,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "for e in see",
                "loop_body_end_line": 64,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "for e in see",
                "loop_body_end_line": 80,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "for e in see",
                "loop_body_end_line": 93,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 87
            },
            {
                "header_end_line": 101,
                "header_start_line": 101,
                "header_str": "for e in see",
                "loop_body_end_line": 107,
                "loop_body_start_line": 102,
                "loop_statement_end_line": 107,
                "loop_statement_start_line": 101
            },
            {
                "header_end_line": 114,
                "header_start_line": 114,
                "header_str": "for e in see",
                "loop_body_end_line": 120,
                "loop_body_start_line": 115,
                "loop_statement_end_line": 120,
                "loop_statement_start_line": 114
            },
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "while que",
                "loop_body_end_line": 55,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 45
            }
        ],
        "parameters": [
            [
                "s",
                38,
                0
            ],
            [
                "que_1",
                38,
                4
            ],
            [
                "ans",
                38,
                3
            ],
            [
                "g",
                38,
                2
            ],
            [
                "n",
                38,
                1
            ],
            [
                "que_2",
                38,
                5
            ]
        ]
    },
    "33": {
        "filepath": "code/codenet_p02749_s232600773_length3_38_121.py",
        "function_end_line": 216,
        "function_id": 33,
        "function_name": "main",
        "function_start_line": 122,
        "if_statements": [
            {
                "condition_end_line": 131,
                "condition_start_line": 131,
                "condition_str": "min(cnt_even,cnt_odd) <= n//3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 162,
                "true_branch_start_line": 132
            },
            {
                "condition_end_line": 134,
                "condition_start_line": 134,
                "condition_str": "cnt_even <= cnt_odd",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 147,
                "true_branch_start_line": 135
            },
            {
                "condition_end_line": 148,
                "condition_start_line": 148,
                "condition_str": "cnt_even >= cnt_odd",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 161,
                "true_branch_start_line": 149
            },
            {
                "condition_end_line": 136,
                "condition_start_line": 136,
                "condition_str": "dis[i]%2 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 139,
                "true_branch_start_line": 137
            },
            {
                "condition_end_line": 142,
                "condition_start_line": 142,
                "condition_str": "ans[i] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 146,
                "true_branch_start_line": 143
            },
            {
                "condition_end_line": 150,
                "condition_start_line": 150,
                "condition_str": "dis[i]%2 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 153,
                "true_branch_start_line": 151
            },
            {
                "condition_end_line": 156,
                "condition_start_line": 156,
                "condition_str": "ans[i] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 160,
                "true_branch_start_line": 157
            },
            {
                "condition_end_line": 165,
                "condition_start_line": 165,
                "condition_str": "cnt_even <= cnt_odd",
                "else_branch_end_line": 216,
                "else_branch_start_line": 191,
                "true_branch_end_line": 190,
                "true_branch_start_line": 166
            },
            {
                "condition_end_line": 168,
                "condition_start_line": 168,
                "condition_str": "dis[i]%2 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 174,
                "true_branch_start_line": 169
            },
            {
                "condition_end_line": 169,
                "condition_start_line": 169,
                "condition_str": "x*3 <= n",
                "else_branch_end_line": 174,
                "else_branch_start_line": 173,
                "true_branch_end_line": 172,
                "true_branch_start_line": 170
            },
            {
                "condition_end_line": 178,
                "condition_start_line": 178,
                "condition_str": "(i+1)%3 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 179,
                "true_branch_start_line": 179
            },
            {
                "condition_end_line": 180,
                "condition_start_line": 180,
                "condition_str": "(i+1)%3 == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 181,
                "true_branch_start_line": 181
            },
            {
                "condition_end_line": 185,
                "condition_start_line": 185,
                "condition_str": "ans[i] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 189,
                "true_branch_start_line": 186
            },
            {
                "condition_end_line": 186,
                "condition_start_line": 186,
                "condition_str": "que_1",
                "else_branch_end_line": 189,
                "else_branch_start_line": 188,
                "true_branch_end_line": 187,
                "true_branch_start_line": 187
            },
            {
                "condition_end_line": 194,
                "condition_start_line": 194,
                "condition_str": "dis[i]%2 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 200,
                "true_branch_start_line": 195
            },
            {
                "condition_end_line": 195,
                "condition_start_line": 195,
                "condition_str": "x*3 <= n",
                "else_branch_end_line": 200,
                "else_branch_start_line": 199,
                "true_branch_end_line": 198,
                "true_branch_start_line": 196
            },
            {
                "condition_end_line": 204,
                "condition_start_line": 204,
                "condition_str": "(i+1)%3 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 205,
                "true_branch_start_line": 205
            },
            {
                "condition_end_line": 206,
                "condition_start_line": 206,
                "condition_str": "(i+1)%3 == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 207,
                "true_branch_start_line": 207
            },
            {
                "condition_end_line": 211,
                "condition_start_line": 211,
                "condition_str": "ans[i] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 215,
                "true_branch_start_line": 212
            },
            {
                "condition_end_line": 212,
                "condition_start_line": 212,
                "condition_str": "que_1",
                "else_branch_end_line": 215,
                "else_branch_start_line": 214,
                "true_branch_end_line": 213,
                "true_branch_start_line": 213
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 125,
                "header_start_line": 125,
                "header_str": "for _ in range(n-1)",
                "loop_body_end_line": 128,
                "loop_body_start_line": 126,
                "loop_statement_end_line": 128,
                "loop_statement_start_line": 125
            },
            {
                "header_end_line": 135,
                "header_start_line": 135,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 139,
                "loop_body_start_line": 136,
                "loop_statement_end_line": 139,
                "loop_statement_start_line": 135
            },
            {
                "header_end_line": 141,
                "header_start_line": 141,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 146,
                "loop_body_start_line": 142,
                "loop_statement_end_line": 146,
                "loop_statement_start_line": 141
            },
            {
                "header_end_line": 149,
                "header_start_line": 149,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 153,
                "loop_body_start_line": 150,
                "loop_statement_end_line": 153,
                "loop_statement_start_line": 149
            },
            {
                "header_end_line": 155,
                "header_start_line": 155,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 160,
                "loop_body_start_line": 156,
                "loop_statement_end_line": 160,
                "loop_statement_start_line": 155
            },
            {
                "header_end_line": 167,
                "header_start_line": 167,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 174,
                "loop_body_start_line": 168,
                "loop_statement_end_line": 174,
                "loop_statement_start_line": 167
            },
            {
                "header_end_line": 177,
                "header_start_line": 177,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 181,
                "loop_body_start_line": 178,
                "loop_statement_end_line": 181,
                "loop_statement_start_line": 177
            },
            {
                "header_end_line": 182,
                "header_start_line": 182,
                "header_str": "for e in remain",
                "loop_body_end_line": 183,
                "loop_body_start_line": 183,
                "loop_statement_end_line": 183,
                "loop_statement_start_line": 182
            },
            {
                "header_end_line": 184,
                "header_start_line": 184,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 189,
                "loop_body_start_line": 185,
                "loop_statement_end_line": 189,
                "loop_statement_start_line": 184
            },
            {
                "header_end_line": 193,
                "header_start_line": 193,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 200,
                "loop_body_start_line": 194,
                "loop_statement_end_line": 200,
                "loop_statement_start_line": 193
            },
            {
                "header_end_line": 203,
                "header_start_line": 203,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 207,
                "loop_body_start_line": 204,
                "loop_statement_end_line": 207,
                "loop_statement_start_line": 203
            },
            {
                "header_end_line": 208,
                "header_start_line": 208,
                "header_str": "for e in remain",
                "loop_body_end_line": 209,
                "loop_body_start_line": 209,
                "loop_statement_end_line": 209,
                "loop_statement_start_line": 208
            },
            {
                "header_end_line": 210,
                "header_start_line": 210,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 215,
                "loop_body_start_line": 211,
                "loop_statement_end_line": 215,
                "loop_statement_start_line": 210
            },
            {
                "header_end_line": 143,
                "header_start_line": 143,
                "header_str": "while not check[x]",
                "loop_body_end_line": 144,
                "loop_body_start_line": 144,
                "loop_statement_end_line": 144,
                "loop_statement_start_line": 143
            },
            {
                "header_end_line": 157,
                "header_start_line": 157,
                "header_str": "while not check[x]",
                "loop_body_end_line": 158,
                "loop_body_start_line": 158,
                "loop_statement_end_line": 158,
                "loop_statement_start_line": 157
            }
        ],
        "parameters": []
    },
    "34": {
        "filepath": "code/codenet_p02845_s122098108_main_10_76.py",
        "function_end_line": 9,
        "function_id": 34,
        "function_name": "index",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "a",
                8,
                0
            ],
            [
                "b",
                8,
                1
            ]
        ]
    },
    "35": {
        "filepath": "code/codenet_p02845_s122098108_main_10_76.py",
        "function_end_line": 76,
        "function_id": 35,
        "function_name": "main",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "a[0] != 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "n == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "n == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "a[0] == 0",
                "else_branch_end_line": 24,
                "else_branch_start_line": 23,
                "true_branch_end_line": 22,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "a[1] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "a[1] == 1",
                "else_branch_end_line": 32,
                "else_branch_start_line": 31,
                "true_branch_end_line": 30,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "a[1] == 0 and a[2] == 0",
                "else_branch_end_line": 51,
                "else_branch_start_line": 49,
                "true_branch_end_line": 38,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "a[1] == 0 and a[2] == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "a[1] == 1 and a[2] == 2",
                "else_branch_end_line": 51,
                "else_branch_start_line": 49,
                "true_branch_end_line": 48,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "a[i] == x and a[i] != y",
                "else_branch_end_line": 71,
                "else_branch_start_line": 69,
                "true_branch_end_line": 55,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "a[i] == x and a[i] == y and a[i] != z",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "a[i] == x and a[i] == y and a[i] == z",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "a[i] == y and a[i] != z",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 63,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "a[i] == y and a[i] == z",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "a[i] == z",
                "else_branch_end_line": 71,
                "else_branch_start_line": 69,
                "true_branch_end_line": 68,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 72,
                "condition_start_line": 72,
                "condition_str": "y == 0",
                "else_branch_end_line": 75,
                "else_branch_start_line": 74,
                "true_branch_end_line": 73,
                "true_branch_start_line": 73
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for i in range(3, n)",
                "loop_body_end_line": 71,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 53
            }
        ],
        "parameters": []
    },
    "36": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 9,
        "function_id": 36,
        "function_name": "LI",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "37": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 10,
        "function_id": 37,
        "function_name": "LLI",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "38": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 11,
        "function_id": 38,
        "function_name": "LI_",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "39": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 12,
        "function_id": 39,
        "function_name": "LF",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "40": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 13,
        "function_id": 40,
        "function_name": "LS",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "41": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 14,
        "function_id": 41,
        "function_name": "I",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "42": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 15,
        "function_id": 42,
        "function_name": "F",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "43": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 16,
        "function_id": 43,
        "function_name": "S",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "44": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 17,
        "function_id": 44,
        "function_name": "pf",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                17,
                0
            ]
        ]
    },
    "45": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 18,
        "function_id": 45,
        "function_name": "pe",
        "function_start_line": 18,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                18,
                0
            ]
        ]
    },
    "46": {
        "filepath": "code/codenet_p03040_s146191757_main_19_84.py",
        "function_end_line": 84,
        "function_id": 46,
        "function_name": "main",
        "function_start_line": 19,
        "if_statements": [
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "t[0] == 2",
                "else_branch_end_line": 83,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "a == x",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "c[a] == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "a < x",
                "else_branch_end_line": 50,
                "else_branch_start_line": 49,
                "true_branch_end_line": 48,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "a < x",
                "else_branch_end_line": 83,
                "else_branch_start_line": 68,
                "true_branch_end_line": 67,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "nt <= t",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "nt < t",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 83,
                "true_branch_start_line": 77
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "for t in aa[1:]",
                "loop_body_end_line": 83,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": []
    },
    "47": {
        "filepath": "code/codenet_p03053_s968817419_find_black_17_58.py",
        "function_end_line": 16,
        "function_id": 47,
        "function_name": "main",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "ans[i][j] == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 11
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for i in range(h)",
                "loop_body_end_line": 14,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for j in range(w)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 9
            }
        ],
        "parameters": [
            [
                "inputs",
                4,
                0
            ]
        ]
    },
    "48": {
        "filepath": "code/codenet_p03053_s968817419_find_black_17_58.py",
        "function_end_line": 58,
        "function_id": 48,
        "function_name": "find_black",
        "function_start_line": 17,
        "if_statements": [
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "candidate[0] != -1 and ans[candidate[0]][candidate[1]] + len(candidate[2]) <= len(path)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "mass[h][w] == '#'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "ans[h][w] != -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(candidate[0] == -1) or s0 < s1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "h-1 >= 0 and not done[h-1][w]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "h+1 < len(mass) and not done[h+1][w]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "w-1 >= 0 and not done[h][w-1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "w+1 < len(mass[0]) and not done[h][w+1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 55
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "for idx, (i, j) in enumerate(reversed(path))",
                "loop_body_end_line": 30,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "while q",
                "loop_body_end_line": 57,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 24
            }
        ],
        "parameters": [
            [
                "w",
                17,
                3
            ],
            [
                "h",
                17,
                2
            ],
            [
                "ans",
                17,
                1
            ],
            [
                "mass",
                17,
                0
            ]
        ]
    },
    "49": {
        "filepath": "code/codenet_p03053_s968817419_find_black_17_58.py",
        "function_end_line": 65,
        "function_id": 49,
        "function_name": "gen_inputs",
        "function_start_line": 59,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "while True",
                "loop_body_end_line": 64,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 61
            }
        ],
        "parameters": []
    },
    "50": {
        "filepath": "code/codenet_p03089_s926931317_main_7_106.py",
        "function_end_line": 3,
        "function_id": 50,
        "function_name": "I",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "51": {
        "filepath": "code/codenet_p03089_s926931317_main_7_106.py",
        "function_end_line": 4,
        "function_id": 51,
        "function_name": "LI",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "52": {
        "filepath": "code/codenet_p03089_s926931317_main_7_106.py",
        "function_end_line": 5,
        "function_id": 52,
        "function_name": "S",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "53": {
        "filepath": "code/codenet_p03089_s926931317_main_7_106.py",
        "function_end_line": 6,
        "function_id": 53,
        "function_name": "LS",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "54": {
        "filepath": "code/codenet_p03089_s926931317_main_7_106.py",
        "function_end_line": 106,
        "function_id": 54,
        "function_name": "main",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "mx==1",
                "else_branch_end_line": 26,
                "else_branch_start_line": 20,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "phase and nxt != 1",
                "else_branch_end_line": 26,
                "else_branch_start_line": 25,
                "true_branch_end_line": 24,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "up",
                "else_branch_end_line": 47,
                "else_branch_start_line": 42,
                "true_branch_end_line": 41,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "x>=now_mx",
                "else_branch_end_line": 41,
                "else_branch_start_line": 39,
                "true_branch_end_line": 38,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "x==mx",
                "else_branch_end_line": 38,
                "else_branch_start_line": 37,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "x<=now_mn",
                "else_branch_end_line": 47,
                "else_branch_start_line": 45,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "not ctn or lenth+1<mx or lst[0] != 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "not phase",
                "else_branch_end_line": 105,
                "else_branch_start_line": 84,
                "true_branch_end_line": 83,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "now_len+1 < nxt",
                "else_branch_end_line": 83,
                "else_branch_start_line": 79,
                "true_branch_end_line": 78,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "not down",
                "else_branch_end_line": 78,
                "else_branch_start_line": 71,
                "true_branch_end_line": 70,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "gr[i][0] == mx",
                "else_branch_end_line": 70,
                "else_branch_start_line": 65,
                "true_branch_end_line": 64,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 72,
                "condition_start_line": 72,
                "condition_str": "gr[i][1] == 0",
                "else_branch_end_line": 78,
                "else_branch_start_line": 74,
                "true_branch_end_line": 73,
                "true_branch_start_line": 73
            },
            {
                "condition_end_line": 85,
                "condition_start_line": 85,
                "condition_str": "nxt == mx",
                "else_branch_end_line": 105,
                "else_branch_start_line": 89,
                "true_branch_end_line": 88,
                "true_branch_start_line": 86
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "not down",
                "else_branch_end_line": 105,
                "else_branch_start_line": 99,
                "true_branch_end_line": 98,
                "true_branch_start_line": 91
            },
            {
                "condition_end_line": 91,
                "condition_start_line": 91,
                "condition_str": "gr[i][0] == mx",
                "else_branch_end_line": 98,
                "else_branch_start_line": 94,
                "true_branch_end_line": 93,
                "true_branch_start_line": 92
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "gr[i][1] == 0",
                "else_branch_end_line": 105,
                "else_branch_start_line": 102,
                "true_branch_end_line": 101,
                "true_branch_start_line": 101
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for x in lst",
                "loop_body_end_line": 47,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "while len(b)!=0",
                "loop_body_end_line": 105,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 105,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "while len(b)!=0",
                "loop_body_end_line": 26,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "while com!= 0",
                "loop_body_end_line": 105,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 105,
                "loop_statement_start_line": 57
            }
        ],
        "parameters": []
    },
    "55": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 9,
        "function_id": 55,
        "function_name": "intin",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "len(input_tuple) <= 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "56": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 11,
        "function_id": 56,
        "function_name": "intina",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "57": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 13,
        "function_id": 57,
        "function_name": "intinl",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "count",
                12,
                0
            ]
        ]
    },
    "58": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 16,
        "function_id": 58,
        "function_name": "modadd",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                14,
                0
            ],
            [
                "y",
                14,
                1
            ]
        ]
    },
    "59": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 19,
        "function_id": 59,
        "function_name": "modmlt",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                17,
                0
            ],
            [
                "y",
                17,
                1
            ]
        ]
    },
    "60": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 25,
        "function_id": 60,
        "function_name": "lcm",
        "function_start_line": 20,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "while y != 0",
                "loop_body_end_line": 24,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "y",
                20,
                1
            ],
            [
                "x",
                20,
                0
            ]
        ]
    },
    "61": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 36,
        "function_id": 61,
        "function_name": "combination",
        "function_start_line": 26,
        "if_statements": [
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "y > x // 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "for i in range(0, y)",
                "loop_body_end_line": 35,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 31
            }
        ],
        "parameters": [
            [
                "y",
                26,
                1
            ],
            [
                "x",
                26,
                0
            ]
        ]
    },
    "62": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 43,
        "function_id": 62,
        "function_name": "get_divisors",
        "function_start_line": 37,
        "if_statements": [
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "x % i == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 41
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "for i in range(1, int(x**0.5) + 3)",
                "loop_body_end_line": 42,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 39
            }
        ],
        "parameters": [
            [
                "x",
                37,
                0
            ]
        ]
    },
    "63": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 51,
        "function_id": 63,
        "function_name": "get_factors",
        "function_start_line": 44,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "for i in range(2, int(x**0.5) + 3)",
                "loop_body_end_line": 49,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "while x % i == 0",
                "loop_body_end_line": 49,
                "loop_body_start_line": 48,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 47
            }
        ],
        "parameters": [
            [
                "x",
                44,
                0
            ]
        ]
    },
    "64": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 59,
        "function_id": 64,
        "function_name": "make_linklist",
        "function_start_line": 52,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for a, b in xylist",
                "loop_body_end_line": 58,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 54
            }
        ],
        "parameters": [
            [
                "xylist",
                52,
                0
            ]
        ]
    },
    "65": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 83,
        "function_id": 65,
        "function_name": "calc_longest_distance",
        "function_start_line": 60,
        "if_statements": [
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "distance > max_distance",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 82,
                "true_branch_start_line": 81
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "for v in vlist",
                "loop_body_end_line": 72,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "for v, distance in distance_list.items()",
                "loop_body_end_line": 82,
                "loop_body_start_line": 80,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 79
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "while distance_count < nodecount",
                "loop_body_end_line": 76,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 67
            }
        ],
        "parameters": [
            [
                "linklist",
                60,
                0
            ]
        ]
    },
    "66": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 87,
        "function_id": 66,
        "function_name": "calc_tree_diameter",
        "function_start_line": 84,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "linklist",
                84,
                0
            ]
        ]
    },
    "67": {
        "filepath": "code/codenet_p03260_s968234269_calc_longest_distance_60_83.py",
        "function_end_line": 93,
        "function_id": 67,
        "function_name": "main",
        "function_start_line": 88,
        "if_statements": [
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "a % 2 == 1 and b % 2 == 1",
                "else_branch_end_line": 93,
                "else_branch_start_line": 92,
                "true_branch_end_line": 91,
                "true_branch_start_line": 91
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "68": {
        "filepath": "code/codenet_p03263_s031020529_main_7_49.py",
        "function_end_line": 6,
        "function_id": 68,
        "function_name": "input",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "69": {
        "filepath": "code/codenet_p03263_s031020529_main_7_49.py",
        "function_end_line": 49,
        "function_id": 69,
        "function_name": "main",
        "function_start_line": 7,
        "if_statements": [
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "h % 2 == 0",
                "else_branch_end_line": 46,
                "else_branch_start_line": 32,
                "true_branch_end_line": 31,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "h == H - 1 and w == W - 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "A[h][w] % 2 == 1",
                "else_branch_end_line": 31,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "w == W - 1",
                "else_branch_end_line": 29,
                "else_branch_start_line": 26,
                "true_branch_end_line": 25,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "h == H - 1 and w == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "A[h][w] % 2 == 1",
                "else_branch_end_line": 46,
                "else_branch_start_line": 45,
                "true_branch_end_line": 44,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "w == 0",
                "else_branch_end_line": 44,
                "else_branch_start_line": 41,
                "true_branch_end_line": 40,
                "true_branch_start_line": 38
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for _ in range(H)",
                "loop_body_end_line": 14,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for h in range(H)",
                "loop_body_end_line": 46,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for w in range(W)",
                "loop_body_end_line": 31,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "for w in range(W)[::-1]",
                "loop_body_end_line": 46,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for a, b, c, d in ans",
                "loop_body_end_line": 49,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 48
            }
        ],
        "parameters": []
    },
    "70": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 6,
        "function_id": 70,
        "function_name": "LI",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "71": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 7,
        "function_id": 71,
        "function_name": "LI_",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "72": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 8,
        "function_id": 72,
        "function_name": "LF",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "73": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 9,
        "function_id": 73,
        "function_name": "LS",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "74": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 10,
        "function_id": 74,
        "function_name": "I",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "75": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 11,
        "function_id": 75,
        "function_name": "F",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "76": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 12,
        "function_id": 76,
        "function_name": "S",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "77": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 13,
        "function_id": 77,
        "function_name": "pf",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                13,
                0
            ]
        ]
    },
    "78": {
        "filepath": "code/codenet_p03366_s021784433_main_14_86.py",
        "function_end_line": 86,
        "function_id": 78,
        "function_name": "main",
        "function_start_line": 14,
        "if_statements": [
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "x[0] > s",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "x[-1] < s",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "x[i] > s",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "x[j] < s",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "d[i] >= d[j]",
                "else_branch_end_line": 45,
                "else_branch_start_line": 40,
                "true_branch_end_line": 39,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "j >= 0 and d[j] < d[j+1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "i < n and d[i] < d[i-1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "i == j",
                "else_branch_end_line": 62,
                "else_branch_start_line": 52,
                "true_branch_end_line": 51,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "x[i] > s",
                "else_branch_end_line": 62,
                "else_branch_start_line": 58,
                "true_branch_end_line": 57,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "i < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "j >= n",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 69,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "i in sk",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 73,
                "true_branch_start_line": 71
            },
            {
                "condition_end_line": 74,
                "condition_start_line": 74,
                "condition_str": "j in sk",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 77,
                "true_branch_start_line": 75
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "d[i] >= d[j]",
                "else_branch_end_line": 85,
                "else_branch_start_line": 82,
                "true_branch_end_line": 81,
                "true_branch_start_line": 79
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "while i < j",
                "loop_body_end_line": 45,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "while i >= 0 or j < n",
                "loop_body_end_line": 85,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 63
            }
        ],
        "parameters": []
    },
    "79": {
        "filepath": "code/codenet_p03566_s481224335_main_8_50.py",
        "function_end_line": 3,
        "function_id": 79,
        "function_name": "mi",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "80": {
        "filepath": "code/codenet_p03566_s481224335_main_8_50.py",
        "function_end_line": 4,
        "function_id": 80,
        "function_name": "ii",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "81": {
        "filepath": "code/codenet_p03566_s481224335_main_8_50.py",
        "function_end_line": 5,
        "function_id": 81,
        "function_name": "isp",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "82": {
        "filepath": "code/codenet_p03566_s481224335_main_8_50.py",
        "function_end_line": 6,
        "function_id": 82,
        "function_name": "deb",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "text",
                6,
                0
            ]
        ]
    },
    "83": {
        "filepath": "code/codenet_p03566_s481224335_main_8_50.py",
        "function_end_line": 50,
        "function_id": 83,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "N == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "ans < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "lu and rd",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "ld and ru",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "lu and ru",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "ld and rd",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 24,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": []
    },
    "84": {
        "filepath": "code/codenet_p03713_s030100594_examC_1_81.py",
        "function_end_line": 81,
        "function_id": 84,
        "function_name": "examC",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "i==0",
                "else_branch_end_line": 80,
                "else_branch_start_line": 62,
                "true_branch_end_line": 23,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "i==1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "i==2",
                "else_branch_end_line": 80,
                "else_branch_start_line": 62,
                "true_branch_end_line": 61,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 8,
                "condition_start_line": 8,
                "condition_str": "j==0",
                "else_branch_end_line": 23,
                "else_branch_start_line": 16,
                "true_branch_end_line": 15,
                "true_branch_start_line": 9
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "j==0",
                "else_branch_end_line": 42,
                "else_branch_start_line": 35,
                "true_branch_end_line": 34,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "j==0",
                "else_branch_end_line": 61,
                "else_branch_start_line": 54,
                "true_branch_end_line": 53,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "j==0",
                "else_branch_end_line": 80,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 66
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for i in range(4)",
                "loop_body_end_line": 80,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 4
            },
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for j in range(2)",
                "loop_body_end_line": 23,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "for j in range(2)",
                "loop_body_end_line": 42,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "for j in range(2)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "for j in range(2)",
                "loop_body_end_line": 80,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 63
            }
        ],
        "parameters": [
            [
                "inf",
                1,
                0
            ]
        ]
    },
    "85": {
        "filepath": "code/codenet_p03713_s030100594_examC_1_81.py",
        "function_end_line": 86,
        "function_id": 85,
        "function_name": "I",
        "function_start_line": 86,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "86": {
        "filepath": "code/codenet_p03713_s030100594_examC_1_81.py",
        "function_end_line": 87,
        "function_id": 86,
        "function_name": "LI",
        "function_start_line": 87,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "87": {
        "filepath": "code/codenet_p03713_s030100594_examC_1_81.py",
        "function_end_line": 88,
        "function_id": 87,
        "function_name": "LS",
        "function_start_line": 88,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "88": {
        "filepath": "code/codenet_p03713_s030100594_examC_1_81.py",
        "function_end_line": 89,
        "function_id": 88,
        "function_name": "S",
        "function_start_line": 89,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "89": {
        "filepath": "code/codenet_p02604_s898909152_solve_5_89.py",
        "function_end_line": 3,
        "function_id": 89,
        "function_name": "LI",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "90": {
        "filepath": "code/codenet_p02604_s898909152_solve_5_89.py",
        "function_end_line": 4,
        "function_id": 90,
        "function_name": "I",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "91": {
        "filepath": "code/codenet_p02604_s898909152_solve_5_89.py",
        "function_end_line": 89,
        "function_id": 91,
        "function_name": "solve",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "j",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "i >= 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "nd < dxj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "i < len(lx)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "nd < dxj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "i < len(lx)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "nd < dxj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "i >= 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "nd < dyj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "i < len(ly)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "nd < dyj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "i < len(ly)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "nd < dyj",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "j",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "j == 1",
                "else_branch_end_line": 76,
                "else_branch_start_line": 75,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "s >= ans_",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 84,
                "true_branch_start_line": 84
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for i,(x,y,num) in enumerate(p)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "for b in range(m)",
                "loop_body_end_line": 64,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "for x,y,_ in p",
                "loop_body_end_line": 28,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "for j,(x,y,num) in enumerate(p)",
                "loop_body_end_line": 64,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "for b in range(m)",
                "loop_body_end_line": 86,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 84,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 80
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "for i in ans",
                "loop_body_end_line": 88,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 87
            }
        ],
        "parameters": []
    },
    "92": {
        "filepath": "code/codenet_p03663_s078110800_main_8_105.py",
        "function_end_line": 7,
        "function_id": 92,
        "function_name": "Q",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "(n<=N and str(n)<=str(N)) or (n>N and str(n)>str(N))",
                "else_branch_end_line": 7,
                "else_branch_start_line": 6,
                "true_branch_end_line": 5,
                "true_branch_start_line": 5
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "N",
                2,
                1
            ],
            [
                "n",
                2,
                0
            ]
        ]
    },
    "93": {
        "filepath": "code/codenet_p03663_s078110800_main_8_105.py",
        "function_end_line": 105,
        "function_id": 93,
        "function_name": "main",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 105,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 46,
                "else_branch_start_line": 41,
                "true_branch_end_line": 40,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "S[m+1]==\"N\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "S[m-1]==\"Y\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 75,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 75,
                "else_branch_start_line": 70,
                "true_branch_end_line": 69,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "S[m-1]==\"N\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "S[m+1]==\"Y\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 73,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 104,
                "else_branch_start_line": 86,
                "true_branch_end_line": 85,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 93,
                "condition_start_line": 93,
                "condition_str": "A==\"Y\"",
                "else_branch_end_line": 104,
                "else_branch_start_line": 99,
                "true_branch_end_line": 98,
                "true_branch_start_line": 94
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "S[m-1]==\"N\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 96,
                "true_branch_start_line": 95
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "S[m+1]==\"Y\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 102,
                "true_branch_start_line": 101
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 76,
                "header_start_line": 76,
                "header_str": "for i in range(K-1)",
                "loop_body_end_line": 104,
                "loop_body_start_line": 77,
                "loop_statement_end_line": 104,
                "loop_statement_start_line": 76
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "while A == \"N\"",
                "loop_body_end_line": 22,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "while 1",
                "loop_body_end_line": 46,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "while 1",
                "loop_body_end_line": 75,
                "loop_body_start_line": 60,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 59
            },
            {
                "header_end_line": 88,
                "header_start_line": 88,
                "header_str": "while 1",
                "loop_body_end_line": 104,
                "loop_body_start_line": 89,
                "loop_statement_end_line": 104,
                "loop_statement_start_line": 88
            }
        ],
        "parameters": []
    },
    "94": {
        "filepath": "code/codenet_p02750_s264552825_solve_1_28.py",
        "function_end_line": 28,
        "function_id": 94,
        "function_name": "solve",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "ab[0] > 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "dp[m][p] + a0b_list_cum_sum[k] <= t",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for ab in ab_list",
                "loop_body_end_line": 6,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 6,
                "loop_statement_start_line": 4
            },
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for i in range(m + 1)",
                "loop_body_end_line": 12,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for i in range(m)",
                "loop_body_end_line": 17,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "for k in range(1, 30)",
                "loop_body_end_line": 17,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "for b in a0b_list",
                "loop_body_end_line": 22,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "for k in range(len(a0b_list_cum_sum))",
                "loop_body_end_line": 27,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "for p in range(30)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 25
            }
        ],
        "parameters": [
            [
                "n",
                1,
                0
            ],
            [
                "t",
                1,
                1
            ],
            [
                "ab_list",
                1,
                2
            ]
        ]
    },
    "95": {
        "filepath": "code/codenet_p02750_s264552825_solve_1_28.py",
        "function_end_line": 33,
        "function_id": 95,
        "function_name": "main",
        "function_start_line": 29,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "96": {
        "filepath": "code/codenet_p02750_s264552825_solve_1_28.py",
        "function_end_line": 37,
        "function_id": 96,
        "function_name": "test",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "97": {
        "filepath": "code/codenet_p03746_s860491737_main_3_54.py",
        "function_end_line": 54,
        "function_id": 97,
        "function_name": "main",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "done[z] is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "done[z] is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 47
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for _  in range(2 * m)",
                "loop_body_end_line": 7,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 7,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for _ in range(n + 1)",
                "loop_body_end_line": 10,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for _ in range(dat)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for i in xrange(m)",
                "loop_body_end_line": 21,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "for _ in range(n + 1)",
                "loop_body_end_line": 24,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "while 1",
                "loop_body_end_line": 38,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "while y is not None",
                "loop_body_end_line": 36,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "while 1",
                "loop_body_end_line": 51,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "while y is not None",
                "loop_body_end_line": 49,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 44
            }
        ],
        "parameters": []
    },
    "98": {
        "filepath": "code/codenet_p03746_s860491737_main_3_54.py",
        "function_end_line": 101,
        "function_id": 98,
        "function_name": "main",
        "function_start_line": 58,
        "if_statements": [
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "done[z] is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 82,
                "true_branch_start_line": 81
            },
            {
                "condition_end_line": 93,
                "condition_start_line": 93,
                "condition_str": "done[z] is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 95,
                "true_branch_start_line": 94
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 64,
                "header_start_line": 64,
                "header_str": "for i in xrange(m)",
                "loop_body_end_line": 70,
                "loop_body_start_line": 65,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 64
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "while 1",
                "loop_body_end_line": 85,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 78,
                "header_start_line": 78,
                "header_str": "while y is not None",
                "loop_body_end_line": 83,
                "loop_body_start_line": 79,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 78
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "while 1",
                "loop_body_end_line": 98,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 98,
                "loop_statement_start_line": 87
            },
            {
                "header_end_line": 91,
                "header_start_line": 91,
                "header_str": "while y is not None",
                "loop_body_end_line": 96,
                "loop_body_start_line": 92,
                "loop_statement_end_line": 98,
                "loop_statement_start_line": 91
            }
        ],
        "parameters": []
    },
    "99": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 5,
        "function_id": 99,
        "function_name": "file",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "100": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 8,
        "function_id": 100,
        "function_name": "get_array",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "101": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 10,
        "function_id": 101,
        "function_name": "get_ints",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "102": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 13,
        "function_id": 102,
        "function_name": "get_3_ints",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "103": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 18,
        "function_id": 103,
        "function_name": "sod",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for i in n",
                "loop_body_end_line": 17,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 17,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": [
            [
                "n",
                14,
                0
            ]
        ]
    },
    "104": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 31,
        "function_id": 104,
        "function_name": "isPrime",
        "function_start_line": 19,
        "if_statements": [
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(n <= 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(n <= 3)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(n % 2 == 0 or n % 3 == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(n % i == 0 or n % (i + 2) == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "while(i * i <= n)",
                "loop_body_end_line": 30,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 27
            }
        ],
        "parameters": [
            [
                "n",
                19,
                0
            ]
        ]
    },
    "105": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 44,
        "function_id": 105,
        "function_name": "getFloor",
        "function_start_line": 32,
        "if_statements": [
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "A[mid] == x",
                "else_branch_end_line": 43,
                "else_branch_start_line": 41,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "x < A[mid]",
                "else_branch_end_line": 43,
                "else_branch_start_line": 41,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "while left <= right",
                "loop_body_end_line": 43,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 35
            }
        ],
        "parameters": [
            [
                "A",
                32,
                0
            ],
            [
                "x",
                32,
                1
            ]
        ]
    },
    "106": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 57,
        "function_id": 106,
        "function_name": "chk",
        "function_start_line": 45,
        "if_statements": [
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(j[0]>=i[0] and j[1]<=i[1])",
                "else_branch_end_line": 56,
                "else_branch_start_line": 55,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(j[0]<=i[0] and j[1]>=i[1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "(i[0]==j[1] or i[1]==j[0])",
                "else_branch_end_line": 56,
                "else_branch_start_line": 55,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "for i in aa",
                "loop_body_end_line": 56,
                "loop_body_start_line": 48,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for j in bb",
                "loop_body_end_line": 56,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 48
            }
        ],
        "parameters": [
            [
                "aa",
                45,
                0
            ],
            [
                "bb",
                45,
                1
            ]
        ]
    },
    "107": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 85,
        "function_id": 107,
        "function_name": "maxSumRangeQuery",
        "function_start_line": 58,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "for _ in range(len(nums)+1)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 60
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "for i in req",
                "loop_body_end_line": 65,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "for i in range(1,len(l))",
                "loop_body_end_line": 67,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 70,
                "header_start_line": 70,
                "header_str": "for i in range(len(l))",
                "loop_body_end_line": 71,
                "loop_body_start_line": 71,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 70
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "for _ in range(len(nums))",
                "loop_body_end_line": 76,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "for i in di",
                "loop_body_end_line": 80,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 78,
                "header_start_line": 78,
                "header_str": "for j in di[i]",
                "loop_body_end_line": 80,
                "loop_body_start_line": 79,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 78
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "for i in req",
                "loop_body_end_line": 84,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 84,
                "loop_statement_start_line": 82
            }
        ],
        "parameters": [
            [
                "nums",
                58,
                0
            ],
            [
                "req",
                58,
                1
            ]
        ]
    },
    "108": {
        "filepath": "code/codenet_p02783_s707628636_maxSumRangeQuery_58_85.py",
        "function_end_line": 92,
        "function_id": 108,
        "function_name": "main",
        "function_start_line": 86,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "while(a>0)",
                "loop_body_end_line": 91,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 89
            }
        ],
        "parameters": []
    },
    "109": {
        "filepath": "code/codenet_p02728_s756563639_solve_3_75.py",
        "function_end_line": 75,
        "function_id": 109,
        "function_name": "solve",
        "function_start_line": 3,
        "if_statements": [
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "parent[q] == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "len(children[x]) == 0",
                "else_branch_end_line": 38,
                "else_branch_start_line": 33,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "len(children[x]) == 0",
                "else_branch_end_line": 49,
                "else_branch_start_line": 43,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "for i in range(1, n)",
                "loop_body_end_line": 6,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 6,
                "loop_statement_start_line": 5
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for i in range(n - 2, 0, -1)",
                "loop_body_end_line": 10,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for i in range(n - 1)",
                "loop_body_end_line": 15,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "for q in g[p]",
                "loop_body_end_line": 28,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "for x in order[::-1]",
                "loop_body_end_line": 38,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for y in children[x]",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "for x in order[::-1]",
                "loop_body_end_line": 49,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 45,
                "header_start_line": 45,
                "header_str": "for y in children[x]",
                "loop_body_end_line": 48,
                "loop_body_start_line": 46,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 45
            },
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "for x in order[1:]",
                "loop_body_end_line": 62,
                "loop_body_start_line": 53,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for i in range(1, n)",
                "loop_body_end_line": 74,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "for j in children[i]",
                "loop_body_end_line": 70,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "while len(queue) > 0",
                "loop_body_end_line": 28,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": [
            [
                "n",
                3,
                0
            ],
            [
                "edge_list",
                3,
                1
            ]
        ]
    },
    "110": {
        "filepath": "code/codenet_p02728_s756563639_solve_3_75.py",
        "function_end_line": 84,
        "function_id": 110,
        "function_name": "main",
        "function_start_line": 76,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 79,
                "header_start_line": 79,
                "header_str": "for _ in range(n - 1)",
                "loop_body_end_line": 81,
                "loop_body_start_line": 80,
                "loop_statement_end_line": 81,
                "loop_statement_start_line": 79
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "for res in res_list",
                "loop_body_end_line": 84,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 84,
                "loop_statement_start_line": 83
            }
        ],
        "parameters": []
    },
    "111": {
        "filepath": "code/codenet_p02728_s756563639_solve_3_75.py",
        "function_end_line": 89,
        "function_id": 111,
        "function_name": "test",
        "function_start_line": 85,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "112": {
        "filepath": "code/codenet_p03229_s210948049_main_5_87.py",
        "function_end_line": 2,
        "function_id": 112,
        "function_name": "input",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "113": {
        "filepath": "code/codenet_p03229_s210948049_main_5_87.py",
        "function_end_line": 3,
        "function_id": 113,
        "function_name": "Z",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "114": {
        "filepath": "code/codenet_p03229_s210948049_main_5_87.py",
        "function_end_line": 4,
        "function_id": 114,
        "function_name": "ZZ",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "115": {
        "filepath": "code/codenet_p03229_s210948049_main_5_87.py",
        "function_end_line": 87,
        "function_id": 115,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "f1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "f2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "i1 == N-1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "i2 == N-1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "f1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "f2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "j1 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "j2 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "f1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "f2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 57,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "j1 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "j2 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "f1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 71,
                "true_branch_start_line": 71
            },
            {
                "condition_end_line": 72,
                "condition_start_line": 72,
                "condition_str": "f2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 73,
                "true_branch_start_line": 73
            },
            {
                "condition_end_line": 75,
                "condition_start_line": 75,
                "condition_str": "i1 == N-1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 77,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "i2 == N-1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 83,
                "true_branch_start_line": 82
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for _ in range(N)",
                "loop_body_end_line": 9,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 9,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "while f1 or f2",
                "loop_body_end_line": 47,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "while used[i1]",
                "loop_body_end_line": 24,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "while used[i2]",
                "loop_body_end_line": 30,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "while used[j1]",
                "loop_body_end_line": 40,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "while used[j2]",
                "loop_body_end_line": 46,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "while f1 or f2",
                "loop_body_end_line": 85,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "while used[j1]",
                "loop_body_end_line": 62,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 64,
                "header_start_line": 64,
                "header_str": "while used[j2]",
                "loop_body_end_line": 68,
                "loop_body_start_line": 65,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 64
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "while used[i1]",
                "loop_body_end_line": 78,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "while used[i2]",
                "loop_body_end_line": 84,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 84,
                "loop_statement_start_line": 80
            }
        ],
        "parameters": []
    },
    "116": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 7,
        "function_id": 116,
        "function_name": "LI",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "117": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 8,
        "function_id": 117,
        "function_name": "I",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "118": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 9,
        "function_id": 118,
        "function_name": "LS",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "119": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 14,
        "function_id": 119,
        "function_name": "S",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "res[-1] == \"\\n\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "120": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 16,
        "function_id": 120,
        "function_name": "IR",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "121": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 18,
        "function_id": 121,
        "function_name": "LIR",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                17,
                0
            ]
        ]
    },
    "122": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 20,
        "function_id": 122,
        "function_name": "SR",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                19,
                0
            ]
        ]
    },
    "123": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 22,
        "function_id": 123,
        "function_name": "LSR",
        "function_start_line": 21,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                21,
                0
            ]
        ]
    },
    "124": {
        "filepath": "code/codenet_p02644_s096334749_solve_26_122.py",
        "function_end_line": 122,
        "function_id": 124,
        "function_name": "solve",
        "function_start_line": 26,
        "if_statements": [
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "c[i][j+1] == \"@\"",
                "else_branch_end_line": 58,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "l < k",
                "else_branch_end_line": 58,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "c[i][j-1] == \"@\"",
                "else_branch_end_line": 69,
                "else_branch_start_line": 64,
                "true_branch_end_line": 63,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "l < k",
                "else_branch_end_line": 69,
                "else_branch_start_line": 68,
                "true_branch_end_line": 67,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "c[i+1][j] == \"@\"",
                "else_branch_end_line": 80,
                "else_branch_start_line": 75,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "l < k",
                "else_branch_end_line": 80,
                "else_branch_start_line": 79,
                "true_branch_end_line": 78,
                "true_branch_start_line": 78
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "c[i-1][j] == \"@\"",
                "else_branch_end_line": 91,
                "else_branch_start_line": 86,
                "true_branch_end_line": 85,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 88,
                "condition_start_line": 88,
                "condition_str": "l < k",
                "else_branch_end_line": 91,
                "else_branch_start_line": 90,
                "true_branch_end_line": 89,
                "true_branch_start_line": 89
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "(y,x) == (s,t)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 96,
                "true_branch_start_line": 95
            },
            {
                "condition_end_line": 99,
                "condition_start_line": 99,
                "condition_str": "i == 0",
                "else_branch_end_line": 106,
                "else_branch_start_line": 105,
                "true_branch_end_line": 100,
                "true_branch_start_line": 100
            },
            {
                "condition_end_line": 101,
                "condition_start_line": 101,
                "condition_str": "i == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 102,
                "true_branch_start_line": 102
            },
            {
                "condition_end_line": 103,
                "condition_start_line": 103,
                "condition_str": "i == 2",
                "else_branch_end_line": 106,
                "else_branch_start_line": 105,
                "true_branch_end_line": 104,
                "true_branch_start_line": 104
            },
            {
                "condition_end_line": 108,
                "condition_start_line": 108,
                "condition_str": "(y,x) == (ny,nx)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 109,
                "true_branch_start_line": 109
            },
            {
                "condition_end_line": 110,
                "condition_start_line": 110,
                "condition_str": "nd < d[ny][nx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 113,
                "true_branch_start_line": 111
            },
            {
                "condition_end_line": 114,
                "condition_start_line": 114,
                "condition_str": "p >= 0 and l > 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 120,
                "true_branch_start_line": 115
            },
            {
                "condition_end_line": 118,
                "condition_start_line": 118,
                "condition_str": "nd < d[ny][nx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 120,
                "true_branch_start_line": 119
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "for i in range(h)",
                "loop_body_end_line": 47,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for i in range(h)",
                "loop_body_end_line": 58,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 48
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for j in range(w-1)[::-1]",
                "loop_body_end_line": 58,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "for i in range(h)",
                "loop_body_end_line": 69,
                "loop_body_start_line": 60,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 59
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "for j in range(1,w)",
                "loop_body_end_line": 69,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 61
            },
            {
                "header_end_line": 70,
                "header_start_line": 70,
                "header_str": "for j in range(w)",
                "loop_body_end_line": 80,
                "loop_body_start_line": 71,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 70
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "for i in range(h-1)[::-1]",
                "loop_body_end_line": 80,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 81,
                "header_start_line": 81,
                "header_str": "for j in range(w)",
                "loop_body_end_line": 91,
                "loop_body_start_line": 82,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 81
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "for i in range(1,h)",
                "loop_body_end_line": 91,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 83
            },
            {
                "header_end_line": 98,
                "header_start_line": 98,
                "header_str": "for i in range(4)",
                "loop_body_end_line": 113,
                "loop_body_start_line": 99,
                "loop_statement_end_line": 113,
                "loop_statement_start_line": 98
            },
            {
                "header_end_line": 92,
                "header_start_line": 92,
                "header_str": "while q",
                "loop_body_end_line": 120,
                "loop_body_start_line": 93,
                "loop_statement_end_line": 120,
                "loop_statement_start_line": 92
            }
        ],
        "parameters": []
    },
    "125": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 5,
        "function_id": 125,
        "function_name": "LI",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "126": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 6,
        "function_id": 126,
        "function_name": "I",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "127": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 7,
        "function_id": 127,
        "function_name": "LS",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "128": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 8,
        "function_id": 128,
        "function_name": "S",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "129": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 10,
        "function_id": 129,
        "function_name": "IR",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                9,
                0
            ]
        ]
    },
    "130": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 12,
        "function_id": 130,
        "function_name": "LIR",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                11,
                0
            ]
        ]
    },
    "131": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 14,
        "function_id": 131,
        "function_name": "SR",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                13,
                0
            ]
        ]
    },
    "132": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 16,
        "function_id": 132,
        "function_name": "LSR",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "133": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 26,
        "function_id": 133,
        "function_name": "A",
        "function_start_line": 19,
        "if_statements": [
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "i == \"1\"",
                "else_branch_end_line": 25,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "for i in n",
                "loop_body_end_line": 25,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 21
            }
        ],
        "parameters": []
    },
    "134": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 33,
        "function_id": 134,
        "function_name": "B",
        "function_start_line": 27,
        "if_statements": [
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "i%111 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 31
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for i in range(n,1000)",
                "loop_body_end_line": 32,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 29
            }
        ],
        "parameters": []
    },
    "135": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 35,
        "function_id": 135,
        "function_name": "C",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "136": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 132,
        "function_id": 136,
        "function_name": "D",
        "function_start_line": 36,
        "if_statements": [
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "(abs(x-s)+abs(y-t))%2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "not (x+y)%2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "not ans",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "x < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 59,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "y < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "x[0]",
                "else_branch_end_line": 82,
                "else_branch_start_line": 80,
                "true_branch_end_line": 79,
                "true_branch_start_line": 78
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "p",
                "else_branch_end_line": 115,
                "else_branch_start_line": 100,
                "true_branch_end_line": 99,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 85,
                "condition_start_line": 85,
                "condition_str": "x[j]",
                "else_branch_end_line": 99,
                "else_branch_start_line": 93,
                "true_branch_end_line": 92,
                "true_branch_start_line": 86
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "y[j]",
                "else_branch_end_line": 92,
                "else_branch_start_line": 91,
                "true_branch_end_line": 90,
                "true_branch_start_line": 87
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "y[j]",
                "else_branch_end_line": 99,
                "else_branch_start_line": 97,
                "true_branch_end_line": 96,
                "true_branch_start_line": 95
            },
            {
                "condition_end_line": 101,
                "condition_start_line": 101,
                "condition_str": "y[j]",
                "else_branch_end_line": 115,
                "else_branch_start_line": 109,
                "true_branch_end_line": 108,
                "true_branch_start_line": 102
            },
            {
                "condition_end_line": 102,
                "condition_start_line": 102,
                "condition_str": "x[j]",
                "else_branch_end_line": 108,
                "else_branch_start_line": 107,
                "true_branch_end_line": 106,
                "true_branch_start_line": 103
            },
            {
                "condition_end_line": 110,
                "condition_start_line": 110,
                "condition_str": "x[j]",
                "else_branch_end_line": 115,
                "else_branch_start_line": 113,
                "true_branch_end_line": 112,
                "true_branch_start_line": 111
            },
            {
                "condition_end_line": 117,
                "condition_start_line": 117,
                "condition_str": "v[i][j] in [0,3]",
                "else_branch_end_line": 122,
                "else_branch_start_line": 120,
                "true_branch_end_line": 119,
                "true_branch_start_line": 118
            },
            {
                "condition_end_line": 118,
                "condition_start_line": 118,
                "condition_str": "f&1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 119,
                "true_branch_start_line": 119
            },
            {
                "condition_end_line": 121,
                "condition_start_line": 121,
                "condition_str": "f&2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 122,
                "true_branch_start_line": 122
            },
            {
                "condition_end_line": 127,
                "condition_start_line": 127,
                "condition_str": "len(ans) == 40",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 128,
                "true_branch_start_line": 128
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "for j in range(i)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 71,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "for _ in range(39-len(bx))",
                "loop_body_end_line": 68,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 67
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "for _ in range(39-len(by))",
                "loop_body_end_line": 70,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 70,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "for i in range(39)",
                "loop_body_end_line": 73,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 73,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 122,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 122,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "for j in range(1,39)",
                "loop_body_end_line": 115,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 115,
                "loop_statement_start_line": 83
            },
            {
                "header_end_line": 116,
                "header_start_line": 116,
                "header_str": "for j in range(39)",
                "loop_body_end_line": 122,
                "loop_body_start_line": 117,
                "loop_statement_end_line": 122,
                "loop_statement_start_line": 116
            },
            {
                "header_end_line": 126,
                "header_start_line": 126,
                "header_str": "for i in v",
                "loop_body_end_line": 131,
                "loop_body_start_line": 127,
                "loop_statement_end_line": 131,
                "loop_statement_start_line": 126
            },
            {
                "header_end_line": 129,
                "header_start_line": 129,
                "header_str": "for j in i",
                "loop_body_end_line": 130,
                "loop_body_start_line": 130,
                "loop_statement_end_line": 130,
                "loop_statement_start_line": 129
            }
        ],
        "parameters": []
    },
    "137": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 134,
        "function_id": 137,
        "function_name": "E",
        "function_start_line": 133,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "138": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 136,
        "function_id": 138,
        "function_name": "F",
        "function_start_line": 135,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "139": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 138,
        "function_id": 139,
        "function_name": "G",
        "function_start_line": 137,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "140": {
        "filepath": "code/codenet_p03245_s036954807_D_36_132.py",
        "function_end_line": 140,
        "function_id": 140,
        "function_name": "H",
        "function_start_line": 139,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "141": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 3,
        "function_id": 141,
        "function_name": "LI",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "142": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 4,
        "function_id": 142,
        "function_name": "LI_",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "143": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 5,
        "function_id": 143,
        "function_name": "LF",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "144": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 6,
        "function_id": 144,
        "function_name": "LS",
        "function_start_line": 6,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "145": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 7,
        "function_id": 145,
        "function_name": "I",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "146": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 8,
        "function_id": 146,
        "function_name": "F",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "147": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 9,
        "function_id": 147,
        "function_name": "S",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "148": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 10,
        "function_id": 148,
        "function_name": "pf",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                10,
                0
            ]
        ]
    },
    "149": {
        "filepath": "code/codenet_p01296_s857552563_main_11_90.py",
        "function_end_line": 90,
        "function_id": 149,
        "function_name": "main",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "n == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "di == 'x'",
                "else_branch_end_line": 39,
                "else_branch_start_line": 36,
                "true_branch_end_line": 35,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "d[(ni,nj)] > 0 and d[(ni,nj)] != dt",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "v[k]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 76,
                "condition_start_line": 76,
                "condition_str": "s1 & s2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 78,
                "true_branch_start_line": 77
            },
            {
                "condition_end_line": 79,
                "condition_start_line": 79,
                "condition_str": "f",
                "else_branch_end_line": 85,
                "else_branch_start_line": 84,
                "true_branch_end_line": 83,
                "true_branch_start_line": 80
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "f",
                "else_branch_end_line": 89,
                "else_branch_start_line": 88,
                "true_branch_end_line": 87,
                "true_branch_start_line": 87
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "for _ in range(n)",
                "loop_body_end_line": 24,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 24,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 39,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "for x,y in list(d.keys())",
                "loop_body_end_line": 48,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "for di,dj in dd",
                "loop_body_end_line": 48,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for k in dka",
                "loop_body_end_line": 85,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 62,
                "header_start_line": 62,
                "header_str": "for k in na",
                "loop_body_end_line": 64,
                "loop_body_start_line": 63,
                "loop_statement_end_line": 64,
                "loop_statement_start_line": 62
            },
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "for k in na",
                "loop_body_end_line": 71,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 69
            },
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "for k in s1",
                "loop_body_end_line": 81,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 81,
                "loop_statement_start_line": 80
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "for k in s2",
                "loop_body_end_line": 83,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 82
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "while True",
                "loop_body_end_line": 89,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "while ns1 or ns2",
                "loop_body_end_line": 78,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 78,
                "loop_statement_start_line": 58
            }
        ],
        "parameters": []
    },
    "150": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 7,
        "function_id": 150,
        "function_name": "LI",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "151": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 8,
        "function_id": 151,
        "function_name": "I",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "152": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 9,
        "function_id": 152,
        "function_name": "LS",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "153": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 14,
        "function_id": 153,
        "function_name": "S",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "res[-1] == \"\\n\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "154": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 16,
        "function_id": 154,
        "function_name": "IR",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "155": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 18,
        "function_id": 155,
        "function_name": "LIR",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                17,
                0
            ]
        ]
    },
    "156": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 20,
        "function_id": 156,
        "function_name": "SR",
        "function_start_line": 19,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                19,
                0
            ]
        ]
    },
    "157": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 22,
        "function_id": 157,
        "function_name": "LSR",
        "function_start_line": 21,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                21,
                0
            ]
        ]
    },
    "158": {
        "filepath": "code/codenet_p02962_s903942351_solve_24_113.py",
        "function_end_line": 113,
        "function_id": 158,
        "function_name": "solve",
        "function_start_line": 24,
        "if_statements": [
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "i < rs",
                "else_branch_end_line": 61,
                "else_branch_start_line": 60,
                "true_branch_end_line": 59,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 79,
                "condition_start_line": 79,
                "condition_str": "not ss[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 80
            },
            {
                "condition_end_line": 92,
                "condition_start_line": 92,
                "condition_str": "(h1,h2) == (k1,k2)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 94,
                "true_branch_start_line": 93
            },
            {
                "condition_end_line": 109,
                "condition_start_line": 109,
                "condition_str": "l == ns+1",
                "else_branch_end_line": 112,
                "else_branch_start_line": 111,
                "true_branch_end_line": 110,
                "true_branch_start_line": 110
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 31,
                "header_start_line": 31,
                "header_str": "for i in range(26)",
                "loop_body_end_line": 32,
                "loop_body_start_line": 32,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 31
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "for i in range(ns)",
                "loop_body_end_line": 34,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for i in range(nt)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "for i in range(ns)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "for i in range(nt)",
                "loop_body_end_line": 75,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 78,
                "header_start_line": 78,
                "header_str": "for i in range(ns)",
                "loop_body_end_line": 89,
                "loop_body_start_line": 79,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 78
            },
            {
                "header_end_line": 91,
                "header_start_line": 91,
                "header_str": "for j in range(rs,ns+rs)",
                "loop_body_end_line": 106,
                "loop_body_start_line": 92,
                "loop_statement_end_line": 108,
                "loop_statement_start_line": 91
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "while r > l+1",
                "loop_body_end_line": 108,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 108,
                "loop_statement_start_line": 50
            }
        ],
        "parameters": []
    },
    "159": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 7,
        "function_id": 159,
        "function_name": "LI",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "160": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 8,
        "function_id": 160,
        "function_name": "I",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "161": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 9,
        "function_id": 161,
        "function_name": "LS",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "162": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 10,
        "function_id": 162,
        "function_name": "S",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "163": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 12,
        "function_id": 163,
        "function_name": "IR",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                11,
                0
            ]
        ]
    },
    "164": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 14,
        "function_id": 164,
        "function_name": "LIR",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                13,
                0
            ]
        ]
    },
    "165": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 16,
        "function_id": 165,
        "function_name": "SR",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                15,
                0
            ]
        ]
    },
    "166": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 18,
        "function_id": 166,
        "function_name": "LSR",
        "function_start_line": 17,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "n",
                17,
                0
            ]
        ]
    },
    "167": {
        "filepath": "code/codenet_p02976_s161983709_B_32_105.py",
        "function_end_line": 31,
        "function_id": 167,
        "function_name": "A",
        "function_start_line": 21,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "not ans",
                "else_branch_end_line": 30,
                "else_branch_start_line": 29,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "for i in a",
                "loop_body_end_line": 26,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 25
            }
        ],
        "parameters": []
    },
    "168": {
        "filepath": "code/codenet_p02976_s161983709_B_32_103.py",
        "function_end_line": 105,
        "function_id": 168,
        "function_name": "B",
        "function_start_line": 32,
        "if_statements": [
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "dic[(x,y)]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 59,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "bfs[y]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "s",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 99,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "len(s)%2",
                "else_branch_end_line": 99,
                "else_branch_start_line": 82,
                "true_branch_end_line": 81,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "d[x]",
                "else_branch_end_line": 81,
                "else_branch_start_line": 71,
                "true_branch_end_line": 70,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "not d[x]",
                "else_branch_end_line": 99,
                "else_branch_start_line": 89,
                "true_branch_end_line": 88,
                "true_branch_start_line": 84
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "sum(d)",
                "else_branch_end_line": 104,
                "else_branch_start_line": 102,
                "true_branch_end_line": 101,
                "true_branch_start_line": 101
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for _ in range(n)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "for i in range(m)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "for y in v[x]",
                "loop_body_end_line": 62,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "for y in s",
                "loop_body_end_line": 69,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 66
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "for y in s[:-1]",
                "loop_body_end_line": 75,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "for y in s",
                "loop_body_end_line": 87,
                "loop_body_start_line": 85,
                "loop_statement_end_line": 87,
                "loop_statement_start_line": 84
            },
            {
                "header_end_line": 90,
                "header_start_line": 90,
                "header_str": "for y in s[:-1]",
                "loop_body_end_line": 93,
                "loop_body_start_line": 91,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 90
            },
            {
                "header_end_line": 103,
                "header_start_line": 103,
                "header_str": "for i,j in ans",
                "loop_body_end_line": 104,
                "loop_body_start_line": 104,
                "loop_statement_end_line": 104,
                "loop_statement_start_line": 103
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "while q",
                "loop_body_end_line": 99,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 99,
                "loop_statement_start_line": 54
            }
        ],
        "parameters": []
    },
    "169": {
        "filepath": "code/codenet_p02976_s161983709_B_32_103.py",
        "function_end_line": 145,
        "function_id": 169,
        "function_name": "C",
        "function_start_line": 106,
        "if_statements": [
            {
                "condition_end_line": 109,
                "condition_start_line": 109,
                "condition_str": "n in p",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 111,
                "true_branch_start_line": 110
            },
            {
                "condition_end_line": 112,
                "condition_start_line": 112,
                "condition_str": "n+1 in p",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 116,
                "true_branch_start_line": 113
            },
            {
                "condition_end_line": 132,
                "condition_start_line": 132,
                "condition_str": "n%2",
                "else_branch_end_line": 144,
                "else_branch_start_line": 136,
                "true_branch_end_line": 135,
                "true_branch_start_line": 133
            },
            {
                "condition_end_line": 139,
                "condition_start_line": 139,
                "condition_str": "p[i]&n",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 140,
                "true_branch_start_line": 140
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 114,
                "header_start_line": 114,
                "header_str": "for i in range(1,2*n)",
                "loop_body_end_line": 115,
                "loop_body_start_line": 115,
                "loop_statement_end_line": 115,
                "loop_statement_start_line": 114
            },
            {
                "header_end_line": 118,
                "header_start_line": 118,
                "header_str": "for i in range(1,3)",
                "loop_body_end_line": 119,
                "loop_body_start_line": 119,
                "loop_statement_end_line": 119,
                "loop_statement_start_line": 118
            },
            {
                "header_end_line": 121,
                "header_start_line": 121,
                "header_str": "for i in range(1,3)",
                "loop_body_end_line": 122,
                "loop_body_start_line": 122,
                "loop_statement_end_line": 122,
                "loop_statement_start_line": 121
            },
            {
                "header_end_line": 125,
                "header_start_line": 125,
                "header_str": "for i in range(2,n//2+n%2)",
                "loop_body_end_line": 131,
                "loop_body_start_line": 126,
                "loop_statement_end_line": 131,
                "loop_statement_start_line": 125
            },
            {
                "header_end_line": 134,
                "header_start_line": 134,
                "header_str": "for i,j in ans",
                "loop_body_end_line": 135,
                "loop_body_start_line": 135,
                "loop_statement_end_line": 135,
                "loop_statement_start_line": 134
            },
            {
                "header_end_line": 138,
                "header_start_line": 138,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 140,
                "loop_body_start_line": 139,
                "loop_statement_end_line": 140,
                "loop_statement_start_line": 138
            },
            {
                "header_end_line": 143,
                "header_start_line": 143,
                "header_str": "for i,j in ans",
                "loop_body_end_line": 144,
                "loop_body_start_line": 144,
                "loop_statement_end_line": 144,
                "loop_statement_start_line": 143
            }
        ],
        "parameters": []
    },
    "170": {
        "filepath": "code/codenet_p02976_s161983709_B_32_103.py",
        "function_end_line": 148,
        "function_id": 170,
        "function_name": "D",
        "function_start_line": 146,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "171": {
        "filepath": "code/codenet_p02976_s161983709_B_32_103.py",
        "function_end_line": 151,
        "function_id": 171,
        "function_name": "E",
        "function_start_line": 149,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "172": {
        "filepath": "code/codenet_p02976_s161983709_B_32_103.py",
        "function_end_line": 154,
        "function_id": 172,
        "function_name": "F",
        "function_start_line": 152,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "173": {
        "filepath": "code/codenet_p02851_s504476032_solve_2_26.py",
        "function_end_line": 26,
        "function_id": 173,
        "function_name": "solve",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "len(r_list) == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "j < len(r_list) - 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "j == len(r_list) - 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 7,
                "header_start_line": 7,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 10,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 7
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for r in res_dict.keys()",
                "loop_body_end_line": 25,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "while i < len(r_list) - 1",
                "loop_body_end_line": 25,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "while r_list[j + 1] - r_list[i] < k",
                "loop_body_end_line": 23,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 20
            }
        ],
        "parameters": [
            [
                "k",
                2,
                1
            ],
            [
                "a_list",
                2,
                2
            ],
            [
                "n",
                2,
                0
            ]
        ]
    },
    "174": {
        "filepath": "code/codenet_p02851_s504476032_solve_2_26.py",
        "function_end_line": 31,
        "function_id": 174,
        "function_name": "main",
        "function_start_line": 27,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "175": {
        "filepath": "code/codenet_p02851_s504476032_solve_2_26.py",
        "function_end_line": 35,
        "function_id": 175,
        "function_name": "test",
        "function_start_line": 32,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "176": {
        "filepath": "code/codenet_p02914_s083653507_solve_9_54.py",
        "function_end_line": 5,
        "function_id": 176,
        "function_name": "inp",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "177": {
        "filepath": "code/codenet_p02914_s083653507_solve_9_54.py",
        "function_end_line": 8,
        "function_id": 177,
        "function_name": "dprint",
        "function_start_line": 6,
        "if_statements": [
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "DEBUG",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "178": {
        "filepath": "code/codenet_p02914_s083653507_solve_9_54.py",
        "function_end_line": 54,
        "function_id": 178,
        "function_name": "solve",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "allxor & mask",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "b1 ^ full_bit in r2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "bestb == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 51
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for a in A",
                "loop_body_end_line": 12,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for bit in range(61, -1, -1)",
                "loop_body_end_line": 53,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 28,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for b in blist1",
                "loop_body_end_line": 37,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "for c in list(r1)",
                "loop_body_end_line": 37,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 37,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "for b in blist2",
                "loop_body_end_line": 41,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 41,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "for c in list(r2)",
                "loop_body_end_line": 41,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 41,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "for b1 in r1",
                "loop_body_end_line": 46,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 43
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 52,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 51
            }
        ],
        "parameters": [
            [
                "A",
                9,
                1
            ],
            [
                "N",
                9,
                0
            ]
        ]
    },
    "179": {
        "filepath": "code/codenet_p02914_s083653507_solve_9_54.py",
        "function_end_line": 58,
        "function_id": 179,
        "function_name": "main",
        "function_start_line": 55,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "180": {
        "filepath": "code/codenet_p02564_s385833731_scc_2_46.py",
        "function_end_line": 46,
        "function_id": 180,
        "function_name": "scc",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "v in done",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "f",
                "else_branch_end_line": 27,
                "else_branch_start_line": 26,
                "true_branch_end_line": 25,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "v in done",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "u in done",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "v in done",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for u, e in g.items()",
                "loop_body_end_line": 10,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for v in e",
                "loop_body_end_line": 10,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for v in V",
                "loop_body_end_line": 27,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "for v in g[u]",
                "loop_body_end_line": 25,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "for v in rg[u]",
                "loop_body_end_line": 44,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "while s",
                "loop_body_end_line": 27,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "while o",
                "loop_body_end_line": 45,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "while s",
                "loop_body_end_line": 44,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 37
            }
        ],
        "parameters": [
            [
                "g",
                2,
                0
            ]
        ]
    },
    "181": {
        "filepath": "code/codenet_p02564_s385833731_scc_2_46.py",
        "function_end_line": 55,
        "function_id": 181,
        "function_name": "atcoder_practice2_g",
        "function_start_line": 47,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for _ in range(M)",
                "loop_body_end_line": 52,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for r in vv",
                "loop_body_end_line": 55,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 54
            }
        ],
        "parameters": []
    },
    "182": {
        "filepath": "code/codenet_p02564_s385833731_scc_2_46.py",
        "function_end_line": 71,
        "function_id": 182,
        "function_name": "test",
        "function_start_line": 56,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 70,
                "header_start_line": 70,
                "header_str": "for r in vv",
                "loop_body_end_line": 71,
                "loop_body_start_line": 71,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 70
            }
        ],
        "parameters": []
    },
    "183": {
        "filepath": "code/codenet_p00223_s844623574_search_2_34.py",
        "function_end_line": 34,
        "function_id": 183,
        "function_name": "search",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "mp[ty + dty][tx + dtx] == 0",
                "else_branch_end_line": 17,
                "else_branch_start_line": 15,
                "true_branch_end_line": 14,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "mp[ky + dky][kx + dkx] == 0",
                "else_branch_end_line": 23,
                "else_branch_start_line": 21,
                "true_branch_end_line": 20,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "(ntx, nty, nkx, nky) not in dic",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(ntx, nty) == (nkx, nky)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "dist + 1 >= 100",
                "else_branch_end_line": 29,
                "else_branch_start_line": 28,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for dtx, dty, dkx, dky in direct",
                "loop_body_end_line": 32,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "while que",
                "loop_body_end_line": 32,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 8
            }
        ],
        "parameters": [
            [
                "mp",
                2,
                4
            ],
            [
                "ky",
                2,
                3
            ],
            [
                "tx",
                2,
                0
            ],
            [
                "ty",
                2,
                1
            ],
            [
                "kx",
                2,
                2
            ]
        ]
    },
    "184": {
        "filepath": "code/codenet_p00223_s844623574_search_2_34.py",
        "function_end_line": 45,
        "function_id": 184,
        "function_name": "main",
        "function_start_line": 35,
        "if_statements": [
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "w == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 39
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "while True",
                "loop_body_end_line": 45,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": []
    },
    "185": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 8,
        "function_id": 185,
        "function_name": "LI",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "186": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 9,
        "function_id": 186,
        "function_name": "I",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "187": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 10,
        "function_id": 187,
        "function_name": "LS",
        "function_start_line": 10,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "188": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 11,
        "function_id": 188,
        "function_name": "S",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "189": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 15,
        "function_id": 189,
        "function_name": "IR",
        "function_start_line": 12,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 14,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 14
            }
        ],
        "parameters": [
            [
                "n",
                12,
                0
            ]
        ]
    },
    "190": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 19,
        "function_id": 190,
        "function_name": "LIR",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 18,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 18,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": [
            [
                "n",
                16,
                0
            ]
        ]
    },
    "191": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 23,
        "function_id": 191,
        "function_name": "SR",
        "function_start_line": 20,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 22,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 22
            }
        ],
        "parameters": [
            [
                "n",
                20,
                0
            ]
        ]
    },
    "192": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 27,
        "function_id": 192,
        "function_name": "LSR",
        "function_start_line": 24,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 26,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 26,
                "loop_statement_start_line": 26
            }
        ],
        "parameters": [
            [
                "n",
                24,
                0
            ]
        ]
    },
    "193": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 48,
        "function_id": 193,
        "function_name": "A",
        "function_start_line": 30,
        "if_statements": [
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "b[j] > j+1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "b[j] == j+1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 47,
                "header_start_line": 47,
                "header_str": "for i in ans[::-1]",
                "loop_body_end_line": 48,
                "loop_body_start_line": 48,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 47
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "while b",
                "loop_body_end_line": 46,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "while j >= 0",
                "loop_body_end_line": 46,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 38
            }
        ],
        "parameters": []
    },
    "194": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 72,
        "function_id": 194,
        "function_name": "B",
        "function_start_line": 49,
        "if_statements": [
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "n%2",
                "else_branch_end_line": 72,
                "else_branch_start_line": 62,
                "true_branch_end_line": 61,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "j != n-i and j != i",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "j != n+1-i and j != i",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 67,
                "true_branch_start_line": 67
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for i in range(1,n+1)",
                "loop_body_end_line": 56,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for j in range(1,n+1)",
                "loop_body_end_line": 56,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "for i in ans",
                "loop_body_end_line": 61,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 60
            },
            {
                "header_end_line": 64,
                "header_start_line": 64,
                "header_str": "for i in range(1,n+1)",
                "loop_body_end_line": 67,
                "loop_body_start_line": 65,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 64
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for j in range(1,n+1)",
                "loop_body_end_line": 67,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 71,
                "header_start_line": 71,
                "header_str": "for i in ans",
                "loop_body_end_line": 72,
                "loop_body_start_line": 72,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 71
            }
        ],
        "parameters": []
    },
    "195": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 74,
        "function_id": 195,
        "function_name": "C",
        "function_start_line": 73,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "196": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 161,
        "function_id": 196,
        "function_name": "D",
        "function_start_line": 75,
        "if_statements": [
            {
                "condition_end_line": 95,
                "condition_start_line": 95,
                "condition_str": "f[p[j+1]] != f[p[j]]+1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 96,
                "true_branch_start_line": 96
            },
            {
                "condition_end_line": 108,
                "condition_start_line": 108,
                "condition_str": "c == 0",
                "else_branch_end_line": 153,
                "else_branch_start_line": 131,
                "true_branch_end_line": 130,
                "true_branch_start_line": 109
            },
            {
                "condition_end_line": 110,
                "condition_start_line": 110,
                "condition_str": "d[i] != ld[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 130,
                "true_branch_start_line": 111
            },
            {
                "condition_end_line": 113,
                "condition_start_line": 113,
                "condition_str": "j > i",
                "else_branch_end_line": 130,
                "else_branch_start_line": 122,
                "true_branch_end_line": 121,
                "true_branch_start_line": 114
            },
            {
                "condition_end_line": 133,
                "condition_start_line": 133,
                "condition_str": "d[i] != ld[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 153,
                "true_branch_start_line": 134
            },
            {
                "condition_end_line": 136,
                "condition_start_line": 136,
                "condition_str": "j > i",
                "else_branch_end_line": 153,
                "else_branch_start_line": 145,
                "true_branch_end_line": 144,
                "true_branch_start_line": 137
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 81,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 81,
                "loop_statement_start_line": 80
            },
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "for i in pf",
                "loop_body_end_line": 85,
                "loop_body_start_line": 85,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 84
            },
            {
                "header_end_line": 86,
                "header_start_line": 86,
                "header_str": "for c in range(2)",
                "loop_body_end_line": 160,
                "loop_body_start_line": 87,
                "loop_statement_end_line": 160,
                "loop_statement_start_line": 86
            },
            {
                "header_end_line": 102,
                "header_start_line": 102,
                "header_str": "for i in range(m)",
                "loop_body_end_line": 103,
                "loop_body_start_line": 103,
                "loop_statement_end_line": 103,
                "loop_statement_start_line": 102
            },
            {
                "header_end_line": 106,
                "header_start_line": 106,
                "header_str": "for i in d",
                "loop_body_end_line": 107,
                "loop_body_start_line": 107,
                "loop_statement_end_line": 107,
                "loop_statement_start_line": 106
            },
            {
                "header_end_line": 109,
                "header_start_line": 109,
                "header_str": "for i in range(m)[::-1]",
                "loop_body_end_line": 130,
                "loop_body_start_line": 110,
                "loop_statement_end_line": 130,
                "loop_statement_start_line": 109
            },
            {
                "header_end_line": 115,
                "header_start_line": 115,
                "header_str": "for o in range(i+1,j+1)",
                "loop_body_end_line": 116,
                "loop_body_start_line": 116,
                "loop_statement_end_line": 116,
                "loop_statement_start_line": 115
            },
            {
                "header_end_line": 124,
                "header_start_line": 124,
                "header_str": "for o in range(j,i)",
                "loop_body_end_line": 125,
                "loop_body_start_line": 125,
                "loop_statement_end_line": 125,
                "loop_statement_start_line": 124
            },
            {
                "header_end_line": 132,
                "header_start_line": 132,
                "header_str": "for i in range(m)[::-1]",
                "loop_body_end_line": 153,
                "loop_body_start_line": 133,
                "loop_statement_end_line": 153,
                "loop_statement_start_line": 132
            },
            {
                "header_end_line": 138,
                "header_start_line": 138,
                "header_str": "for o in range(i+1,j+1)",
                "loop_body_end_line": 139,
                "loop_body_start_line": 139,
                "loop_statement_end_line": 139,
                "loop_statement_start_line": 138
            },
            {
                "header_end_line": 147,
                "header_start_line": 147,
                "header_str": "for o in range(j,i)",
                "loop_body_end_line": 148,
                "loop_body_start_line": 148,
                "loop_statement_end_line": 148,
                "loop_statement_start_line": 147
            },
            {
                "header_end_line": 156,
                "header_start_line": 156,
                "header_str": "for i in range(len(d))",
                "loop_body_end_line": 159,
                "loop_body_start_line": 157,
                "loop_statement_end_line": 159,
                "loop_statement_start_line": 156
            },
            {
                "header_end_line": 157,
                "header_start_line": 157,
                "header_str": "for j in range(len(d[i]))",
                "loop_body_end_line": 158,
                "loop_body_start_line": 158,
                "loop_statement_end_line": 158,
                "loop_statement_start_line": 157
            },
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "while l != p",
                "loop_body_end_line": 159,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 159,
                "loop_statement_start_line": 89
            },
            {
                "header_end_line": 92,
                "header_start_line": 92,
                "header_str": "while i < n",
                "loop_body_end_line": 99,
                "loop_body_start_line": 93,
                "loop_statement_end_line": 99,
                "loop_statement_start_line": 92
            },
            {
                "header_end_line": 94,
                "header_start_line": 94,
                "header_str": "while j < n-1",
                "loop_body_end_line": 97,
                "loop_body_start_line": 95,
                "loop_statement_end_line": 97,
                "loop_statement_start_line": 94
            }
        ],
        "parameters": []
    },
    "197": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 163,
        "function_id": 197,
        "function_name": "E",
        "function_start_line": 162,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "198": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 165,
        "function_id": 198,
        "function_name": "F",
        "function_start_line": 164,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "199": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 167,
        "function_id": 199,
        "function_name": "G",
        "function_start_line": 166,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "200": {
        "filepath": "code/codenet_p03092_s177869771_D_75_161.py",
        "function_end_line": 169,
        "function_id": 200,
        "function_name": "H",
        "function_start_line": 168,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "201": {
        "filepath": "code/gcj_104e03_10b46d_solve_2_92.py",
        "function_end_line": 92,
        "function_id": 201,
        "function_name": "solve",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 4,
                "condition_start_line": 4,
                "condition_str": "R > C",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 5
            },
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "R == 2 and C == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 10,
                "true_branch_start_line": 10
            },
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "R == 2 and C == 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 12,
                "true_branch_start_line": 12
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "R == 2 and C == 4",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "R == 3 and C == 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "R == 3 and C == 4",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "R == 4 and C == 4",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "R == 2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 63,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "C != 6",
                "else_branch_end_line": 62,
                "else_branch_start_line": 58,
                "true_branch_end_line": 57,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "R == 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 75,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "C != 6",
                "else_branch_end_line": 89,
                "else_branch_start_line": 85,
                "true_branch_end_line": 84,
                "true_branch_start_line": 81
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for move in flippedmoves",
                "loop_body_end_line": 7,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 7,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for c in range(3, C+1)",
                "loop_body_end_line": 52,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 52,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for c in range(3, C+1)",
                "loop_body_end_line": 68,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "for c in range(3, C+1)",
                "loop_body_end_line": 79,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 90,
                "header_start_line": 90,
                "header_str": "for move in prevmoves",
                "loop_body_end_line": 91,
                "loop_body_start_line": 91,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 90
            }
        ],
        "parameters": [
            [
                "R",
                2,
                0
            ],
            [
                "C",
                2,
                1
            ]
        ]
    },
    "202": {
        "filepath": "code/gcj_104e03_10b46d_solve_2_92.py",
        "function_end_line": 102,
        "function_id": 202,
        "function_name": "invalid",
        "function_start_line": 93,
        "if_statements": [
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "pt1[0] == pt2[0]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 95,
                "true_branch_start_line": 95
            },
            {
                "condition_end_line": 96,
                "condition_start_line": 96,
                "condition_str": "pt1[1] == pt2[1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 97,
                "true_branch_start_line": 97
            },
            {
                "condition_end_line": 98,
                "condition_start_line": 98,
                "condition_str": "pt1[0] - pt1[1] == pt2[0] - pt2[1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 99,
                "true_branch_start_line": 99
            },
            {
                "condition_end_line": 100,
                "condition_start_line": 100,
                "condition_str": "pt1[0] + pt1[1] == pt2[0] + pt2[1]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 101,
                "true_branch_start_line": 101
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "pt2",
                93,
                1
            ],
            [
                "pt1",
                93,
                0
            ]
        ]
    },
    "203": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 25,
        "function_id": 203,
        "function_name": "solve",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "verdict != 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for i in [50, 200]",
                "loop_body_end_line": 7,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 7,
                "loop_statement_start_line": 4
            },
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for i in xrange(w-2)",
                "loop_body_end_line": 11,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 8
            }
        ],
        "parameters": [
            [
                "f",
                2,
                0
            ],
            [
                "w",
                2,
                1
            ]
        ]
    },
    "204": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 28,
        "function_id": 204,
        "function_name": "__init__",
        "function_start_line": 27,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                27,
                0
            ]
        ]
    },
    "205": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 30,
        "function_id": 205,
        "function_name": "__readline",
        "function_start_line": 29,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                29,
                0
            ]
        ]
    },
    "206": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 31,
        "function_id": 206,
        "function_name": "read_int",
        "function_start_line": 31,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                31,
                0
            ]
        ]
    },
    "207": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 32,
        "function_id": 207,
        "function_name": "read_float",
        "function_start_line": 32,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                32,
                0
            ]
        ]
    },
    "208": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 33,
        "function_id": 208,
        "function_name": "read_long",
        "function_start_line": 33,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                33,
                0
            ]
        ]
    },
    "209": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 34,
        "function_id": 209,
        "function_name": "read_decimal",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                34,
                0
            ]
        ]
    },
    "210": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 35,
        "function_id": 210,
        "function_name": "read_str",
        "function_start_line": 35,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                35,
                0
            ]
        ]
    },
    "211": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 36,
        "function_id": 211,
        "function_name": "read_int_list",
        "function_start_line": 36,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                36,
                0
            ]
        ]
    },
    "212": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 37,
        "function_id": 212,
        "function_name": "read_float_list",
        "function_start_line": 37,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                37,
                0
            ]
        ]
    },
    "213": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 38,
        "function_id": 213,
        "function_name": "read_long_list",
        "function_start_line": 38,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                38,
                0
            ]
        ]
    },
    "214": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 39,
        "function_id": 214,
        "function_name": "read_decimal_list",
        "function_start_line": 39,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                39,
                0
            ]
        ]
    },
    "215": {
        "filepath": "code/gcj_122837_12d0b6_solve_2_25.py",
        "function_end_line": 40,
        "function_id": 215,
        "function_name": "read_str_list",
        "function_start_line": 40,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                40,
                0
            ]
        ]
    },
    "216": {
        "filepath": "code/gcj_12295c_129f83_get_next_location_1_64.py",
        "function_end_line": 64,
        "function_id": 216,
        "function_name": "get_next_location",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(dir == \"N\")",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(dir == \"S\")",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(dir == \"E\")",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(dir == \"W\")",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "(coordinates == dest)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 30
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "(found == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "(dest_count_idx == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "(dest_count == highest_count)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "(dest_count > highest_count)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 52,
                "condition_start_line": 52,
                "condition_str": "(len(popular_next_dest) == 1)",
                "else_branch_end_line": 64,
                "else_branch_start_line": 54,
                "true_branch_end_line": 53,
                "true_branch_start_line": 53
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "(dest_idx == 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "(dest < smallest_number)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "for coordinates in coordinates_list ",
                "loop_body_end_line": 36,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 25
            },
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "for dest in next_dest ",
                "loop_body_end_line": 33,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 28
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "for dest_count in next_dest_count ",
                "loop_body_end_line": 51,
                "loop_body_start_line": 42,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "for dest in popular_next_dest ",
                "loop_body_end_line": 63,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 63,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "while people_count <= num_of_people ",
                "loop_body_end_line": 22,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 22,
                "loop_statement_start_line": 4
            }
        ],
        "parameters": [
            [
                "num_of_people",
                1,
                0
            ]
        ]
    },
    "217": {
        "filepath": "code/gcj_12295c_129f83_get_next_location_1_64.py",
        "function_end_line": 76,
        "function_id": 217,
        "function_name": "generate_test_cases",
        "function_start_line": 65,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 67,
                "header_start_line": 67,
                "header_str": "while count <= T ",
                "loop_body_end_line": 76,
                "loop_body_start_line": 68,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 67
            }
        ],
        "parameters": [
            [
                "T",
                65,
                0
            ]
        ]
    },
    "218": {
        "filepath": "code/gcj_134c90_13f1c6_solve_33_94.py",
        "function_end_line": 32,
        "function_id": 218,
        "function_name": "isCycleCorrect",
        "function_start_line": 6,
        "if_statements": [
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "C[i][pos % L[i]] != ans[pos % la]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "debug",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 14,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('R', 'S')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('S', 'R')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('R', 'P')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('P', 'R')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('P', 'S')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(C[i][pos % L[i]], ans[pos % la]) == ('S', 'P')",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for i in range(A)",
                "loop_body_end_line": 31,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "while (isThereAWinner == False) and (pos < L[i] * la)",
                "loop_body_end_line": 30,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 11
            }
        ],
        "parameters": [
            [
                "L",
                6,
                2
            ],
            [
                "C",
                6,
                1
            ],
            [
                "ans",
                6,
                3
            ],
            [
                "A",
                6,
                0
            ]
        ]
    },
    "219": {
        "filepath": "code/gcj_134c90_13f1c6_solve_33_94.py",
        "function_end_line": 94,
        "function_id": 219,
        "function_name": "solve",
        "function_start_line": 33,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "debug",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "not any(isAlive)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "isAlive[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "C[i][pos % L[i]] == 'R'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "C[i][pos % L[i]] == 'S'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "C[i][pos % L[i]] == 'P'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "possibilities['R'] + possibilities['S'] + possibilities['P'] == 3",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "debug",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 64
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "(r, s, p) == (1, 0, 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 68,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "(r, s, p) == (0, 1, 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 72,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "(r, s, p) == (0, 0, 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 74
            },
            {
                "condition_end_line": 77,
                "condition_start_line": 77,
                "condition_str": "len(ans) == 500",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 81,
                "true_branch_start_line": 78
            },
            {
                "condition_end_line": 79,
                "condition_start_line": 79,
                "condition_str": "debug",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 80
            },
            {
                "condition_end_line": 82,
                "condition_start_line": 82,
                "condition_str": "(r, s, p) == (1, 1, 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 85,
                "true_branch_start_line": 83
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "(r, s, p) == (1, 0, 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 89,
                "true_branch_start_line": 87
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "(r, s, p) == (0, 1, 1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 91
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for i in range(A)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "for i in predS",
                "loop_body_end_line": 84,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 84,
                "loop_statement_start_line": 83
            },
            {
                "header_end_line": 87,
                "header_start_line": 87,
                "header_str": "for i in predR",
                "loop_body_end_line": 88,
                "loop_body_start_line": 88,
                "loop_statement_end_line": 88,
                "loop_statement_start_line": 87
            },
            {
                "header_end_line": 91,
                "header_start_line": 91,
                "header_str": "for i in predP",
                "loop_body_end_line": 92,
                "loop_body_start_line": 92,
                "loop_statement_end_line": 92,
                "loop_statement_start_line": 91
            },
            {
                "header_end_line": 37,
                "header_start_line": 37,
                "header_str": "while True",
                "loop_body_end_line": 94,
                "loop_body_start_line": 38,
                "loop_statement_end_line": 94,
                "loop_statement_start_line": 37
            }
        ],
        "parameters": [
            [
                "L",
                33,
                2
            ],
            [
                "A",
                33,
                0
            ],
            [
                "C",
                33,
                1
            ]
        ]
    },
    "220": {
        "filepath": "code/gcj_134e91_13d720_run_test_8_54.py",
        "function_end_line": 4,
        "function_id": 220,
        "function_name": "printf",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                2,
                0
            ]
        ]
    },
    "221": {
        "filepath": "code/gcj_134e91_13d720_run_test_8_54.py",
        "function_end_line": 7,
        "function_id": 221,
        "function_name": "get",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "222": {
        "filepath": "code/gcj_134e91_13d720_run_test_8_54.py",
        "function_end_line": 54,
        "function_id": 222,
        "function_name": "run_test",
        "function_start_line": 8,
        "if_statements": [
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "'A' in sol",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "'B' in sol",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "'C' in sol",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "'D' in sol",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "'E' in sol",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "found['A'] >= 24",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "found['B'] >= 24",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "found['C'] >= 24",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "found['D'] >= 24",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "found['E'] >= 24",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "len(exclude) == 1",
                "else_branch_end_line": 53,
                "else_branch_start_line": 48,
                "true_branch_end_line": 47,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for i in xrange(1,5)",
                "loop_body_end_line": 53,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "for j in xrange(118)",
                "loop_body_end_line": 34,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 30
            }
        ],
        "parameters": [
            [
                "F",
                8,
                0
            ]
        ]
    },
    "223": {
        "filepath": "code/gcj_146184_14cce5_solve_9_74.py",
        "function_end_line": 8,
        "function_id": 223,
        "function_name": "inputInts",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "224": {
        "filepath": "code/gcj_146184_14cce5_solve_9_74.py",
        "function_end_line": 74,
        "function_id": 224,
        "function_name": "solve",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "a == c or b == d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "b-d > 0",
                "else_branch_end_line": 38,
                "else_branch_start_line": 33,
                "true_branch_end_line": 32,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "wasNeg",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "topHigh is None or top * botHigh < topHigh * bot",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "wasNeg",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "topLow is None or top * botHigh > topHigh * bot",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "topHigh is None and topLow is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "topHigh is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "botLow == topLow",
                "else_branch_end_line": 47,
                "else_branch_start_line": 46,
                "true_branch_end_line": 43,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "topLow > botLow",
                "else_branch_end_line": 47,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "topLow is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "botHigh == topHigh",
                "else_branch_end_line": 54,
                "else_branch_start_line": 53,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "botHigh > topHigh",
                "else_branch_end_line": 54,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "a <= b",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 65,
                "condition_start_line": 65,
                "condition_str": "low == int(low)",
                "else_branch_end_line": 74,
                "else_branch_start_line": 70,
                "true_branch_end_line": 69,
                "true_branch_start_line": 66
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "high > low + 1",
                "else_branch_end_line": 69,
                "else_branch_start_line": 68,
                "true_branch_end_line": 67,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "math.ceil(low) < high",
                "else_branch_end_line": 74,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 72
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "for i in xrange(N)",
                "loop_body_end_line": 38,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for j in xrange(i+1, N)",
                "loop_body_end_line": 38,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 38,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 61,
                "header_start_line": 61,
                "header_str": "while xMax > xMin",
                "loop_body_end_line": 74,
                "loop_body_start_line": 62,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 61
            }
        ],
        "parameters": [
            [
                "M",
                9,
                1
            ],
            [
                "N",
                9,
                0
            ]
        ]
    },
    "225": {
        "filepath": "code/gcj_1461c8_14b7a7_solvecase_11_75.py",
        "function_end_line": 6,
        "function_id": 225,
        "function_name": "printflush",
        "function_start_line": 4,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                4,
                0
            ]
        ]
    },
    "226": {
        "filepath": "code/gcj_1461c8_14b7a7_solvecase_11_75.py",
        "function_end_line": 8,
        "function_id": 226,
        "function_name": "getline",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "227": {
        "filepath": "code/gcj_1461c8_14b7a7_solvecase_11_75.py",
        "function_end_line": 10,
        "function_id": 227,
        "function_name": "getints",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "228": {
        "filepath": "code/gcj_1461c8_14b7a7_solvecase_11_75.py",
        "function_end_line": 75,
        "function_id": 228,
        "function_name": "solvecase",
        "function_start_line": 11,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "d <= 19",
                "else_branch_end_line": 46,
                "else_branch_start_line": 44,
                "true_branch_end_line": 23,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "d == 100",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "stuffV is not None",
                "else_branch_end_line": 46,
                "else_branch_start_line": 44,
                "true_branch_end_line": 43,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "peektime[target] <= d - 5",
                "else_branch_end_line": 43,
                "else_branch_start_line": 38,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "peektime[V] <= d - 30",
                "else_branch_end_line": 43,
                "else_branch_start_line": 38,
                "true_branch_end_line": 37,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "P not in v",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "P == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "P != 100",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 60,
                "condition_start_line": 60,
                "condition_str": "len(vases[target]) == m",
                "else_branch_end_line": 75,
                "else_branch_start_line": 71,
                "true_branch_end_line": 70,
                "true_branch_start_line": 61
            },
            {
                "condition_end_line": 64,
                "condition_start_line": 64,
                "condition_str": "V == target",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 65
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "len(vases[V]) < m2 or (len(vases[V]) == m2 and peektime[V] > mtime)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 69,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 73,
                "condition_start_line": 73,
                "condition_str": "len(vases[target]) == m",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 74,
                "true_branch_start_line": 74
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "for d in range(1, 101)",
                "loop_body_end_line": 75,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 75,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "for V in range(1, 21)",
                "loop_body_end_line": 69,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 69,
                "loop_statement_start_line": 63
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "for target in range(1, 21)",
                "loop_body_end_line": 74,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 74,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "while True",
                "loop_body_end_line": 43,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 40
            }
        ],
        "parameters": []
    },
    "229": {
        "filepath": "code/gcj_2d5b62_2fd5dc_solve_10_100.py",
        "function_end_line": 9,
        "function_id": 229,
        "function_name": "areInConflict",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "bx[i]==\"1\" and by[i]==\"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for i in range(min(lx, ly))",
                "loop_body_end_line": 8,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 6
            }
        ],
        "parameters": [
            [
                "y",
                1,
                1
            ],
            [
                "x",
                1,
                0
            ]
        ]
    },
    "230": {
        "filepath": "code/gcj_2d5b62_2fd5dc_solve_10_100.py",
        "function_end_line": 100,
        "function_id": 230,
        "function_name": "solve",
        "function_start_line": 10,
        "if_statements": [
            {
                "condition_end_line": 15,
                "condition_start_line": 15,
                "condition_str": "x%2==y%2",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 16
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "not areInConflict(x, y)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 86,
                "true_branch_end_line": 34,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "not areInConflict(x2, x1) and not areInConflict(x2, y) and not areInConflict(x1, y)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "not areInConflict(y2, y1) and not areInConflict(y2, x) and not areInConflict(y1, x)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 63,
                "condition_str": "not areInConflict(y2, y1) \\\n        and not areInConflict(y2, x1) \\\n        and not areInConflict(y2, x2) \\\n        and not areInConflict(y1, x1) \\\n        and not areInConflict(y1, x2) \\\n        and not areInConflict(x2, x1)",
                "else_branch_end_line": 87,
                "else_branch_start_line": 86,
                "true_branch_end_line": 85,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "bx[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "by[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "bx1[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "bx2[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "by[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "bx[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 58,
                "condition_start_line": 58,
                "condition_str": "by1[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 59,
                "true_branch_start_line": 59
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "by2[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 75,
                "condition_start_line": 75,
                "condition_str": "bx1[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 76,
                "true_branch_start_line": 76
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "bx2[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 79
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "by1[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 82,
                "true_branch_start_line": 82
            },
            {
                "condition_end_line": 84,
                "condition_start_line": 84,
                "condition_str": "by2[i] == \"1\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 85,
                "true_branch_start_line": 85
            },
            {
                "condition_end_line": 88,
                "condition_start_line": 88,
                "condition_str": "x != origX",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 89
            },
            {
                "condition_end_line": 90,
                "condition_start_line": 90,
                "condition_str": "result[i]==\"W\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 91,
                "true_branch_start_line": 91
            },
            {
                "condition_end_line": 92,
                "condition_start_line": 92,
                "condition_str": "result[i]==\"E\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 93,
                "true_branch_start_line": 93
            },
            {
                "condition_end_line": 94,
                "condition_start_line": 94,
                "condition_str": "y != origY",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 99,
                "true_branch_start_line": 95
            },
            {
                "condition_end_line": 96,
                "condition_start_line": 96,
                "condition_str": "result[i]==\"N\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 97,
                "true_branch_start_line": 97
            },
            {
                "condition_end_line": 98,
                "condition_start_line": 98,
                "condition_str": "result[i]==\"S\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 99,
                "true_branch_start_line": 99
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for i in range(len(bx))",
                "loop_body_end_line": 31,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for i in range(len(by))",
                "loop_body_end_line": 34,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "for i in range(len(bx1))",
                "loop_body_end_line": 42,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "for i in range(len(bx2))",
                "loop_body_end_line": 45,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 43
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "for i in range(len(by))",
                "loop_body_end_line": 48,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for i in range(len(bx))",
                "loop_body_end_line": 56,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "for i in range(len(by1))",
                "loop_body_end_line": 59,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 57
            },
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "for i in range(len(by2))",
                "loop_body_end_line": 62,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 60
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "for i in range(len(bx1))",
                "loop_body_end_line": 76,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 76,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "for i in range(len(bx2))",
                "loop_body_end_line": 79,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 79,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 80,
                "header_start_line": 80,
                "header_str": "for i in range(len(by1))",
                "loop_body_end_line": 82,
                "loop_body_start_line": 81,
                "loop_statement_end_line": 82,
                "loop_statement_start_line": 80
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "for i in range(len(by2))",
                "loop_body_end_line": 85,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 83
            },
            {
                "header_end_line": 89,
                "header_start_line": 89,
                "header_str": "for i in xrange(len(result))",
                "loop_body_end_line": 93,
                "loop_body_start_line": 90,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 89
            },
            {
                "header_end_line": 95,
                "header_start_line": 95,
                "header_str": "for i in xrange(len(result))",
                "loop_body_end_line": 99,
                "loop_body_start_line": 96,
                "loop_statement_end_line": 99,
                "loop_statement_start_line": 95
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "while x1 < x",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "while y1 < y",
                "loop_body_end_line": 23,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 22
            }
        ],
        "parameters": [
            [
                "y",
                10,
                1
            ],
            [
                "x",
                10,
                0
            ]
        ]
    },
    "231": {
        "filepath": "code/gcj_3005a_31c40_solve_1_63.py",
        "function_end_line": 63,
        "function_id": 231,
        "function_name": "solve",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "cakes[i][j] == '@'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "chips_cnt == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 18
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "chips_cnt % parts != 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "chips_row_cnt < rows_chips",
                "else_branch_end_line": 39,
                "else_branch_start_line": 37,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "chips_row_cnt == rows_chips",
                "else_branch_end_line": 39,
                "else_branch_start_line": 37,
                "true_branch_end_line": 36,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "chips_col_cnt < cols_chips",
                "else_branch_end_line": 50,
                "else_branch_start_line": 48,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "chips_col_cnt == cols_chips",
                "else_branch_end_line": 50,
                "else_branch_start_line": 48,
                "true_branch_end_line": 47,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "cakes[i][j] == \"@\"",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "chips[x][y] != piece_chip",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 60
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for i in xrange(R)",
                "loop_body_end_line": 6,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 6,
                "loop_statement_start_line": 4
            },
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for i in xrange(R)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for j in xrange(C)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 30,
                "header_start_line": 30,
                "header_str": "for i in xrange(R)",
                "loop_body_end_line": 39,
                "loop_body_start_line": 31,
                "loop_statement_end_line": 39,
                "loop_statement_start_line": 30
            },
            {
                "header_end_line": 41,
                "header_start_line": 41,
                "header_str": "for i in xrange(C)",
                "loop_body_end_line": 50,
                "loop_body_start_line": 42,
                "loop_statement_end_line": 50,
                "loop_statement_start_line": 41
            },
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for x in xrange(H)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for y in xrange(V)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 53
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "for i in xrange(hcuts[x], hcuts[x+1])",
                "loop_body_end_line": 58,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 55
            },
            {
                "header_end_line": 56,
                "header_start_line": 56,
                "header_str": "for j in xrange(vcuts[y], vcuts[y+1])",
                "loop_body_end_line": 58,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 56
            }
        ],
        "parameters": [
            [
                "kase",
                1,
                0
            ]
        ]
    },
    "232": {
        "filepath": "code/gcj_3005a_31c40_solve_1_63.py",
        "function_end_line": 67,
        "function_id": 232,
        "function_name": "main",
        "function_start_line": 64,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 66,
                "header_start_line": 66,
                "header_str": "for kase in xrange(1, T + 1)",
                "loop_body_end_line": 67,
                "loop_body_start_line": 67,
                "loop_statement_end_line": 67,
                "loop_statement_start_line": 66
            }
        ],
        "parameters": []
    },
    "233": {
        "filepath": "code/gcj_3172d1_325a14_calc_1_47.py",
        "function_end_line": 47,
        "function_id": 233,
        "function_name": "calc",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(k+1) % per_d != 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "d % cur_d == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "cur_d > d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "cur_d > d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "cur_d < d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "a[j] > p or a[j] % x != 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "d % cur_d == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 39,
                "condition_start_line": 39,
                "condition_str": "cur_d > d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 40
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "cur_d > d",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "d%cur_d == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 45
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "for i in range(n)",
                "loop_body_end_line": 46,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 5
            },
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "for j in range(d + 2)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 11,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 10
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for k in range(tmp*per_d)",
                "loop_body_end_line": 25,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 25,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for j in range(n-1, i, -1)",
                "loop_body_end_line": 42,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for k in range(tmp)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": [
            [
                "b",
                1,
                3
            ],
            [
                "a",
                1,
                2
            ],
            [
                "n",
                1,
                0
            ],
            [
                "d",
                1,
                1
            ],
            [
                "ct",
                1,
                4
            ]
        ]
    },
    "234": {
        "filepath": "code/gcj_3172d1_325a14_calc_1_47.py",
        "function_end_line": 57,
        "function_id": 234,
        "function_name": "work",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for i in tmp",
                "loop_body_end_line": 54,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 53
            }
        ],
        "parameters": [
            [
                "case",
                48,
                0
            ]
        ]
    },
    "235": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 8,
        "function_id": 235,
        "function_name": "mle_assert",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "LocaL",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "not x",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 8,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                4,
                0
            ]
        ]
    },
    "236": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 16,
        "function_id": 236,
        "function_name": "tle_assert",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "LocaL",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "not x",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 16,
                "true_branch_start_line": 13
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for i in range(10000)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 14,
                "header_start_line": 14,
                "header_str": "for j in range(1000)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 15,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 14
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for k in range(1000)",
                "loop_body_end_line": 16,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 16,
                "loop_statement_start_line": 15
            }
        ],
        "parameters": [
            [
                "x",
                9,
                0
            ]
        ]
    },
    "237": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 22,
        "function_id": 237,
        "function_name": "rdline",
        "function_start_line": 22,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "238": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 23,
        "function_id": 238,
        "function_name": "rdstrs",
        "function_start_line": 23,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "239": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 24,
        "function_id": 239,
        "function_name": "rdints",
        "function_start_line": 24,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "240": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 25,
        "function_id": 240,
        "function_name": "rd1int",
        "function_start_line": 25,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "241": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 88,
        "function_id": 241,
        "function_name": "do_one_case",
        "function_start_line": 26,
        "if_statements": [
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "(a,b) in A",
                "else_branch_end_line": 48,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "i in O",
                "else_branch_end_line": 58,
                "else_branch_start_line": 57,
                "true_branch_end_line": 56,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "j in I",
                "else_branch_end_line": 62,
                "else_branch_start_line": 61,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "x in O",
                "else_branch_end_line": 71,
                "else_branch_start_line": 70,
                "true_branch_end_line": 69,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "l3",
                "else_branch_end_line": 86,
                "else_branch_start_line": 85,
                "true_branch_end_line": 82,
                "true_branch_start_line": 82
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "len(C2)>1",
                "else_branch_end_line": 86,
                "else_branch_start_line": 85,
                "true_branch_end_line": 84,
                "true_branch_start_line": 84
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 31,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 31,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 34,
                "header_start_line": 34,
                "header_str": "for j in xrange(1,N)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 35,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 34
            },
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "for i in xrange(j)",
                "loop_body_end_line": 48,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 48,
                "loop_statement_start_line": 36
            },
            {
                "header_end_line": 50,
                "header_start_line": 50,
                "header_str": "for a,b in A",
                "loop_body_end_line": 87,
                "loop_body_start_line": 51,
                "loop_statement_end_line": 87,
                "loop_statement_start_line": 50
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for i,j in E",
                "loop_body_end_line": 62,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for x in NI",
                "loop_body_end_line": 71,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 71,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "while len(C3)>1",
                "loop_body_end_line": 77,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 75
            }
        ],
        "parameters": [
            [
                "cnum",
                26,
                0
            ]
        ]
    },
    "242": {
        "filepath": "code/gcj_3386d0_33f991_do_one_case_26_88.py",
        "function_end_line": 93,
        "function_id": 242,
        "function_name": "main",
        "function_start_line": 89,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 91,
                "header_start_line": 91,
                "header_str": "for i in range(T)",
                "loop_body_end_line": 93,
                "loop_body_start_line": 92,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 91
            }
        ],
        "parameters": []
    },
    "243": {
        "filepath": "code/gcj_36601_3998a_solve_4_55.py",
        "function_end_line": 3,
        "function_id": 243,
        "function_name": "is_rounding_up",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "num",
                2,
                0
            ]
        ]
    },
    "244": {
        "filepath": "code/gcj_36601_3998a_solve_4_55.py",
        "function_end_line": 55,
        "function_id": 244,
        "function_name": "solve",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "not is_rounding_up(percent)",
                "else_branch_end_line": 13,
                "else_branch_start_line": 12,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "is_rounding_up(one_unit)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "diff < one_unit",
                "else_branch_end_line": 29,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "is_rounding_up((min_additional_unit * one_unit) + diff)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "min_additional_unit <= left",
                "else_branch_end_line": 35,
                "else_branch_start_line": 34,
                "true_branch_end_line": 33,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "left",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "diff < one_unit",
                "else_branch_end_line": 45,
                "else_branch_start_line": 40,
                "true_branch_end_line": 39,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "is_rounding_up(min_unit_req_for_higher_ * one_unit)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "min_unit_req_for_higher_ <= left",
                "else_branch_end_line": 54,
                "else_branch_start_line": 53,
                "true_branch_end_line": 52,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "left",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "for i, c in enumerate(choices)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "for i, c, percent in to_investigate",
                "loop_body_end_line": 35,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 35,
                "loop_statement_start_line": 19
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "while min_additional_unit <= left",
                "loop_body_end_line": 29,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "while min_unit_req_for_higher_ <= left",
                "loop_body_end_line": 45,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 42
            }
        ],
        "parameters": [
            [
                "L",
                4,
                1
            ],
            [
                "n",
                4,
                0
            ],
            [
                "choices",
                4,
                2
            ]
        ]
    },
    "245": {
        "filepath": "code/gcj_3675b_3b704_solution_1_81.py",
        "function_end_line": 81,
        "function_id": 245,
        "function_name": "solution",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "index == len(a_to_b) - 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "N is not None and M is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "M is not None and N is None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "M is not None and N is not None",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 48,
                "condition_start_line": 48,
                "condition_str": "a == a_for_comparision and b == b_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 49
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "a == a_for_comparision and b != b_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "b == b_for_comparision and a != a_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 66,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 67,
                "condition_str": "b != b_for_comparision and a != a_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 80,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "a != a_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "b != b_for_comparision",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "b != b_for_comparision and a != a_for_comparision",
                "else_branch_end_line": 47,
                "else_branch_start_line": 46,
                "true_branch_end_line": 45,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "current_set_size > maximum_set_size",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "current_set_size == maximum_set_size",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 49,
                "condition_start_line": 49,
                "condition_str": "(N is None)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 50,
                "true_branch_start_line": 50
            },
            {
                "condition_end_line": 51,
                "condition_start_line": 51,
                "condition_str": "(M is None)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 52,
                "true_branch_start_line": 52
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "(N is None)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 57
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "(M is None)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 63
            },
            {
                "condition_end_line": 68,
                "condition_start_line": 68,
                "condition_str": "len(a_to_b) > index",
                "else_branch_end_line": 80,
                "else_branch_start_line": 79,
                "true_branch_end_line": 78,
                "true_branch_start_line": 69
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "a == a_to_b[index+1][0]",
                "else_branch_end_line": 78,
                "else_branch_start_line": 74,
                "true_branch_end_line": 73,
                "true_branch_start_line": 70
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 3,
                "header_start_line": 3,
                "header_str": "for i in range(number_of_signs)",
                "loop_body_end_line": 9,
                "loop_body_start_line": 4,
                "loop_statement_end_line": 9,
                "loop_statement_start_line": 3
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for index, tup in enumerate(a_to_b)",
                "loop_body_end_line": 80,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "while not is_finish and len(a_to_b) > 0",
                "loop_body_end_line": 80,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 80,
                "loop_statement_start_line": 17
            }
        ],
        "parameters": [
            [
                "number_of_signs",
                1,
                0
            ]
        ]
    },
    "246": {
        "filepath": "code/gcj_3675b_3b704_solution_1_81.py",
        "function_end_line": 89,
        "function_id": 246,
        "function_name": "read_input",
        "function_start_line": 82,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 84,
                "header_start_line": 84,
                "header_str": "for test_number in range(int(number_of_tests))",
                "loop_body_end_line": 89,
                "loop_body_start_line": 85,
                "loop_statement_end_line": 89,
                "loop_statement_start_line": 84
            }
        ],
        "parameters": []
    },
    "247": {
        "filepath": "code/gcj_3675b_3b704_solution_1_81.py",
        "function_end_line": 91,
        "function_id": 247,
        "function_name": "print_output",
        "function_start_line": 90,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "answer",
                90,
                0
            ],
            [
                "test_case",
                90,
                1
            ]
        ]
    },
    "248": {
        "filepath": "code/gcj_3774db_378b24_ILA_1_60.py",
        "function_end_line": 60,
        "function_id": 248,
        "function_name": "ILA",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "s[row-1] == t[col-1]",
                "else_branch_end_line": 17,
                "else_branch_start_line": 16,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "m == dist[row-1][col] + 1",
                "else_branch_end_line": 29,
                "else_branch_start_line": 28,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "m == dist[row][col-1] + 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 26,
                "condition_start_line": 26,
                "condition_str": "subs == 1",
                "else_branch_end_line": 29,
                "else_branch_start_line": 28,
                "true_branch_end_line": 27,
                "true_branch_start_line": 27
            },
            {
                "condition_end_line": 42,
                "condition_start_line": 42,
                "condition_str": "move == 'D'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 43
            },
            {
                "condition_end_line": 46,
                "condition_start_line": 46,
                "condition_str": "move == 'I'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 49,
                "true_branch_start_line": 47
            },
            {
                "condition_end_line": 50,
                "condition_start_line": 50,
                "condition_str": "move == 'S'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 51
            },
            {
                "condition_end_line": 56,
                "condition_start_line": 56,
                "condition_str": "move == 'N'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 59,
                "true_branch_start_line": 57
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for row in range(1, rows)",
                "loop_body_end_line": 8,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for col in range(1, cols)",
                "loop_body_end_line": 11,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for col in range(1, cols)",
                "loop_body_end_line": 29,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for row in range(1, rows)",
                "loop_body_end_line": 29,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "while end >= start",
                "loop_body_end_line": 59,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 59,
                "loop_statement_start_line": 40
            }
        ],
        "parameters": [
            [
                "t",
                1,
                1
            ],
            [
                "s",
                1,
                0
            ]
        ]
    },
    "249": {
        "filepath": "code/gcj_3774db_378b24_ILA_1_60.py",
        "function_end_line": 62,
        "function_id": 249,
        "function_name": "solve_case",
        "function_start_line": 61,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "C",
                61,
                0
            ],
            [
                "J",
                61,
                1
            ]
        ]
    },
    "250": {
        "filepath": "code/gcj_3774db_378b24_ILA_1_60.py",
        "function_end_line": 68,
        "function_id": 250,
        "function_name": "main",
        "function_start_line": 63,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for case_no in xrange(1,1+T)",
                "loop_body_end_line": 68,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 65
            }
        ],
        "parameters": []
    },
    "251": {
        "filepath": "code/gcj_3e064_3f02b_FindNewWord_2_50.py",
        "function_end_line": 50,
        "function_id": 251,
        "function_name": "FindNewWord",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 5,
                "condition_start_line": 5,
                "condition_str": "len(w_list) == 1 or L ==1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 6,
                "true_branch_start_line": 6
            },
            {
                "condition_end_line": 11,
                "condition_start_line": 11,
                "condition_str": "w_list[i][0] != last_prefix",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 12
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "letter != last_letter",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "len(remaining_letters) > 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "isFound",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "not isFound",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 10,
                "header_start_line": 10,
                "header_str": "for i in range(1, N)",
                "loop_body_end_line": 13,
                "loop_body_start_line": 11,
                "loop_statement_end_line": 13,
                "loop_statement_start_line": 10
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for p in range(1, L)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for k in range(1, N)",
                "loop_body_end_line": 19,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 18
            },
            {
                "header_end_line": 23,
                "header_start_line": 23,
                "header_str": "for n_prefix in range(n_prefixes -1)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 24,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 23
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for item in range(start_index + 1, end_index)",
                "loop_body_end_line": 34,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for p in range(size_p, L)",
                "loop_body_end_line": 49,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 48
            }
        ],
        "parameters": [
            [
                "w_list",
                2,
                0
            ]
        ]
    },
    "252": {
        "filepath": "code/gcj_3e064_3f02b_FindNewWord_2_50.py",
        "function_end_line": 63,
        "function_id": 252,
        "function_name": "solve_jam",
        "function_start_line": 51,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for i in range(T)",
                "loop_body_end_line": 62,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 59,
                "header_start_line": 59,
                "header_str": "for p in range(N)",
                "loop_body_end_line": 60,
                "loop_body_start_line": 60,
                "loop_statement_end_line": 60,
                "loop_statement_start_line": 59
            }
        ],
        "parameters": []
    },
    "253": {
        "filepath": "code/gcj_3e064_3f02b_FindNewWord_2_50.py",
        "function_end_line": 66,
        "function_id": 253,
        "function_name": "save_output",
        "function_start_line": 64,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for index, value in enumerate(output)",
                "loop_body_end_line": 66,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 65
            }
        ],
        "parameters": [
            [
                "output",
                64,
                0
            ]
        ]
    },
    "254": {
        "filepath": "code/gcj_3e0a8_4209c_max_stack_5_45.py",
        "function_end_line": 45,
        "function_id": 254,
        "function_name": "max_stack",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "(i == 0)",
                "else_branch_end_line": 13,
                "else_branch_start_line": 12,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "(i + 1 < num_in_stack + 1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 27,
                "true_branch_end_line": 20,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "(i+1 == num_in_stack + 1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 27,
                "true_branch_end_line": 26,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "(min_weight[num_in_stack-1][i-1] != -1 and min_weight[num_in_stack-1][i-1] <= 6 * weights[i])",
                "else_branch_end_line": 26,
                "else_branch_start_line": 25,
                "true_branch_end_line": 24,
                "true_branch_start_line": 23
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(min_weight[num_in_stack-1][i-1] != -1 and min_weight[num_in_stack-1][i-1] <= 6 * weights[i])",
                "else_branch_end_line": 31,
                "else_branch_start_line": 30,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "(current_ant == -1 and old_ant == -1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 41,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "(current_ant == -1)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 37,
                "true_branch_start_line": 36
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(old_ant == -1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 41,
                "true_branch_end_line": 40,
                "true_branch_start_line": 39
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for i in range(num_ants)",
                "loop_body_end_line": 14,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "for num_in_stack in range(1, num_ants)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 16
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for i in range(num_ants)",
                "loop_body_end_line": 43,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 43,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": [
            [
                "weights",
                5,
                1
            ],
            [
                "num_ants",
                5,
                0
            ]
        ]
    },
    "255": {
        "filepath": "code/gcj_3e0a8_4209c_max_stack_5_45.py",
        "function_end_line": 57,
        "function_id": 255,
        "function_name": "main",
        "function_start_line": 46,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for x in range(T)",
                "loop_body_end_line": 57,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 48
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for i in range(N)",
                "loop_body_end_line": 55,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 53
            }
        ],
        "parameters": [
            [
                "args",
                46,
                0
            ]
        ]
    },
    "256": {
        "filepath": "code/gcj_652_49d4_main_5_93.py",
        "function_end_line": 4,
        "function_id": 256,
        "function_name": "eprint",
        "function_start_line": 3,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "257": {
        "filepath": "code/gcj_652_49d4_main_5_93.py",
        "function_end_line": 93,
        "function_id": 257,
        "function_name": "main",
        "function_start_line": 5,
        "if_statements": [
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "stall_occupied[j]",
                "else_branch_end_line": 26,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "Min_s.count(maximal) > 1",
                "else_branch_end_line": 91,
                "else_branch_start_line": 67,
                "true_branch_end_line": 66,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 38,
                "condition_start_line": 38,
                "condition_str": "(max_of_idxs.count(max_max) > 1)",
                "else_branch_end_line": 43,
                "else_branch_start_line": 42,
                "true_branch_end_line": 41,
                "true_branch_start_line": 39
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "stall_occupied[leftIdx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "stall_occupied[rightIdx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 78,
                "condition_start_line": 78,
                "condition_str": "stall_occupied[leftIdx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 79,
                "true_branch_start_line": 79
            },
            {
                "condition_end_line": 86,
                "condition_start_line": 86,
                "condition_str": "stall_occupied[rightIdx]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 87,
                "true_branch_start_line": 87
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 7,
                "header_start_line": 7,
                "header_str": "for i in xrange(1, T + 1)",
                "loop_body_end_line": 93,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 93,
                "loop_statement_start_line": 7
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for j in xrange(N)",
                "loop_body_end_line": 14,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 20,
                "header_start_line": 20,
                "header_str": "for j in xrange(N+2)",
                "loop_body_end_line": 28,
                "loop_body_start_line": 21,
                "loop_statement_end_line": 28,
                "loop_statement_start_line": 20
            },
            {
                "header_end_line": 29,
                "header_start_line": 29,
                "header_str": "for k in xrange(K)",
                "loop_body_end_line": 91,
                "loop_body_start_line": 30,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 29
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for j in idxs",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 52,
                "header_start_line": 52,
                "header_str": "while leftIdx > 0",
                "loop_body_end_line": 58,
                "loop_body_start_line": 53,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 52
            },
            {
                "header_end_line": 60,
                "header_start_line": 60,
                "header_str": "while rightIdx < N + 2",
                "loop_body_end_line": 66,
                "loop_body_start_line": 61,
                "loop_statement_end_line": 66,
                "loop_statement_start_line": 60
            },
            {
                "header_end_line": 77,
                "header_start_line": 77,
                "header_str": "while leftIdx > 0",
                "loop_body_end_line": 83,
                "loop_body_start_line": 78,
                "loop_statement_end_line": 83,
                "loop_statement_start_line": 77
            },
            {
                "header_end_line": 85,
                "header_start_line": 85,
                "header_str": "while rightIdx < N + 2",
                "loop_body_end_line": 91,
                "loop_body_start_line": 86,
                "loop_statement_end_line": 91,
                "loop_statement_start_line": 85
            }
        ],
        "parameters": []
    },
    "258": {
        "filepath": "code/gcj_79cb_22327_calculate_1_33.py",
        "function_end_line": 33,
        "function_id": 258,
        "function_name": "calculate",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "(i+1) % 2 == 0",
                "else_branch_end_line": 12,
                "else_branch_start_line": 10,
                "true_branch_end_line": 9,
                "true_branch_start_line": 8
            },
            {
                "condition_end_line": 19,
                "condition_start_line": 19,
                "condition_str": "i == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 22,
                "true_branch_start_line": 20
            },
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "i % 2 == 1",
                "else_branch_end_line": 32,
                "else_branch_start_line": 28,
                "true_branch_end_line": 27,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "even_arr[eveni] < last",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 25,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 29,
                "condition_start_line": 29,
                "condition_str": "odd_arr[oddi] < last",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 30
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for i in xrange(size)",
                "loop_body_end_line": 12,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 12,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "for i in xrange(size)",
                "loop_body_end_line": 32,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 32,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": [
            [
                "size",
                1,
                1
            ],
            [
                "arr",
                1,
                0
            ]
        ]
    },
    "259": {
        "filepath": "code/gcj_79cb_22327_calculate_1_33.py",
        "function_end_line": 40,
        "function_id": 259,
        "function_name": "main",
        "function_start_line": 34,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 36,
                "header_start_line": 36,
                "header_str": "for i in xrange(t)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 37,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 36
            }
        ],
        "parameters": []
    },
    "260": {
        "filepath": "code/gcj_881da_ee31e_ownWay_9_91.py",
        "function_end_line": 8,
        "function_id": 260,
        "function_name": "main",
        "function_start_line": 2,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "for i in range (T)",
                "loop_body_end_line": 8,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 8,
                "loop_statement_start_line": 4
            }
        ],
        "parameters": []
    },
    "261": {
        "filepath": "code/gcj_881da_ee31e_ownWay_9_91.py",
        "function_end_line": 91,
        "function_id": 261,
        "function_name": "ownWay",
        "function_start_line": 9,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "k==0",
                "else_branch_end_line": 19,
                "else_branch_start_line": 18,
                "true_branch_end_line": 17,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "l[i]=='S'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "l[i]=='E'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 40,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 55,
                "condition_start_line": 55,
                "condition_str": "l[i]=='S'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 58,
                "true_branch_start_line": 56
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "l[i]=='E'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 62,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 67,
                "condition_start_line": 66,
                "condition_str": "(c_l[0][i][0]==c_l1[0][i][0]) and (c_l[0][i][1]==c_l1[0][i][1]) and (c_l[0][i+1][0]==c_l1[0][i+1][0]) \\\n\t\t\t\tand (c_l[0][i+1][1]==c_l1[0][i+1][1])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 68,
                "true_branch_start_line": 68
            },
            {
                "condition_end_line": 69,
                "condition_start_line": 69,
                "condition_str": "check",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 90,
                "true_branch_start_line": 70
            },
            {
                "condition_end_line": 83,
                "condition_start_line": 83,
                "condition_str": "l[i]=='S'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 86,
                "true_branch_start_line": 84
            },
            {
                "condition_end_line": 87,
                "condition_start_line": 87,
                "condition_str": "l[i]=='E'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 90,
                "true_branch_start_line": 88
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for i in range (n)",
                "loop_body_end_line": 19,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for j in range (n)",
                "loop_body_end_line": 19,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for k in range (2)",
                "loop_body_end_line": 19,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 19,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 22,
                "header_start_line": 22,
                "header_str": "for i in range (1)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 23,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 22
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "for j in range(2*n-1)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 26,
                "header_start_line": 26,
                "header_str": "for k in range (2)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 27,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 26
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for i in range(2*n-2)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "for i in range (1)",
                "loop_body_end_line": 49,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 46,
                "header_start_line": 46,
                "header_str": "for j in range(2*n-1)",
                "loop_body_end_line": 49,
                "loop_body_start_line": 47,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 46
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "for k in range (2)",
                "loop_body_end_line": 49,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 49,
                "loop_statement_start_line": 48
            },
            {
                "header_end_line": 54,
                "header_start_line": 54,
                "header_str": "for i in range(2*n-2)",
                "loop_body_end_line": 62,
                "loop_body_start_line": 55,
                "loop_statement_end_line": 62,
                "loop_statement_start_line": 54
            },
            {
                "header_end_line": 65,
                "header_start_line": 65,
                "header_str": "for i in range(2*n-2)",
                "loop_body_end_line": 68,
                "loop_body_start_line": 66,
                "loop_statement_end_line": 68,
                "loop_statement_start_line": 65
            },
            {
                "header_end_line": 72,
                "header_start_line": 72,
                "header_str": "for i in range (1)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 73,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 72
            },
            {
                "header_end_line": 74,
                "header_start_line": 74,
                "header_str": "for j in range(2*n-1)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 75,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 74
            },
            {
                "header_end_line": 76,
                "header_start_line": 76,
                "header_str": "for k in range (2)",
                "loop_body_end_line": 77,
                "loop_body_start_line": 77,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 76
            },
            {
                "header_end_line": 82,
                "header_start_line": 82,
                "header_str": "for i in range(2*n-2)",
                "loop_body_end_line": 90,
                "loop_body_start_line": 83,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 82
            },
            {
                "header_end_line": 63,
                "header_start_line": 63,
                "header_str": "while check",
                "loop_body_end_line": 90,
                "loop_body_start_line": 64,
                "loop_statement_end_line": 90,
                "loop_statement_start_line": 63
            }
        ],
        "parameters": [
            [
                "n",
                9,
                1
            ],
            [
                "s",
                9,
                0
            ]
        ]
    },
    "262": {
        "filepath": "code/gcj_88231_d5f82_solve_6_48.py",
        "function_end_line": 5,
        "function_id": 262,
        "function_name": "construct",
        "function_start_line": 1,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 3,
                "header_start_line": 3,
                "header_str": "for i, d in enumerate(digits)",
                "loop_body_end_line": 4,
                "loop_body_start_line": 4,
                "loop_statement_end_line": 4,
                "loop_statement_start_line": 3
            }
        ],
        "parameters": [
            [
                "digits",
                1,
                0
            ]
        ]
    },
    "263": {
        "filepath": "code/gcj_88231_d5f82_solve_6_48.py",
        "function_end_line": 48,
        "function_id": 263,
        "function_name": "solve",
        "function_start_line": 6,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "d == 4",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 24,
                "condition_start_line": 24,
                "condition_str": "d == 8",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 25
            },
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "d % 2 == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "d == 9 and carry",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "d % 2 == 1 and carry",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "d % 2 == 7",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "d % 2 == 9",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 42,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "d % 2 == 1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 45,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 17,
                "condition_start_line": 17,
                "condition_str": "i + 1 < len(digits) and digits[i + 1] % 2 == 1",
                "else_branch_end_line": 23,
                "else_branch_start_line": 21,
                "true_branch_end_line": 20,
                "true_branch_start_line": 18
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "for i, d in enumerate(digits)",
                "loop_body_end_line": 45,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 45,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "while n != 0",
                "loop_body_end_line": 11,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 9
            }
        ],
        "parameters": [
            [
                "n",
                6,
                0
            ]
        ]
    },
    "264": {
        "filepath": "code/gcj_88231_d5f82_solve_6_48.py",
        "function_end_line": 54,
        "function_id": 264,
        "function_name": "main",
        "function_start_line": 49,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for i in xrange(T)",
                "loop_body_end_line": 54,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 51
            }
        ],
        "parameters": []
    },
    "265": {
        "filepath": "code/gcj_459f2_4981c_solve_1_67.py",
        "function_end_line": 67,
        "function_id": 265,
        "function_name": "solve",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 2,
                "condition_start_line": 2,
                "condition_str": "B[0] == 0 or B[-1] == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 3,
                "true_branch_start_line": 3
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "B[i] == 0 and shadowed[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "B[i] > 0 and not shadowed[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 39,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "B[i] <= unshadowed_balls",
                "else_branch_end_line": 39,
                "else_branch_start_line": 37,
                "true_branch_end_line": 36,
                "true_branch_start_line": 31
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "B[i] > 0 and shadowed[i]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 53,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "cell == '\\\\' or cell == '/'",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 61,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 62,
                "condition_start_line": 62,
                "condition_str": "include_row",
                "else_branch_end_line": 65,
                "else_branch_start_line": 64,
                "true_branch_end_line": 63,
                "true_branch_start_line": 63
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 7,
                "header_start_line": 7,
                "header_str": "for j in range(C)",
                "loop_body_end_line": 11,
                "loop_body_start_line": 8,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 7
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for i in range(C)",
                "loop_body_end_line": 10,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 10,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "for i in range(C)",
                "loop_body_end_line": 53,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "for index in range(1, C)",
                "loop_body_end_line": 65,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 65,
                "loop_statement_start_line": 55
            },
            {
                "header_end_line": 58,
                "header_start_line": 58,
                "header_str": "for cell in row",
                "loop_body_end_line": 61,
                "loop_body_start_line": 59,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 58
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "while j >= 1 and not shadowed[j]",
                "loop_body_end_line": 29,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 33,
                "header_start_line": 33,
                "header_str": "while excess_balls > 1",
                "loop_body_end_line": 36,
                "loop_body_start_line": 34,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 33
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "while j < (C - 1) and shadowed[j]",
                "loop_body_end_line": 47,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 48,
                "header_start_line": 48,
                "header_str": "while j < (C - 1) and r > 0",
                "loop_body_end_line": 53,
                "loop_body_start_line": 49,
                "loop_statement_end_line": 53,
                "loop_statement_start_line": 48
            }
        ],
        "parameters": [
            [
                "B",
                1,
                0
            ]
        ]
    },
    "266": {
        "filepath": "code/gcj_459f2_4981c_solve_1_67.py",
        "function_end_line": 69,
        "function_id": 266,
        "function_name": "lay_right_ramp",
        "function_start_line": 68,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "grid",
                68,
                1
            ],
            [
                "i",
                68,
                0
            ],
            [
                "shadowed",
                68,
                2
            ]
        ]
    },
    "267": {
        "filepath": "code/gcj_459f2_4981c_solve_1_67.py",
        "function_end_line": 71,
        "function_id": 267,
        "function_name": "lay_left_ramp",
        "function_start_line": 70,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "grid",
                70,
                1
            ],
            [
                "i",
                70,
                0
            ],
            [
                "shadowed",
                70,
                2
            ]
        ]
    },
    "268": {
        "filepath": "code/gcj_459f2_4981c_solve_1_67.py",
        "function_end_line": 86,
        "function_id": 268,
        "function_name": "main",
        "function_start_line": 72,
        "if_statements": [
            {
                "condition_end_line": 81,
                "condition_start_line": 81,
                "condition_str": "grid",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 85,
                "true_branch_start_line": 82
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 75,
                "header_start_line": 75,
                "header_str": "while t <= T",
                "loop_body_end_line": 86,
                "loop_body_start_line": 76,
                "loop_statement_end_line": 86,
                "loop_statement_start_line": 75
            },
            {
                "header_end_line": 83,
                "header_start_line": 83,
                "header_str": "while i >= 0",
                "loop_body_end_line": 85,
                "loop_body_start_line": 84,
                "loop_statement_end_line": 85,
                "loop_statement_start_line": 83
            }
        ],
        "parameters": []
    },
    "269": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 13,
        "function_id": 269,
        "function_name": "read_word",
        "function_start_line": 4,
        "if_statements": [
            {
                "condition_end_line": 7,
                "condition_start_line": 7,
                "condition_str": "i == -1",
                "else_branch_end_line": 12,
                "else_branch_start_line": 10,
                "true_branch_end_line": 9,
                "true_branch_start_line": 8
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "270": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 15,
        "function_id": 270,
        "function_name": "read_int",
        "function_start_line": 14,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "271": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 17,
        "function_id": 271,
        "function_name": "read_float",
        "function_start_line": 16,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "272": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 24,
        "function_id": 272,
        "function_name": "read_bool",
        "function_start_line": 18,
        "if_statements": [
            {
                "condition_end_line": 20,
                "condition_start_line": 20,
                "condition_str": "c == true_word",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 21,
                "true_branch_start_line": 21
            },
            {
                "condition_end_line": 22,
                "condition_start_line": 22,
                "condition_str": "c == false_word",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 23
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "273": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 30,
        "function_id": 273,
        "function_name": "next_line",
        "function_start_line": 25,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "274": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 36,
        "function_id": 274,
        "function_name": "run_solver",
        "function_start_line": 31,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for case in xrange(1, t+1)",
                "loop_body_end_line": 36,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 36,
                "loop_statement_start_line": 35
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "while not cur_line",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": [
            [
                "solve_function",
                31,
                0
            ]
        ]
    },
    "275": {
        "filepath": "code/gcj_3e068_3ea34_solve_37_61.py",
        "function_end_line": 61,
        "function_id": 275,
        "function_name": "solve",
        "function_start_line": 37,
        "if_statements": [
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "d == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 46
            },
            {
                "condition_end_line": 54,
                "condition_start_line": 54,
                "condition_str": "counts[index] != USED",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 55,
                "true_branch_start_line": 55
            },
            {
                "condition_end_line": 57,
                "condition_start_line": 57,
                "condition_str": "counts[chosen_index] == USED",
                "else_branch_end_line": 61,
                "else_branch_start_line": 59,
                "true_branch_end_line": 58,
                "true_branch_start_line": 58
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 42,
                "header_start_line": 42,
                "header_str": "for i in xrange(n)",
                "loop_body_end_line": 61,
                "loop_body_start_line": 43,
                "loop_statement_end_line": 61,
                "loop_statement_start_line": 42
            },
            {
                "header_end_line": 49,
                "header_start_line": 49,
                "header_str": "for j in xrange(d)",
                "loop_body_end_line": 51,
                "loop_body_start_line": 50,
                "loop_statement_end_line": 51,
                "loop_statement_start_line": 49
            },
            {
                "header_end_line": 53,
                "header_start_line": 53,
                "header_str": "for index in cur",
                "loop_body_end_line": 55,
                "loop_body_start_line": 54,
                "loop_statement_end_line": 55,
                "loop_statement_start_line": 53
            }
        ],
        "parameters": [
            [
                "case_index",
                37,
                0
            ]
        ]
    },
    "276": {
        "filepath": "code/gcj_7966_20bfd_leastHacks_1_47.py",
        "function_end_line": 47,
        "function_id": 276,
        "function_name": "leastHacks",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 13,
                "condition_start_line": 13,
                "condition_str": "action == charge",
                "else_branch_end_line": 27,
                "else_branch_start_line": 24,
                "true_branch_end_line": 23,
                "true_branch_start_line": 14
            },
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "firstCharge",
                "else_branch_end_line": 20,
                "else_branch_start_line": 17,
                "true_branch_end_line": 16,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "not firstCharge",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 26,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "not firstCharge",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 31,
                "condition_start_line": 31,
                "condition_str": "totalDamage <= shieldStrength",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 32,
                "true_branch_start_line": 32
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "stackLength == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "action == shoot",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 37
            },
            {
                "condition_end_line": 37,
                "condition_start_line": 37,
                "condition_str": "stackLength == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 38,
                "true_branch_start_line": 38
            },
            {
                "condition_end_line": 43,
                "condition_start_line": 43,
                "condition_str": "totalDamage <= shieldStrength",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 44,
                "true_branch_start_line": 44
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "not closestCharge['previousShot']",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 46,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 12,
                "header_start_line": 12,
                "header_str": "for index, action in enumerate(robotsProgram)",
                "loop_body_end_line": 27,
                "loop_body_start_line": 13,
                "loop_statement_end_line": 27,
                "loop_statement_start_line": 12
            },
            {
                "header_end_line": 35,
                "header_start_line": 35,
                "header_str": "for index, action in enumerate(robotsProgram[::-1])",
                "loop_body_end_line": 46,
                "loop_body_start_line": 36,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 35
            }
        ],
        "parameters": [
            [
                "robotsProgram",
                1,
                1
            ],
            [
                "shieldStrength",
                1,
                0
            ]
        ]
    },
    "277": {
        "filepath": "code/gcj_7966_20bfd_leastHacks_1_47.py",
        "function_end_line": 57,
        "function_id": 277,
        "function_name": "main",
        "function_start_line": 48,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for _ in range(T)",
                "loop_body_end_line": 54,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 56,
                "header_start_line": 56,
                "header_str": "for shieldStrength, robotsProgram in cases",
                "loop_body_end_line": 57,
                "loop_body_start_line": 57,
                "loop_statement_end_line": 57,
                "loop_statement_start_line": 56
            }
        ],
        "parameters": []
    },
    "278": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 6,
        "function_id": 278,
        "function_name": "debug",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "x",
                5,
                0
            ]
        ]
    },
    "279": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 8,
        "function_id": 279,
        "function_name": "read_int",
        "function_start_line": 7,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "280": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 10,
        "function_id": 280,
        "function_name": "read_float",
        "function_start_line": 9,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "281": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 12,
        "function_id": 281,
        "function_name": "read_words",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "282": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 14,
        "function_id": 282,
        "function_name": "read_ints",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "283": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 16,
        "function_id": 283,
        "function_name": "read_floats",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "284": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 83,
        "function_id": 284,
        "function_name": "solve_test_case",
        "function_start_line": 19,
        "if_statements": [
            {
                "condition_end_line": 23,
                "condition_start_line": 23,
                "condition_str": "curd == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 24,
                "true_branch_start_line": 24
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "curd > 36",
                "else_branch_end_line": 28,
                "else_branch_start_line": 27,
                "true_branch_end_line": 26,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "curd == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "curd <= 63",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 41,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 47,
                "condition_start_line": 47,
                "condition_str": "curd == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 48,
                "true_branch_start_line": 48
            },
            {
                "condition_end_line": 53,
                "condition_start_line": 53,
                "condition_str": "curd == 95",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 54,
                "true_branch_start_line": 54
            },
            {
                "condition_end_line": 59,
                "condition_start_line": 59,
                "condition_str": "curd == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 60,
                "true_branch_start_line": 60
            },
            {
                "condition_end_line": 61,
                "condition_start_line": 61,
                "condition_str": "not lv",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 65,
                "true_branch_start_line": 62
            },
            {
                "condition_end_line": 66,
                "condition_start_line": 66,
                "condition_str": "not rv",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 75,
                "true_branch_start_line": 67
            },
            {
                "condition_end_line": 70,
                "condition_start_line": 70,
                "condition_str": "not choice",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 74,
                "true_branch_start_line": 71
            },
            {
                "condition_end_line": 71,
                "condition_start_line": 71,
                "condition_str": "len(lv) > len(rv)",
                "else_branch_end_line": 74,
                "else_branch_start_line": 73,
                "true_branch_end_line": 72,
                "true_branch_start_line": 72
            },
            {
                "condition_end_line": 80,
                "condition_start_line": 80,
                "condition_str": "curd == -1",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 81,
                "true_branch_start_line": 81
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 21,
                "header_start_line": 21,
                "header_str": "while curd < 54",
                "loop_body_end_line": 30,
                "loop_body_start_line": 22,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 21
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "while curd < 72",
                "loop_body_end_line": 42,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 42,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 44,
                "header_start_line": 44,
                "header_str": "while True",
                "loop_body_end_line": 54,
                "loop_body_start_line": 45,
                "loop_statement_end_line": 54,
                "loop_statement_start_line": 44
            },
            {
                "header_end_line": 57,
                "header_start_line": 57,
                "header_str": "while curd < 99",
                "loop_body_end_line": 77,
                "loop_body_start_line": 58,
                "loop_statement_end_line": 77,
                "loop_statement_start_line": 57
            }
        ],
        "parameters": []
    },
    "285": {
        "filepath": "code/gcj_146185_14957c_solve_test_case_19_83.py",
        "function_end_line": 87,
        "function_id": 285,
        "function_name": "main",
        "function_start_line": 84,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 86,
                "header_start_line": 86,
                "header_str": "for tc in xrange(1, T+1)",
                "loop_body_end_line": 87,
                "loop_body_start_line": 87,
                "loop_statement_end_line": 87,
                "loop_statement_start_line": 86
            }
        ],
        "parameters": []
    },
    "286": {
        "filepath": "code/gcj_20993c_2928ec_vestigial_1_37.py",
        "function_end_line": 37,
        "function_id": 286,
        "function_name": "vestigial",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(row==column)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(len(row_digits)==column)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "(i ==(len(row_digits)))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 20,
                "true_branch_start_line": 19
            },
            {
                "condition_end_line": 21,
                "condition_start_line": 21,
                "condition_str": "(row_digits[i] == pinax[row][column])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 23,
                "true_branch_start_line": 22
            },
            {
                "condition_end_line": 25,
                "condition_start_line": 25,
                "condition_str": "(i== len(column_digits[column]))",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 27,
                "true_branch_start_line": 26
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "(column_digits[column][i] == pinax[row][column])",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 30,
                "true_branch_start_line": 29
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 6,
                "header_start_line": 6,
                "header_str": "for i in range(0, size)",
                "loop_body_end_line": 7,
                "loop_body_start_line": 7,
                "loop_statement_end_line": 7,
                "loop_statement_start_line": 6
            },
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for row in range(0, size)",
                "loop_body_end_line": 30,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 13,
                "header_start_line": 13,
                "header_str": "for column in range(0, size)",
                "loop_body_end_line": 30,
                "loop_body_start_line": 14,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 13
            },
            {
                "header_end_line": 17,
                "header_start_line": 17,
                "header_str": "for i in range(0, len(row_digits)+1)",
                "loop_body_end_line": 23,
                "loop_body_start_line": 18,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 17
            },
            {
                "header_end_line": 24,
                "header_start_line": 24,
                "header_str": "for i in range(0, len(column_digits[column])+1)",
                "loop_body_end_line": 30,
                "loop_body_start_line": 25,
                "loop_statement_end_line": 30,
                "loop_statement_start_line": 24
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for i in range(0, size)",
                "loop_body_end_line": 33,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": [
            [
                "pinax",
                1,
                0
            ]
        ]
    },
    "287": {
        "filepath": "code/gcj_20993c_2928ec_vestigial_1_37.py",
        "function_end_line": 46,
        "function_id": 287,
        "function_name": "main",
        "function_start_line": 38,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 40,
                "header_start_line": 40,
                "header_str": "for i in range(0, testCases)",
                "loop_body_end_line": 46,
                "loop_body_start_line": 41,
                "loop_statement_end_line": 46,
                "loop_statement_start_line": 40
            },
            {
                "header_end_line": 43,
                "header_start_line": 43,
                "header_str": "for j in range(0, size)",
                "loop_body_end_line": 44,
                "loop_body_start_line": 44,
                "loop_statement_end_line": 44,
                "loop_statement_start_line": 43
            }
        ],
        "parameters": []
    },
    "288": {
        "filepath": "code/gcj_3e068_40e8d_resuelve_2_22.py",
        "function_end_line": 22,
        "function_id": 288,
        "function_name": "resuelve",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "(D != 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 10
            },
            {
                "condition_end_line": 12,
                "condition_start_line": 12,
                "condition_str": "(el < N)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 13
            },
            {
                "condition_end_line": 14,
                "condition_start_line": 14,
                "condition_str": "(disp[el] == True)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 15,
                "true_branch_start_line": 15
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "(len(posibles) > 0)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 11,
                "header_start_line": 11,
                "header_str": "for el in flavours[1:]",
                "loop_body_end_line": 15,
                "loop_body_start_line": 12,
                "loop_statement_end_line": 15,
                "loop_statement_start_line": 11
            },
            {
                "header_end_line": 4,
                "header_start_line": 4,
                "header_str": "while(pasados < N)",
                "loop_body_end_line": 21,
                "loop_body_start_line": 5,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 4
            }
        ],
        "parameters": [
            [
                "disp",
                2,
                1
            ],
            [
                "N",
                2,
                0
            ],
            [
                "cuentas",
                2,
                2
            ]
        ]
    },
    "289": {
        "filepath": "code/gcj_3e068_40e8d_resuelve_2_22.py",
        "function_end_line": 27,
        "function_id": 289,
        "function_name": "solve",
        "function_start_line": 23,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "N",
                23,
                0
            ]
        ]
    },
    "290": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 4,
        "function_id": 290,
        "function_name": "debug",
        "function_start_line": 2,
        "if_statements": [
            {
                "condition_end_line": 3,
                "condition_start_line": 3,
                "condition_str": "False",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 4,
                "true_branch_start_line": 4
            }
        ],
        "loop_statements": [],
        "parameters": []
    },
    "291": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 7,
        "function_id": 291,
        "function_name": "write",
        "function_start_line": 5,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                5,
                0
            ]
        ]
    },
    "292": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 10,
        "function_id": 292,
        "function_name": "read",
        "function_start_line": 8,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "293": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 12,
        "function_id": 293,
        "function_name": "readi",
        "function_start_line": 11,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "294": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 14,
        "function_id": 294,
        "function_name": "readia",
        "function_start_line": 13,
        "if_statements": [],
        "loop_statements": [],
        "parameters": []
    },
    "295": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 22,
        "function_id": 295,
        "function_name": "cntForOne",
        "function_start_line": 15,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 18,
                "header_start_line": 18,
                "header_str": "while r > i",
                "loop_body_end_line": 21,
                "loop_body_start_line": 19,
                "loop_statement_end_line": 21,
                "loop_statement_start_line": 18
            }
        ],
        "parameters": [
            [
                "r",
                15,
                0
            ]
        ]
    },
    "296": {
        "filepath": "code/gcj_459f3_48a07_solve_23_43.py",
        "function_end_line": 43,
        "function_id": 296,
        "function_name": "solve",
        "function_start_line": 23,
        "if_statements": [
            {
                "condition_end_line": 27,
                "condition_start_line": 27,
                "condition_str": "b == 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 28,
                "true_branch_start_line": 28
            },
            {
                "condition_end_line": 35,
                "condition_start_line": 35,
                "condition_str": "cR > r or cB > b",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 36,
                "true_branch_start_line": 36
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "while True",
                "loop_body_end_line": 40,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 32
            }
        ],
        "parameters": []
    },
    "297": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 18,
        "function_id": 297,
        "function_name": "dbg_print",
        "function_start_line": 15,
        "if_statements": [
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "MY_DEBUG",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 18,
                "true_branch_start_line": 17
            }
        ],
        "loop_statements": [],
        "parameters": [
            [
                "s",
                15,
                0
            ]
        ]
    },
    "298": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 41,
        "function_id": 298,
        "function_name": "runSingleTest",
        "function_start_line": 21,
        "if_statements": [
            {
                "condition_end_line": 32,
                "condition_start_line": 32,
                "condition_str": "'CORRECT' == line",
                "else_branch_end_line": 40,
                "else_branch_start_line": 38,
                "true_branch_end_line": 33,
                "true_branch_start_line": 33
            },
            {
                "condition_end_line": 34,
                "condition_start_line": 34,
                "condition_str": "'TOO_SMALL' == line",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 35,
                "true_branch_start_line": 35
            },
            {
                "condition_end_line": 36,
                "condition_start_line": 36,
                "condition_str": "'TOO_BIG' == line",
                "else_branch_end_line": 40,
                "else_branch_start_line": 38,
                "true_branch_end_line": 37,
                "true_branch_start_line": 37
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 28,
                "header_start_line": 28,
                "header_str": "for i in xrange(n)",
                "loop_body_end_line": 40,
                "loop_body_start_line": 29,
                "loop_statement_end_line": 40,
                "loop_statement_start_line": 28
            }
        ],
        "parameters": [
            [
                "outF",
                21,
                1
            ],
            [
                "inpF",
                21,
                0
            ]
        ]
    },
    "299": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 44,
        "function_id": 299,
        "function_name": "__init__",
        "function_start_line": 43,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "inpF",
                43,
                1
            ],
            [
                "self",
                43,
                0
            ]
        ]
    },
    "300": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 48,
        "function_id": 300,
        "function_name": "readline",
        "function_start_line": 45,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                45,
                0
            ]
        ]
    },
    "301": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 52,
        "function_id": 301,
        "function_name": "readline_safe",
        "function_start_line": 49,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                49,
                0
            ]
        ]
    },
    "302": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 55,
        "function_id": 302,
        "function_name": "__init__",
        "function_start_line": 54,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "self",
                54,
                0
            ],
            [
                "outF",
                54,
                1
            ]
        ]
    },
    "303": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 57,
        "function_id": 303,
        "function_name": "__getattr__",
        "function_start_line": 56,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "name",
                56,
                1
            ],
            [
                "self",
                56,
                0
            ]
        ]
    },
    "304": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 61,
        "function_id": 304,
        "function_name": "write",
        "function_start_line": 58,
        "if_statements": [],
        "loop_statements": [],
        "parameters": [
            [
                "str",
                58,
                1
            ],
            [
                "self",
                58,
                0
            ]
        ]
    },
    "305": {
        "filepath": "code/gcj_523_5299_runSingleTest_21_41.py",
        "function_end_line": 72,
        "function_id": 305,
        "function_name": "myMain",
        "function_start_line": 62,
        "if_statements": [
            {
                "condition_end_line": 63,
                "condition_start_line": 63,
                "condition_str": "(MY_DEBUG)",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 64,
                "true_branch_start_line": 64
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 69,
                "header_start_line": 69,
                "header_str": "for i in xrange(1, testsCount + 1)",
                "loop_body_end_line": 72,
                "loop_body_start_line": 70,
                "loop_statement_end_line": 72,
                "loop_statement_start_line": 69
            }
        ],
        "parameters": [
            [
                "outF",
                62,
                1
            ],
            [
                "inpF",
                62,
                0
            ]
        ]
    },
    "306": {
        "filepath": "code/gcj_79cb_181fa_solve_1_21.py",
        "function_end_line": 21,
        "function_id": 306,
        "function_name": "solve",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 9,
                "condition_start_line": 9,
                "condition_str": "L[i] > L[i+2]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 13,
                "true_branch_start_line": 10
            },
            {
                "condition_end_line": 18,
                "condition_start_line": 18,
                "condition_str": "L[i] != expected",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 19,
                "true_branch_start_line": 19
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "while not done",
                "loop_body_end_line": 14,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 5
            },
            {
                "header_end_line": 8,
                "header_start_line": 8,
                "header_str": "while i < lengthList-2",
                "loop_body_end_line": 14,
                "loop_body_start_line": 9,
                "loop_statement_end_line": 14,
                "loop_statement_start_line": 8
            },
            {
                "header_end_line": 16,
                "header_start_line": 16,
                "header_str": "while c < lengthList",
                "loop_body_end_line": 20,
                "loop_body_start_line": 17,
                "loop_statement_end_line": 20,
                "loop_statement_start_line": 16
            }
        ],
        "parameters": [
            [
                "L",
                1,
                0
            ]
        ]
    },
    "307": {
        "filepath": "code/gcj_79cb_181fa_solve_1_21.py",
        "function_end_line": 33,
        "function_id": 307,
        "function_name": "main",
        "function_start_line": 22,
        "if_statements": [
            {
                "condition_end_line": 30,
                "condition_start_line": 30,
                "condition_str": "result >= 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 31,
                "true_branch_start_line": 31
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 25,
                "header_start_line": 25,
                "header_str": "while i < tc",
                "loop_body_end_line": 33,
                "loop_body_start_line": 26,
                "loop_statement_end_line": 33,
                "loop_statement_start_line": 25
            }
        ],
        "parameters": []
    },
    "308": {
        "filepath": "code/gcj_33871f_33c115_solve_case_1_48.py",
        "function_end_line": 48,
        "function_id": 308,
        "function_name": "solve_case",
        "function_start_line": 1,
        "if_statements": [
            {
                "condition_end_line": 6,
                "condition_start_line": 6,
                "condition_str": "i > 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 7,
                "true_branch_start_line": 7
            },
            {
                "condition_end_line": 10,
                "condition_start_line": 10,
                "condition_str": "i < 0",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 11,
                "true_branch_start_line": 11
            },
            {
                "condition_end_line": 16,
                "condition_start_line": 16,
                "condition_str": "pos_times[0][0] == received",
                "else_branch_end_line": 34,
                "else_branch_start_line": 25,
                "true_branch_end_line": 24,
                "true_branch_start_line": 17
            },
            {
                "condition_end_line": 28,
                "condition_start_line": 28,
                "condition_str": "i > current_time",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 29,
                "true_branch_start_line": 29
            },
            {
                "condition_end_line": 33,
                "condition_start_line": 33,
                "condition_str": "i <= current_time",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 34,
                "true_branch_start_line": 34
            },
            {
                "condition_end_line": 40,
                "condition_start_line": 40,
                "condition_str": "A == comp",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 41
            },
            {
                "condition_end_line": 41,
                "condition_start_line": 41,
                "condition_str": "abs_times[A] > abs_times[B]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 43,
                "true_branch_start_line": 42
            },
            {
                "condition_end_line": 44,
                "condition_start_line": 44,
                "condition_str": "B == comp",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 45
            },
            {
                "condition_end_line": 45,
                "condition_start_line": 45,
                "condition_str": "abs_times[B] > abs_times[A]",
                "else_branch_end_line": 0,
                "else_branch_start_line": 0,
                "true_branch_end_line": 47,
                "true_branch_start_line": 46
            }
        ],
        "loop_statements": [
            {
                "header_end_line": 5,
                "header_start_line": 5,
                "header_str": "for index, i in enumerate(in_times)",
                "loop_body_end_line": 7,
                "loop_body_start_line": 6,
                "loop_statement_end_line": 7,
                "loop_statement_start_line": 5
            },
            {
                "header_end_line": 9,
                "header_start_line": 9,
                "header_str": "for index, i in enumerate(in_times)",
                "loop_body_end_line": 11,
                "loop_body_start_line": 10,
                "loop_statement_end_line": 11,
                "loop_statement_start_line": 9
            },
            {
                "header_end_line": 27,
                "header_start_line": 27,
                "header_str": "for i in abs_times",
                "loop_body_end_line": 29,
                "loop_body_start_line": 28,
                "loop_statement_end_line": 29,
                "loop_statement_start_line": 27
            },
            {
                "header_end_line": 32,
                "header_start_line": 32,
                "header_str": "for i in abs_times",
                "loop_body_end_line": 34,
                "loop_body_start_line": 33,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 32
            },
            {
                "header_end_line": 38,
                "header_start_line": 38,
                "header_str": "for time, comp in sorted_receipt[1:]",
                "loop_body_end_line": 47,
                "loop_body_start_line": 39,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 38
            },
            {
                "header_end_line": 39,
                "header_start_line": 39,
                "header_str": "for index, (A, B) in enumerate(edges)",
                "loop_body_end_line": 47,
                "loop_body_start_line": 40,
                "loop_statement_end_line": 47,
                "loop_statement_start_line": 39
            },
            {
                "header_end_line": 15,
                "header_start_line": 15,
                "header_str": "while pos_times",
                "loop_body_end_line": 34,
                "loop_body_start_line": 16,
                "loop_statement_end_line": 34,
                "loop_statement_start_line": 15
            },
            {
                "header_end_line": 19,
                "header_start_line": 19,
                "header_str": "while pos_times and pos_times[0][0] == received",
                "loop_body_end_line": 23,
                "loop_body_start_line": 20,
                "loop_statement_end_line": 23,
                "loop_statement_start_line": 19
            }
        ],
        "parameters": [
            [
                "edges",
                1,
                1
            ],
            [
                "in_times",
                1,
                0
            ]
        ]
    },
    "309": {
        "filepath": "code/gcj_33871f_33c115_solve_case_1_48.py",
        "function_end_line": 58,
        "function_id": 309,
        "function_name": "main",
        "function_start_line": 49,
        "if_statements": [],
        "loop_statements": [
            {
                "header_end_line": 51,
                "header_start_line": 51,
                "header_str": "for case_no in xrange(1, T+1)",
                "loop_body_end_line": 58,
                "loop_body_start_line": 52,
                "loop_statement_end_line": 58,
                "loop_statement_start_line": 51
            },
            {
                "header_end_line": 55,
                "header_start_line": 55,
                "header_str": "for edge_no in xrange(num_edges)",
                "loop_body_end_line": 56,
                "loop_body_start_line": 56,
                "loop_statement_end_line": 56,
                "loop_statement_start_line": 55
            }
        ],
        "parameters": []
    }
}